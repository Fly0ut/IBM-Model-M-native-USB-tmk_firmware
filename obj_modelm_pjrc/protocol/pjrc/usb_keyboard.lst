   1               		.file	"usb_keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.usb_keyboard_print_report,"ax",@progbits
  12               	.global	usb_keyboard_print_report
  14               	usb_keyboard_print_report:
  15               	.LVL0:
  16               	.LFB2:
  17               		.file 1 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c"
   1:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** /* USB Keyboard Plus Debug Channel Example for Teensy USB Development Board
   2:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * http://www.pjrc.com/teensy/usb_keyboard.html
   3:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * Copyright (c) 2009 PJRC.COM, LLC
   4:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  *
   5:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * of this software and associated documentation files (the "Software"), to deal
   7:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * in the Software without restriction, including without limitation the rights
   8:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * copies of the Software, and to permit persons to whom the Software is
  10:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * furnished to do so, subject to the following conditions:
  11:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  *
  12:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * The above copyright notice and this permission notice shall be included in
  13:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * all copies or substantial portions of the Software.
  14:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  *
  15:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  * THE SOFTWARE.
  22:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****  */
  23:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  24:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include <avr/interrupt.h>
  25:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include <avr/pgmspace.h>
  26:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include "keycode.h"
  27:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include "usb_keyboard.h"
  28:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include "print.h"
  29:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include "debug.h"
  30:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include "util.h"
  31:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #include "host.h"
  32:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  33:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  34:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // protocol setting from the host.  We use exactly the same report
  35:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // either way, so this variable only stores the setting since we
  36:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // are required to be able to report which setting is in use.
  37:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** uint8_t keyboard_protocol=1;
  38:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  39:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // the idle configuration, how often we send the report to the
  40:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // host (ms * 4) even when it hasn't changed
  41:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // Windows and Linux set 0 while OS X sets 6(24ms) by SET_IDLE request.
  42:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** uint8_t keyboard_idle=125;
  43:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  44:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // count until idle timeout
  45:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** uint8_t usb_keyboard_idle_count=0;
  46:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  47:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** // 1=num lock, 2=caps lock, 4=scroll lock, 8=compose, 16=kana
  48:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** volatile uint8_t usb_keyboard_leds=0;
  49:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  50:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  51:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** static inline int8_t send_report(report_keyboard_t *report, uint8_t endpoint, uint8_t keys_start, u
  52:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  53:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  54:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** int8_t usb_keyboard_send_report(report_keyboard_t *report)
  55:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** {
  56:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     int8_t result = 0;
  57:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  58:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #ifdef NKRO_ENABLE
  59:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     if (keyboard_nkro)
  60:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****         result = send_report(report, KBD2_ENDPOINT, 0, KBD2_SIZE);
  61:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     else
  62:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** #endif
  63:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     {
  64:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****         result = send_report(report, KBD_ENDPOINT, 0, KBD_SIZE);
  65:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     }
  66:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  67:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     if (result) return result;
  68:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     usb_keyboard_idle_count = 0;
  69:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     usb_keyboard_print_report(report);
  70:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     return 0;
  71:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** }
  72:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  73:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** void usb_keyboard_print_report(report_keyboard_t *report)
  74:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** {
  18               		.loc 1 74 1 view -0
  19               		.cfi_startproc
  20               		.loc 1 74 1 is_stmt 0 view .LVU1
  21 0000 CF92      		push r12
  22               	.LCFI0:
  23               		.cfi_def_cfa_offset 3
  24               		.cfi_offset 12, -2
  25 0002 DF92      		push r13
  26               	.LCFI1:
  27               		.cfi_def_cfa_offset 4
  28               		.cfi_offset 13, -3
  29 0004 EF92      		push r14
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 5
  32               		.cfi_offset 14, -4
  33 0006 FF92      		push r15
  34               	.LCFI3:
  35               		.cfi_def_cfa_offset 6
  36               		.cfi_offset 15, -5
  37 0008 0F93      		push r16
  38               	.LCFI4:
  39               		.cfi_def_cfa_offset 7
  40               		.cfi_offset 16, -6
  41 000a 1F93      		push r17
  42               	.LCFI5:
  43               		.cfi_def_cfa_offset 8
  44               		.cfi_offset 17, -7
  45 000c CF93      		push r28
  46               	.LCFI6:
  47               		.cfi_def_cfa_offset 9
  48               		.cfi_offset 28, -8
  49 000e DF93      		push r29
  50               	.LCFI7:
  51               		.cfi_def_cfa_offset 10
  52               		.cfi_offset 29, -9
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 8 */
  56               	.L__stack_usage = 8
  57 0010 EC01      		movw r28,r24
  75:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     if (!debug_keyboard) return;
  58               		.loc 1 75 5 is_stmt 1 view .LVU2
  59               		.loc 1 75 10 is_stmt 0 view .LVU3
  60 0012 8091 0000 		lds r24,debug_config
  61               	.LVL1:
  62               		.loc 1 75 8 view .LVU4
  63 0016 82FF      		sbrs r24,2
  64 0018 00C0      		rjmp .L1
  76:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     print("keys: ");
  65               		.loc 1 76 5 is_stmt 1 view .LVU5
  66               	.LBB2:
  67               		.loc 1 76 5 view .LVU6
  68               		.loc 1 76 5 view .LVU7
  69               	.LBE2:
  70 001a 80E0      		ldi r24,lo8(__c.5)
  71 001c 90E0      		ldi r25,hi8(__c.5)
  72 001e 0E94 0000 		call xputs
  73               	.LVL2:
  77:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     for (int i = 0; i < KEYBOARD_REPORT_KEYS; i++) { phex(report->keys[i]); print(" "); }
  74               		.loc 1 77 5 view .LVU8
  75               	.LBB3:
  76               		.loc 1 77 10 view .LVU9
  77               		.loc 1 77 23 view .LVU10
  78 0022 8E01      		movw r16,r28
  79 0024 0E5F      		subi r16,-2
  80 0026 1F4F      		sbci r17,-1
  81 0028 6E01      		movw r12,r28
  82 002a 88E0      		ldi r24,8
  83 002c C80E      		add r12,r24
  84 002e D11C      		adc r13,__zero_reg__
  85               		.loc 1 77 54 is_stmt 0 view .LVU11
  86 0030 80E0      		ldi r24,lo8(__c.4)
  87 0032 E82E      		mov r14,r24
  88 0034 80E0      		ldi r24,hi8(__c.4)
  89 0036 F82E      		mov r15,r24
  90               	.LVL3:
  91               	.L3:
  92               		.loc 1 77 54 is_stmt 1 discriminator 3 view .LVU12
  93 0038 F801      		movw r30,r16
  94 003a 8191      		ld r24,Z+
  95 003c 8F01      		movw r16,r30
  96               	.LVL4:
  97               	.LBB4:
  98               		.loc 1 77 54 discriminator 3 view .LVU13
  99               		.loc 1 77 54 discriminator 3 view .LVU14
 100               	.LBE4:
 101 003e 1F92      		push __zero_reg__
 102               	.LCFI8:
 103               		.cfi_def_cfa_offset 11
 104 0040 8F93      		push r24
 105               	.LCFI9:
 106               		.cfi_def_cfa_offset 12
 107 0042 FF92      		push r15
 108               	.LCFI10:
 109               		.cfi_def_cfa_offset 13
 110 0044 EF92      		push r14
 111               	.LCFI11:
 112               		.cfi_def_cfa_offset 14
 113 0046 0E94 0000 		call __xprintf
 114               	.LVL5:
 115               		.loc 1 77 77 discriminator 3 view .LVU15
 116               	.LBB5:
 117               		.loc 1 77 77 discriminator 3 view .LVU16
 118               		.loc 1 77 77 discriminator 3 view .LVU17
 119               	.LBE5:
 120 004a 80E0      		ldi r24,lo8(__c.3)
 121 004c 90E0      		ldi r25,hi8(__c.3)
 122 004e 0E94 0000 		call xputs
 123               	.LVL6:
 124               		.loc 1 77 48 discriminator 3 view .LVU18
 125               		.loc 1 77 23 discriminator 3 view .LVU19
 126 0052 0F90      		pop __tmp_reg__
 127 0054 0F90      		pop __tmp_reg__
 128 0056 0F90      		pop __tmp_reg__
 129 0058 0F90      		pop __tmp_reg__
 130               	.LCFI12:
 131               		.cfi_def_cfa_offset 10
 132 005a 0C15      		cp r16,r12
 133 005c 1D05      		cpc r17,r13
 134 005e 01F4      		brne .L3
 135               	.LBE3:
  78:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     print(" mods: "); phex(report->mods); print("\n");
 136               		.loc 1 78 5 view .LVU20
 137               	.LBB6:
 138               		.loc 1 78 5 view .LVU21
 139               		.loc 1 78 5 view .LVU22
 140               	.LBE6:
 141 0060 80E0      		ldi r24,lo8(__c.2)
 142 0062 90E0      		ldi r25,hi8(__c.2)
 143 0064 0E94 0000 		call xputs
 144               	.LVL7:
 145               		.loc 1 78 23 view .LVU23
 146               	.LBB7:
 147               		.loc 1 78 23 view .LVU24
 148               		.loc 1 78 23 view .LVU25
 149               	.LBE7:
 150 0068 8881      		ld r24,Y
 151 006a 1F92      		push __zero_reg__
 152               	.LCFI13:
 153               		.cfi_def_cfa_offset 11
 154 006c 8F93      		push r24
 155               	.LCFI14:
 156               		.cfi_def_cfa_offset 12
 157 006e 80E0      		ldi r24,lo8(__c.1)
 158 0070 90E0      		ldi r25,hi8(__c.1)
 159 0072 9F93      		push r25
 160               	.LCFI15:
 161               		.cfi_def_cfa_offset 13
 162 0074 8F93      		push r24
 163               	.LCFI16:
 164               		.cfi_def_cfa_offset 14
 165 0076 0E94 0000 		call __xprintf
 166               	.LVL8:
 167               		.loc 1 78 43 view .LVU26
 168               	.LBB8:
 169               		.loc 1 78 43 view .LVU27
 170               		.loc 1 78 43 view .LVU28
 171               	.LBE8:
 172 007a 0F90      		pop __tmp_reg__
 173 007c 0F90      		pop __tmp_reg__
 174 007e 0F90      		pop __tmp_reg__
 175 0080 0F90      		pop __tmp_reg__
 176               	.LCFI17:
 177               		.cfi_def_cfa_offset 10
 178 0082 80E0      		ldi r24,lo8(__c.0)
 179 0084 90E0      		ldi r25,hi8(__c.0)
 180               	/* epilogue start */
  79:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** }
 181               		.loc 1 79 1 is_stmt 0 view .LVU29
 182 0086 DF91      		pop r29
 183 0088 CF91      		pop r28
 184               	.LVL9:
 185               		.loc 1 79 1 view .LVU30
 186 008a 1F91      		pop r17
 187 008c 0F91      		pop r16
 188               	.LVL10:
 189               		.loc 1 79 1 view .LVU31
 190 008e FF90      		pop r15
 191 0090 EF90      		pop r14
 192 0092 DF90      		pop r13
 193 0094 CF90      		pop r12
 194               	.LVL11:
  78:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     print(" mods: "); phex(report->mods); print("\n");
 195               		.loc 1 78 43 view .LVU32
 196 0096 0C94 0000 		jmp xputs
 197               	.LVL12:
 198               	.L1:
 199               	/* epilogue start */
 200               		.loc 1 79 1 view .LVU33
 201 009a DF91      		pop r29
 202 009c CF91      		pop r28
 203               	.LVL13:
 204               		.loc 1 79 1 view .LVU34
 205 009e 1F91      		pop r17
 206 00a0 0F91      		pop r16
 207 00a2 FF90      		pop r15
 208 00a4 EF90      		pop r14
 209 00a6 DF90      		pop r13
 210 00a8 CF90      		pop r12
 211 00aa 0895      		ret
 212               		.cfi_endproc
 213               	.LFE2:
 215               		.section	.text.usb_keyboard_send_report,"ax",@progbits
 216               	.global	usb_keyboard_send_report
 218               	usb_keyboard_send_report:
 219               	.LVL14:
 220               	.LFB1:
  55:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     int8_t result = 0;
 221               		.loc 1 55 1 is_stmt 1 view -0
 222               		.cfi_startproc
  55:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     int8_t result = 0;
 223               		.loc 1 55 1 is_stmt 0 view .LVU36
 224 0000 0F93      		push r16
 225               	.LCFI18:
 226               		.cfi_def_cfa_offset 3
 227               		.cfi_offset 16, -2
 228 0002 1F93      		push r17
 229               	.LCFI19:
 230               		.cfi_def_cfa_offset 4
 231               		.cfi_offset 17, -3
 232 0004 CF93      		push r28
 233               	.LCFI20:
 234               		.cfi_def_cfa_offset 5
 235               		.cfi_offset 28, -4
 236 0006 DF93      		push r29
 237               	.LCFI21:
 238               		.cfi_def_cfa_offset 6
 239               		.cfi_offset 29, -5
 240               	/* prologue: function */
 241               	/* frame size = 0 */
 242               	/* stack size = 4 */
 243               	.L__stack_usage = 4
 244 0008 EC01      		movw r28,r24
  56:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
 245               		.loc 1 56 5 is_stmt 1 view .LVU37
 246               	.LVL15:
  64:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     }
 247               		.loc 1 64 9 view .LVU38
 248               	.LBB13:
 249               	.LBI13:
  80:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  81:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  82:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** static inline int8_t send_report(report_keyboard_t *report, uint8_t endpoint, uint8_t keys_start, u
 250               		.loc 1 82 22 view .LVU39
 251               	.LBB14:
  83:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** {
  84:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     uint8_t intr_state, timeout;
 252               		.loc 1 84 5 view .LVU40
  85:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
  86:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     if (!usb_configured()) return -1;
 253               		.loc 1 86 5 view .LVU41
 254               		.loc 1 86 10 is_stmt 0 view .LVU42
 255 000a 0E94 0000 		call usb_configured
 256               	.LVL16:
 257               		.loc 1 86 8 view .LVU43
 258 000e 8111      		cpse r24,__zero_reg__
 259 0010 00C0      		rjmp .L6
 260               	.L9:
 261               		.loc 1 86 35 view .LVU44
 262 0012 8FEF      		ldi r24,lo8(-1)
 263               	.LVL17:
 264               	.L5:
 265               	/* epilogue start */
 266               		.loc 1 86 35 view .LVU45
 267               	.LBE14:
 268               	.LBE13:
  71:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
 269               		.loc 1 71 1 view .LVU46
 270 0014 DF91      		pop r29
 271 0016 CF91      		pop r28
 272               	.LVL18:
  71:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** 
 273               		.loc 1 71 1 view .LVU47
 274 0018 1F91      		pop r17
 275 001a 0F91      		pop r16
 276 001c 0895      		ret
 277               	.LVL19:
 278               	.L6:
 279               	.LBB17:
 280               	.LBB16:
  87:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     intr_state = SREG;
 281               		.loc 1 87 5 is_stmt 1 view .LVU48
 282               		.loc 1 87 16 is_stmt 0 view .LVU49
 283 001e 8FB7      		in r24,__SREG__
 284               	.LVL20:
  88:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     cli();
 285               		.loc 1 88 5 is_stmt 1 view .LVU50
 286               	/* #APP */
 287               	 ;  88 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c" 1
 288 0020 F894      		cli
 289               	 ;  0 "" 2
  89:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     UENUM = endpoint;
 290               		.loc 1 89 5 view .LVU51
 291               		.loc 1 89 11 is_stmt 0 view .LVU52
 292               	/* #NOAPP */
 293 0022 91E0      		ldi r25,lo8(1)
 294 0024 9093 E900 		sts 233,r25
  90:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     timeout = UDFNUML + 50;
 295               		.loc 1 90 5 is_stmt 1 view .LVU53
 296               		.loc 1 90 15 is_stmt 0 view .LVU54
 297 0028 1091 E400 		lds r17,228
 298               		.loc 1 90 13 view .LVU55
 299 002c 1E5C      		subi r17,lo8(-(50))
 300               	.LVL21:
  91:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     while (1) {
  92:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // are we ready to transmit?
  93:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             if (UEINTX & (1<<RWAL)) break;
  94:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             SREG = intr_state;
  95:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // has the USB gone offline?
  96:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             if (!usb_configured()) return -1;
  97:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // have we waited too long?
  98:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             if (UDFNUML == timeout) return -1;
  99:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // get ready to try checking again
 100:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             intr_state = SREG;
 101:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             cli();
 102:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             UENUM = endpoint;
 301               		.loc 1 102 19 view .LVU56
 302 002e 01E0      		ldi r16,lo8(1)
 303               	.L10:
  91:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     while (1) {
 304               		.loc 1 91 5 is_stmt 1 view .LVU57
  93:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             SREG = intr_state;
 305               		.loc 1 93 13 view .LVU58
  93:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             SREG = intr_state;
 306               		.loc 1 93 17 is_stmt 0 view .LVU59
 307 0030 9091 E800 		lds r25,232
  93:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             SREG = intr_state;
 308               		.loc 1 93 16 view .LVU60
 309 0034 95FD      		sbrc r25,5
 310 0036 00C0      		rjmp .L8
  94:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // has the USB gone offline?
 311               		.loc 1 94 13 is_stmt 1 view .LVU61
  94:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // has the USB gone offline?
 312               		.loc 1 94 18 is_stmt 0 view .LVU62
 313 0038 8FBF      		out __SREG__,r24
  96:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // have we waited too long?
 314               		.loc 1 96 13 is_stmt 1 view .LVU63
  96:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // have we waited too long?
 315               		.loc 1 96 18 is_stmt 0 view .LVU64
 316 003a 0E94 0000 		call usb_configured
 317               	.LVL22:
  96:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // have we waited too long?
 318               		.loc 1 96 16 view .LVU65
 319 003e 8823      		tst r24
 320 0040 01F0      		breq .L9
  98:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // get ready to try checking again
 321               		.loc 1 98 13 is_stmt 1 view .LVU66
  98:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // get ready to try checking again
 322               		.loc 1 98 17 is_stmt 0 view .LVU67
 323 0042 8091 E400 		lds r24,228
  98:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // get ready to try checking again
 324               		.loc 1 98 16 view .LVU68
 325 0046 1817      		cp r17,r24
 326 0048 01F0      		breq .L9
 100:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             cli();
 327               		.loc 1 100 13 is_stmt 1 view .LVU69
 100:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             cli();
 328               		.loc 1 100 24 is_stmt 0 view .LVU70
 329 004a 8FB7      		in r24,__SREG__
 330               	.LVL23:
 101:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             UENUM = endpoint;
 331               		.loc 1 101 13 is_stmt 1 view .LVU71
 332               	/* #APP */
 333               	 ;  101 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c" 1
 334 004c F894      		cli
 335               	 ;  0 "" 2
 336               		.loc 1 102 13 view .LVU72
 337               		.loc 1 102 19 is_stmt 0 view .LVU73
 338               	/* #NOAPP */
 339 004e 0093 E900 		sts 233,r16
  91:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             // are we ready to transmit?
 340               		.loc 1 91 11 is_stmt 1 view .LVU74
  93:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             SREG = intr_state;
 341               		.loc 1 93 16 is_stmt 0 view .LVU75
 342 0052 00C0      		rjmp .L10
 343               	.L8:
  93:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             SREG = intr_state;
 344               		.loc 1 93 16 view .LVU76
 345 0054 FE01      		movw r30,r28
 346 0056 9E01      		movw r18,r28
 347 0058 285F      		subi r18,-8
 348 005a 3F4F      		sbci r19,-1
 349               	.L11:
 350               	.LVL24:
 351               	.LBB15:
 103:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     }
 104:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     for (uint8_t i = keys_start; i < keys_end; i++) {
 105:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             UEDATX = report->raw[i];
 352               		.loc 1 105 13 is_stmt 1 view .LVU77
 353               		.loc 1 105 33 is_stmt 0 view .LVU78
 354 005c 9191      		ld r25,Z+
 355               	.LVL25:
 356               		.loc 1 105 20 view .LVU79
 357 005e 9093 F100 		sts 241,r25
 104:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             UEDATX = report->raw[i];
 358               		.loc 1 104 49 is_stmt 1 view .LVU80
 359               	.LVL26:
 104:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****             UEDATX = report->raw[i];
 360               		.loc 1 104 36 view .LVU81
 361 0062 2E17      		cp r18,r30
 362 0064 3F07      		cpc r19,r31
 363 0066 01F4      		brne .L11
 364               	.LBE15:
 106:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     }
 107:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     UEINTX = 0x3A;
 365               		.loc 1 107 5 view .LVU82
 366               		.loc 1 107 12 is_stmt 0 view .LVU83
 367 0068 9AE3      		ldi r25,lo8(58)
 368 006a 9093 E800 		sts 232,r25
 108:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     SREG = intr_state;
 369               		.loc 1 108 5 is_stmt 1 view .LVU84
 370               		.loc 1 108 10 is_stmt 0 view .LVU85
 371 006e 8FBF      		out __SREG__,r24
 109:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     return 0;
 372               		.loc 1 109 5 is_stmt 1 view .LVU86
 373               	.LVL27:
 374               		.loc 1 109 5 is_stmt 0 view .LVU87
 375               	.LBE16:
 376               	.LBE17:
  67:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     usb_keyboard_idle_count = 0;
 377               		.loc 1 67 5 is_stmt 1 view .LVU88
  68:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     usb_keyboard_print_report(report);
 378               		.loc 1 68 5 view .LVU89
  68:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     usb_keyboard_print_report(report);
 379               		.loc 1 68 29 is_stmt 0 view .LVU90
 380 0070 1092 0000 		sts usb_keyboard_idle_count,__zero_reg__
  69:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c ****     return 0;
 381               		.loc 1 69 5 is_stmt 1 view .LVU91
 382 0074 CE01      		movw r24,r28
 383 0076 0E94 0000 		call usb_keyboard_print_report
 384               	.LVL28:
  70:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** }
 385               		.loc 1 70 5 view .LVU92
  70:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** }
 386               		.loc 1 70 12 is_stmt 0 view .LVU93
 387 007a 80E0      		ldi r24,0
 388               	.LVL29:
  70:./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.c **** }
 389               		.loc 1 70 12 view .LVU94
 390 007c 00C0      		rjmp .L5
 391               		.cfi_endproc
 392               	.LFE1:
 394               		.section	.progmem.data.__c.0,"a"
 397               	__c.0:
 398 0000 0A00      		.string	"\n"
 399               		.section	.progmem.data.__c.1,"a"
 402               	__c.1:
 403 0000 2530 3258 		.string	"%02X"
 403      00
 404               		.section	.progmem.data.__c.2,"a"
 407               	__c.2:
 408 0000 206D 6F64 		.string	" mods: "
 408      733A 2000 
 409               		.section	.progmem.data.__c.3,"a"
 412               	__c.3:
 413 0000 2000      		.string	" "
 414               		.section	.progmem.data.__c.4,"a"
 417               	__c.4:
 418 0000 2530 3258 		.string	"%02X"
 418      00
 419               		.section	.progmem.data.__c.5,"a"
 422               	__c.5:
 423 0000 6B65 7973 		.string	"keys: "
 423      3A20 00
 424               	.global	usb_keyboard_leds
 425               		.section	.bss.usb_keyboard_leds,"aw",@nobits
 428               	usb_keyboard_leds:
 429 0000 00        		.zero	1
 430               	.global	usb_keyboard_idle_count
 431               		.section	.bss.usb_keyboard_idle_count,"aw",@nobits
 434               	usb_keyboard_idle_count:
 435 0000 00        		.zero	1
 436               	.global	keyboard_idle
 437               		.section	.data.keyboard_idle,"aw"
 440               	keyboard_idle:
 441 0000 7D        		.byte	125
 442               	.global	keyboard_protocol
 443               		.section	.data.keyboard_protocol,"aw"
 446               	keyboard_protocol:
 447 0000 01        		.byte	1
 448               		.text
 449               	.Letext0:
 450               		.file 2 "/usr/avr/include/stdint.h"
 451               		.file 3 "./tmk_keyboard/tmk_core/common/report.h"
 452               		.file 4 "./tmk_keyboard/tmk_core/common/host.h"
 453               		.file 5 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.h"
 454               		.file 6 "./tmk_keyboard/tmk_core/common/debug.h"
 455               		.file 7 "./tmk_keyboard/tmk_core/common/avr/xprintf.h"
 456               		.file 8 "./tmk_keyboard/tmk_core/protocol/pjrc/usb.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_keyboard.c
     /tmp/cctaXwEs.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cctaXwEs.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cctaXwEs.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cctaXwEs.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cctaXwEs.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cctaXwEs.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cctaXwEs.s:14     .text.usb_keyboard_print_report:0000000000000000 usb_keyboard_print_report
     /tmp/cctaXwEs.s:422    .progmem.data.__c.5:0000000000000000 __c.5
     /tmp/cctaXwEs.s:417    .progmem.data.__c.4:0000000000000000 __c.4
     /tmp/cctaXwEs.s:412    .progmem.data.__c.3:0000000000000000 __c.3
     /tmp/cctaXwEs.s:407    .progmem.data.__c.2:0000000000000000 __c.2
     /tmp/cctaXwEs.s:402    .progmem.data.__c.1:0000000000000000 __c.1
     /tmp/cctaXwEs.s:397    .progmem.data.__c.0:0000000000000000 __c.0
     /tmp/cctaXwEs.s:218    .text.usb_keyboard_send_report:0000000000000000 usb_keyboard_send_report
     /tmp/cctaXwEs.s:434    .bss.usb_keyboard_idle_count:0000000000000000 usb_keyboard_idle_count
     /tmp/cctaXwEs.s:428    .bss.usb_keyboard_leds:0000000000000000 usb_keyboard_leds
     /tmp/cctaXwEs.s:440    .data.keyboard_idle:0000000000000000 keyboard_idle
     /tmp/cctaXwEs.s:446    .data.keyboard_protocol:0000000000000000 keyboard_protocol

UNDEFINED SYMBOLS
debug_config
xputs
__xprintf
usb_configured
__do_copy_data
__do_clear_bss
