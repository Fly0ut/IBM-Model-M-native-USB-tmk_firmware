   1               		.file	"usb_debug.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.sendchar,"ax",@progbits
  12               	.global	sendchar
  14               	sendchar:
  15               	.LVL0:
  16               	.LFB0:
  17               		.file 1 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c"
   1:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** /* USB Keyboard Plus Debug Channel Example for Teensy USB Development Board
   2:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * http://www.pjrc.com/teensy/usb_keyboard.html
   3:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * Copyright (c) 2009 PJRC.COM, LLC
   4:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  *
   5:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * of this software and associated documentation files (the "Software"), to deal
   7:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * in the Software without restriction, including without limitation the rights
   8:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * copies of the Software, and to permit persons to whom the Software is
  10:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * furnished to do so, subject to the following conditions:
  11:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  *
  12:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * The above copyright notice and this permission notice shall be included in
  13:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * all copies or substantial portions of the Software.
  14:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  *
  15:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  * THE SOFTWARE.
  22:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c ****  */
  23:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  24:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** #include <avr/interrupt.h>
  25:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** #include "sendchar.h"
  26:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** #include "usb_debug.h"
  27:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  28:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  29:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** // the time remaining before we transmit any partially full
  30:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** // packet, or send a zero length packet.
  31:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** volatile uint8_t debug_flush_timer=0;
  32:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  33:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  34:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** int8_t sendchar(uint8_t c)
  35:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** {
  18               		.loc 1 35 1 view -0
  19               		.cfi_startproc
  20               		.loc 1 35 1 is_stmt 0 view .LVU1
  21 0000 1F93      		push r17
  22               	.LCFI0:
  23               		.cfi_def_cfa_offset 3
  24               		.cfi_offset 17, -2
  25 0002 CF93      		push r28
  26               	.LCFI1:
  27               		.cfi_def_cfa_offset 4
  28               		.cfi_offset 28, -3
  29 0004 DF93      		push r29
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 5
  32               		.cfi_offset 29, -4
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 3 */
  36               	.L__stack_usage = 3
  37 0006 C82F      		mov r28,r24
  36:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	static uint8_t previous_timeout=0;
  38               		.loc 1 36 2 is_stmt 1 view .LVU2
  37:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	uint8_t timeout, intr_state;
  39               		.loc 1 37 2 view .LVU3
  38:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  39:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// if we're not online (enumerated and configured), error
  40:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	if (!usb_configured()) return -1;
  40               		.loc 1 40 2 view .LVU4
  41               		.loc 1 40 7 is_stmt 0 view .LVU5
  42 0008 0E94 0000 		call usb_configured
  43               	.LVL1:
  44               		.loc 1 40 5 view .LVU6
  45 000c 8111      		cpse r24,__zero_reg__
  46 000e 00C0      		rjmp .L2
  47               	.L18:
  41:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// interrupts are disabled so these functions can be
  42:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// used from the main program or interrupt context,
  43:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// even both in the same program!
  44:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	intr_state = SREG;
  45:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	cli();
  46:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	UENUM = DEBUG_TX_ENDPOINT;
  47:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// if we gave up due to timeout before, don't wait again
  48:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	if (previous_timeout) {
  49:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		if (!(UEINTX & (1<<RWAL))) {
  50:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			SREG = intr_state;
  51:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			return -1;
  52:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		}
  53:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		previous_timeout = 0;
  54:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
  55:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// wait for the FIFO to be ready to accept data
  56:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	timeout = UDFNUML + 4;
  57:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	while (1) {
  58:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// are we ready to transmit?
  59:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		if (UEINTX & (1<<RWAL)) break;
  60:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		SREG = intr_state;
  61:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// have we waited too long?
  62:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		if (UDFNUML == timeout) {
  63:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			previous_timeout = 1;
  64:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			return -1;
  48               		.loc 1 64 4 is_stmt 1 view .LVU7
  49               		.loc 1 64 11 is_stmt 0 view .LVU8
  50 0010 8FEF      		ldi r24,lo8(-1)
  51               	.L1:
  52               	/* epilogue start */
  65:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		}
  66:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// has the USB gone offline?
  67:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		if (!usb_configured()) return -1;
  68:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// get ready to try checking again
  69:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		intr_state = SREG;
  70:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		cli();
  71:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UENUM = DEBUG_TX_ENDPOINT;
  72:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
  73:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// actually write the byte into the FIFO
  74:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	UEDATX = c;
  75:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// if this completed a packet, transmit it now!
  76:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	if (!(UEINTX & (1<<RWAL))) {
  77:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UEINTX = 0x3A;
  78:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		debug_flush_timer = 0;
  79:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	} else {
  80:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		debug_flush_timer = 2;
  81:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
  82:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	SREG = intr_state;
  83:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	return 0;
  84:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** }
  53               		.loc 1 84 1 view .LVU9
  54 0012 DF91      		pop r29
  55 0014 CF91      		pop r28
  56               	.LVL2:
  57               		.loc 1 84 1 view .LVU10
  58 0016 1F91      		pop r17
  59 0018 0895      		ret
  60               	.LVL3:
  61               	.L2:
  44:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	cli();
  62               		.loc 1 44 2 is_stmt 1 view .LVU11
  44:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	cli();
  63               		.loc 1 44 13 is_stmt 0 view .LVU12
  64 001a 9FB7      		in r25,__SREG__
  65               	.LVL4:
  45:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	UENUM = DEBUG_TX_ENDPOINT;
  66               		.loc 1 45 2 is_stmt 1 view .LVU13
  67               	/* #APP */
  68               	 ;  45 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c" 1
  69 001c F894      		cli
  70               	 ;  0 "" 2
  46:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// if we gave up due to timeout before, don't wait again
  71               		.loc 1 46 2 view .LVU14
  46:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// if we gave up due to timeout before, don't wait again
  72               		.loc 1 46 8 is_stmt 0 view .LVU15
  73               	/* #NOAPP */
  74 001e 83E0      		ldi r24,lo8(3)
  75 0020 8093 E900 		sts 233,r24
  48:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		if (!(UEINTX & (1<<RWAL))) {
  76               		.loc 1 48 2 is_stmt 1 view .LVU16
  48:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		if (!(UEINTX & (1<<RWAL))) {
  77               		.loc 1 48 5 is_stmt 0 view .LVU17
  78 0024 8091 0000 		lds r24,previous_timeout.0
  79 0028 8823      		tst r24
  80 002a 01F0      		breq .L4
  49:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			SREG = intr_state;
  81               		.loc 1 49 3 is_stmt 1 view .LVU18
  49:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			SREG = intr_state;
  82               		.loc 1 49 9 is_stmt 0 view .LVU19
  83 002c 8091 E800 		lds r24,232
  49:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			SREG = intr_state;
  84               		.loc 1 49 6 view .LVU20
  85 0030 85FD      		sbrc r24,5
  86 0032 00C0      		rjmp .L5
  50:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			return -1;
  87               		.loc 1 50 4 is_stmt 1 view .LVU21
  50:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			return -1;
  88               		.loc 1 50 9 is_stmt 0 view .LVU22
  89 0034 9FBF      		out __SREG__,r25
  51:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		}
  90               		.loc 1 51 4 is_stmt 1 view .LVU23
  91 0036 00C0      		rjmp .L18
  92               	.L5:
  53:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
  93               		.loc 1 53 3 view .LVU24
  53:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
  94               		.loc 1 53 20 is_stmt 0 view .LVU25
  95 0038 1092 0000 		sts previous_timeout.0,__zero_reg__
  96               	.L4:
  56:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	while (1) {
  97               		.loc 1 56 2 is_stmt 1 view .LVU26
  56:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	while (1) {
  98               		.loc 1 56 12 is_stmt 0 view .LVU27
  99 003c D091 E400 		lds r29,228
  56:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	while (1) {
 100               		.loc 1 56 10 view .LVU28
 101 0040 DC5F      		subi r29,lo8(-(4))
 102               	.LVL5:
  71:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
 103               		.loc 1 71 9 view .LVU29
 104 0042 13E0      		ldi r17,lo8(3)
 105               	.L9:
  57:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// are we ready to transmit?
 106               		.loc 1 57 2 is_stmt 1 view .LVU30
  59:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		SREG = intr_state;
 107               		.loc 1 59 3 view .LVU31
  59:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		SREG = intr_state;
 108               		.loc 1 59 7 is_stmt 0 view .LVU32
 109 0044 8091 E800 		lds r24,232
  59:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		SREG = intr_state;
 110               		.loc 1 59 6 view .LVU33
 111 0048 85FD      		sbrc r24,5
 112 004a 00C0      		rjmp .L6
  60:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// have we waited too long?
 113               		.loc 1 60 3 is_stmt 1 view .LVU34
  60:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// have we waited too long?
 114               		.loc 1 60 8 is_stmt 0 view .LVU35
 115 004c 9FBF      		out __SREG__,r25
  62:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			previous_timeout = 1;
 116               		.loc 1 62 3 is_stmt 1 view .LVU36
  62:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			previous_timeout = 1;
 117               		.loc 1 62 7 is_stmt 0 view .LVU37
 118 004e 8091 E400 		lds r24,228
  62:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			previous_timeout = 1;
 119               		.loc 1 62 6 view .LVU38
 120 0052 8D13      		cpse r24,r29
 121 0054 00C0      		rjmp .L7
  63:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			return -1;
 122               		.loc 1 63 4 is_stmt 1 view .LVU39
  63:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			return -1;
 123               		.loc 1 63 21 is_stmt 0 view .LVU40
 124 0056 81E0      		ldi r24,lo8(1)
 125 0058 8093 0000 		sts previous_timeout.0,r24
 126 005c 00C0      		rjmp .L18
 127               	.L7:
  67:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// get ready to try checking again
 128               		.loc 1 67 3 is_stmt 1 view .LVU41
  67:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// get ready to try checking again
 129               		.loc 1 67 8 is_stmt 0 view .LVU42
 130 005e 0E94 0000 		call usb_configured
 131               	.LVL6:
  67:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// get ready to try checking again
 132               		.loc 1 67 6 view .LVU43
 133 0062 8823      		tst r24
 134 0064 01F0      		breq .L18
  69:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		cli();
 135               		.loc 1 69 3 is_stmt 1 view .LVU44
  69:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		cli();
 136               		.loc 1 69 14 is_stmt 0 view .LVU45
 137 0066 9FB7      		in r25,__SREG__
 138               	.LVL7:
  70:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UENUM = DEBUG_TX_ENDPOINT;
 139               		.loc 1 70 3 is_stmt 1 view .LVU46
 140               	/* #APP */
 141               	 ;  70 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c" 1
 142 0068 F894      		cli
 143               	 ;  0 "" 2
  71:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
 144               		.loc 1 71 3 view .LVU47
  71:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
 145               		.loc 1 71 9 is_stmt 0 view .LVU48
 146               	/* #NOAPP */
 147 006a 1093 E900 		sts 233,r17
  57:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		// are we ready to transmit?
 148               		.loc 1 57 8 is_stmt 1 view .LVU49
  59:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		SREG = intr_state;
 149               		.loc 1 59 6 is_stmt 0 view .LVU50
 150 006e 00C0      		rjmp .L9
 151               	.L6:
  74:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// if this completed a packet, transmit it now!
 152               		.loc 1 74 2 is_stmt 1 view .LVU51
  74:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	// if this completed a packet, transmit it now!
 153               		.loc 1 74 9 is_stmt 0 view .LVU52
 154 0070 C093 F100 		sts 241,r28
  76:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UEINTX = 0x3A;
 155               		.loc 1 76 2 is_stmt 1 view .LVU53
  76:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UEINTX = 0x3A;
 156               		.loc 1 76 8 is_stmt 0 view .LVU54
 157 0074 8091 E800 		lds r24,232
  76:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UEINTX = 0x3A;
 158               		.loc 1 76 5 view .LVU55
 159 0078 85FD      		sbrc r24,5
 160 007a 00C0      		rjmp .L10
  77:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		debug_flush_timer = 0;
 161               		.loc 1 77 3 is_stmt 1 view .LVU56
  77:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		debug_flush_timer = 0;
 162               		.loc 1 77 10 is_stmt 0 view .LVU57
 163 007c 8AE3      		ldi r24,lo8(58)
 164 007e 8093 E800 		sts 232,r24
  78:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	} else {
 165               		.loc 1 78 3 is_stmt 1 view .LVU58
  78:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	} else {
 166               		.loc 1 78 21 is_stmt 0 view .LVU59
 167 0082 1092 0000 		sts debug_flush_timer,__zero_reg__
 168               	.L11:
  82:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	return 0;
 169               		.loc 1 82 2 is_stmt 1 view .LVU60
  82:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	return 0;
 170               		.loc 1 82 7 is_stmt 0 view .LVU61
 171 0086 9FBF      		out __SREG__,r25
  83:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** }
 172               		.loc 1 83 2 is_stmt 1 view .LVU62
  83:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** }
 173               		.loc 1 83 9 is_stmt 0 view .LVU63
 174 0088 80E0      		ldi r24,0
 175 008a 00C0      		rjmp .L1
 176               	.L10:
  80:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
 177               		.loc 1 80 3 is_stmt 1 view .LVU64
  80:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
 178               		.loc 1 80 21 is_stmt 0 view .LVU65
 179 008c 82E0      		ldi r24,lo8(2)
 180 008e 8093 0000 		sts debug_flush_timer,r24
 181 0092 00C0      		rjmp .L11
 182               		.cfi_endproc
 183               	.LFE0:
 185               		.section	.text.usb_debug_flush_output,"ax",@progbits
 186               	.global	usb_debug_flush_output
 188               	usb_debug_flush_output:
 189               	.LFB1:
  85:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  86:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** // immediately transmit any buffered output.
  87:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** void usb_debug_flush_output(void)
  88:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** {
 190               		.loc 1 88 1 is_stmt 1 view -0
 191               		.cfi_startproc
 192               	/* prologue: function */
 193               	/* frame size = 0 */
 194               	/* stack size = 0 */
 195               	.L__stack_usage = 0
  89:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	uint8_t intr_state;
 196               		.loc 1 89 2 view .LVU67
  90:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 
  91:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	intr_state = SREG;
 197               		.loc 1 91 2 view .LVU68
 198               		.loc 1 91 13 is_stmt 0 view .LVU69
 199 0000 8FB7      		in r24,__SREG__
 200               	.LVL8:
  92:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	cli();
 201               		.loc 1 92 2 is_stmt 1 view .LVU70
 202               	/* #APP */
 203               	 ;  92 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c" 1
 204 0002 F894      		cli
 205               	 ;  0 "" 2
  93:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	if (debug_flush_timer) {
 206               		.loc 1 93 2 view .LVU71
 207               		.loc 1 93 6 is_stmt 0 view .LVU72
 208               	/* #NOAPP */
 209 0004 9091 0000 		lds r25,debug_flush_timer
 210               		.loc 1 93 5 view .LVU73
 211 0008 9923      		tst r25
 212 000a 01F0      		breq .L20
  94:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UENUM = DEBUG_TX_ENDPOINT;
 213               		.loc 1 94 3 is_stmt 1 view .LVU74
 214               		.loc 1 94 9 is_stmt 0 view .LVU75
 215 000c 93E0      		ldi r25,lo8(3)
 216 000e 9093 E900 		sts 233,r25
  95:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		while ((UEINTX & (1<<RWAL))) {
 217               		.loc 1 95 3 is_stmt 1 view .LVU76
 218               	.L21:
 219               		.loc 1 95 10 view .LVU77
 220               		.loc 1 95 11 is_stmt 0 view .LVU78
 221 0012 9091 E800 		lds r25,232
 222               		.loc 1 95 10 view .LVU79
 223 0016 95FD      		sbrc r25,5
 224 0018 00C0      		rjmp .L22
  96:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 			UEDATX = 0;
  97:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		}
  98:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		UEINTX = 0x3A;
 225               		.loc 1 98 3 is_stmt 1 view .LVU80
 226               		.loc 1 98 10 is_stmt 0 view .LVU81
 227 001a 9AE3      		ldi r25,lo8(58)
 228 001c 9093 E800 		sts 232,r25
  99:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		debug_flush_timer = 0;
 229               		.loc 1 99 3 is_stmt 1 view .LVU82
 230               		.loc 1 99 21 is_stmt 0 view .LVU83
 231 0020 1092 0000 		sts debug_flush_timer,__zero_reg__
 232               	.L20:
 100:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	}
 101:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 	SREG = intr_state;
 233               		.loc 1 101 2 is_stmt 1 view .LVU84
 234               		.loc 1 101 7 is_stmt 0 view .LVU85
 235 0024 8FBF      		out __SREG__,r24
 236               	/* epilogue start */
 102:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** }
 237               		.loc 1 102 1 view .LVU86
 238 0026 0895      		ret
 239               	.L22:
  96:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		}
 240               		.loc 1 96 4 is_stmt 1 view .LVU87
  96:./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.c **** 		}
 241               		.loc 1 96 11 is_stmt 0 view .LVU88
 242 0028 1092 F100 		sts 241,__zero_reg__
 243 002c 00C0      		rjmp .L21
 244               		.cfi_endproc
 245               	.LFE1:
 247               		.section	.bss.previous_timeout.0,"aw",@nobits
 250               	previous_timeout.0:
 251 0000 00        		.zero	1
 252               	.global	debug_flush_timer
 253               		.section	.bss.debug_flush_timer,"aw",@nobits
 256               	debug_flush_timer:
 257 0000 00        		.zero	1
 258               		.text
 259               	.Letext0:
 260               		.file 2 "/usr/avr/include/stdint.h"
 261               		.file 3 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_debug.h"
 262               		.file 4 "./tmk_keyboard/tmk_core/protocol/pjrc/usb.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_debug.c
     /tmp/cc9ZicJ6.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc9ZicJ6.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc9ZicJ6.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc9ZicJ6.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc9ZicJ6.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc9ZicJ6.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc9ZicJ6.s:14     .text.sendchar:0000000000000000 sendchar
     /tmp/cc9ZicJ6.s:250    .bss.previous_timeout.0:0000000000000000 previous_timeout.0
     /tmp/cc9ZicJ6.s:256    .bss.debug_flush_timer:0000000000000000 debug_flush_timer
     /tmp/cc9ZicJ6.s:188    .text.usb_debug_flush_output:0000000000000000 usb_debug_flush_output

UNDEFINED SYMBOLS
usb_configured
__do_clear_bss
