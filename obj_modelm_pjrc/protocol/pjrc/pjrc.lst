   1               		.file	"pjrc.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.keyboard_leds,"ax",@progbits
  13               	keyboard_leds:
  14               	.LFB1:
  15               		.file 1 "./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c"
   1:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** /*
   2:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
   4:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** (at your option) any later version.
   8:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
   9:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** GNU General Public License for more details.
  13:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  14:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** You should have received a copy of the GNU General Public License
  15:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** */
  17:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  18:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #include <stdint.h>
  19:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #include "usb_keyboard.h"
  20:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #include "usb_mouse.h"
  21:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #include "usb_extra.h"
  22:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #include "host_driver.h"
  23:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #include "pjrc.h"
  24:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  25:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  26:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** /*------------------------------------------------------------------*
  27:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****  * Host driver
  28:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****  *------------------------------------------------------------------*/
  29:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static uint8_t keyboard_leds(void);
  30:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_keyboard(report_keyboard_t *report);
  31:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_mouse(report_mouse_t *report);
  32:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_system(uint16_t data);
  33:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_consumer(uint16_t data);
  34:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  35:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static host_driver_t driver = {
  36:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****         keyboard_leds,
  37:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****         send_keyboard,
  38:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****         send_mouse,
  39:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****         send_system,
  40:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****         send_consumer
  41:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** };
  42:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  43:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** host_driver_t *pjrc_driver(void)
  44:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** {
  45:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     return &driver;
  46:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
  47:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  48:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static uint8_t keyboard_leds(void) {
  16               		.loc 1 48 36 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  49:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     return usb_keyboard_leds;
  22               		.loc 1 49 5 view .LVU1
  23               		.loc 1 49 12 is_stmt 0 view .LVU2
  24 0000 8091 0000 		lds r24,usb_keyboard_leds
  25               	/* epilogue start */
  50:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
  26               		.loc 1 50 1 view .LVU3
  27 0004 0895      		ret
  28               		.cfi_endproc
  29               	.LFE1:
  31               		.section	.text.send_mouse,"ax",@progbits
  33               	send_mouse:
  34               	.LVL0:
  35               	.LFB3:
  51:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  52:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_keyboard(report_keyboard_t *report)
  53:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** {
  54:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     usb_keyboard_send_report(report);
  55:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
  56:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  57:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_mouse(report_mouse_t *report)
  58:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** {
  36               		.loc 1 58 1 is_stmt 1 view -0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  59:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #ifdef MOUSE_ENABLE
  60:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     usb_mouse_send(report->x, report->y, report->v, report->h, report->buttons);
  61:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #endif
  62:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
  42               		.loc 1 62 1 view .LVU5
  43               	/* epilogue start */
  44 0000 0895      		ret
  45               		.cfi_endproc
  46               	.LFE3:
  48               		.section	.text.send_consumer,"ax",@progbits
  50               	send_consumer:
  51               	.LVL1:
  52               	.LFB5:
  63:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  64:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_system(uint16_t data)
  65:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** {
  66:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #ifdef EXTRAKEY_ENABLE
  67:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     usb_extra_system_send(data);
  68:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #endif
  69:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
  70:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
  71:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** static void send_consumer(uint16_t data)
  72:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** {
  53               		.loc 1 72 1 view -0
  54               		.cfi_startproc
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 0 */
  58               	.L__stack_usage = 0
  73:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #ifdef EXTRAKEY_ENABLE
  74:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     usb_extra_consumer_send(data);
  59               		.loc 1 74 5 view .LVU7
  60 0000 0C94 0000 		jmp usb_extra_consumer_send
  61               	.LVL2:
  62               		.loc 1 74 5 is_stmt 0 view .LVU8
  63               		.cfi_endproc
  64               	.LFE5:
  66               		.section	.text.send_system,"ax",@progbits
  68               	send_system:
  69               	.LVL3:
  70               	.LFB4:
  65:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #ifdef EXTRAKEY_ENABLE
  71               		.loc 1 65 1 is_stmt 1 view -0
  72               		.cfi_startproc
  73               	/* prologue: function */
  74               	/* frame size = 0 */
  75               	/* stack size = 0 */
  76               	.L__stack_usage = 0
  67:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #endif
  77               		.loc 1 67 5 view .LVU10
  78 0000 0C94 0000 		jmp usb_extra_system_send
  79               	.LVL4:
  67:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** #endif
  80               		.loc 1 67 5 is_stmt 0 view .LVU11
  81               		.cfi_endproc
  82               	.LFE4:
  84               		.section	.text.send_keyboard,"ax",@progbits
  86               	send_keyboard:
  87               	.LVL5:
  88               	.LFB2:
  53:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     usb_keyboard_send_report(report);
  89               		.loc 1 53 1 is_stmt 1 view -0
  90               		.cfi_startproc
  91               	/* prologue: function */
  92               	/* frame size = 0 */
  93               	/* stack size = 0 */
  94               	.L__stack_usage = 0
  54:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
  95               		.loc 1 54 5 view .LVU13
  96 0000 0C94 0000 		jmp usb_keyboard_send_report
  97               	.LVL6:
  54:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
  98               		.loc 1 54 5 is_stmt 0 view .LVU14
  99               		.cfi_endproc
 100               	.LFE2:
 102               		.section	.text.pjrc_driver,"ax",@progbits
 103               	.global	pjrc_driver
 105               	pjrc_driver:
 106               	.LFB0:
  44:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c ****     return &driver;
 107               		.loc 1 44 1 is_stmt 1 view -0
 108               		.cfi_startproc
 109               	/* prologue: function */
 110               	/* frame size = 0 */
 111               	/* stack size = 0 */
 112               	.L__stack_usage = 0
  45:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** }
 113               		.loc 1 45 5 view .LVU16
  46:./tmk_keyboard/tmk_core/protocol/pjrc/pjrc.c **** 
 114               		.loc 1 46 1 is_stmt 0 view .LVU17
 115 0000 80E0      		ldi r24,lo8(driver)
 116 0002 90E0      		ldi r25,hi8(driver)
 117               	/* epilogue start */
 118 0004 0895      		ret
 119               		.cfi_endproc
 120               	.LFE0:
 122               		.section	.data.driver,"aw"
 125               	driver:
 126 0000 0000      		.word	gs(keyboard_leds)
 127 0002 0000      		.word	gs(send_keyboard)
 128 0004 0000      		.word	gs(send_mouse)
 129 0006 0000      		.word	gs(send_system)
 130 0008 0000      		.word	gs(send_consumer)
 131               		.text
 132               	.Letext0:
 133               		.file 2 "/usr/avr/include/stdint.h"
 134               		.file 3 "./tmk_keyboard/tmk_core/common/report.h"
 135               		.file 4 "./tmk_keyboard/tmk_core/common/host_driver.h"
 136               		.file 5 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_keyboard.h"
 137               		.file 6 "./tmk_keyboard/tmk_core/protocol/pjrc/usb_extra.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pjrc.c
     /tmp/cc1k8gGN.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc1k8gGN.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc1k8gGN.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc1k8gGN.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc1k8gGN.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc1k8gGN.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc1k8gGN.s:13     .text.keyboard_leds:0000000000000000 keyboard_leds
     /tmp/cc1k8gGN.s:33     .text.send_mouse:0000000000000000 send_mouse
     /tmp/cc1k8gGN.s:50     .text.send_consumer:0000000000000000 send_consumer
     /tmp/cc1k8gGN.s:68     .text.send_system:0000000000000000 send_system
     /tmp/cc1k8gGN.s:86     .text.send_keyboard:0000000000000000 send_keyboard
     /tmp/cc1k8gGN.s:105    .text.pjrc_driver:0000000000000000 pjrc_driver
     /tmp/cc1k8gGN.s:125    .data.driver:0000000000000000 driver

UNDEFINED SYMBOLS
usb_keyboard_leds
usb_extra_consumer_send
usb_extra_system_send
usb_keyboard_send_report
__do_copy_data
