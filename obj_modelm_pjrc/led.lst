   1               		.file	"led.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.led_set,"ax",@progbits
  12               	.global	led_set
  14               	led_set:
  15               	.LVL0:
  16               	.LFB0:
  17               		.file 1 "led.c"
   1:led.c         **** /*
   2:led.c         **** Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:led.c         **** 
   4:led.c         **** This program is free software: you can redistribute it and/or modify
   5:led.c         **** it under the terms of the GNU General Public License as published by
   6:led.c         **** the Free Software Foundation, either version 2 of the License, or
   7:led.c         **** (at your option) any later version.
   8:led.c         **** 
   9:led.c         **** This program is distributed in the hope that it will be useful,
  10:led.c         **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:led.c         **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:led.c         **** GNU General Public License for more details.
  13:led.c         **** 
  14:led.c         **** You should have received a copy of the GNU General Public License
  15:led.c         **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:led.c         **** */
  17:led.c         **** 
  18:led.c         **** #include <avr/io.h>
  19:led.c         **** #include "led.h"
  20:led.c         **** 
  21:led.c         **** 
  22:led.c         **** void led_set(uint8_t usb_led)
  23:led.c         **** {
  18               		.loc 1 23 1 view -0
  19               		.cfi_startproc
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24:led.c         ****     DDRB |= (1 << 6) | (1 << 5) | (1 << 4);
  24               		.loc 1 24 5 view .LVU1
  25               		.loc 1 24 10 is_stmt 0 view .LVU2
  26 0000 94B1      		in r25,0x4
  27 0002 9067      		ori r25,lo8(112)
  28 0004 94B9      		out 0x4,r25
  25:led.c         **** 
  26:led.c         ****     if (usb_led & (1<<USB_LED_CAPS_LOCK)) {
  29               		.loc 1 26 5 is_stmt 1 view .LVU3
  30               		.loc 1 26 8 is_stmt 0 view .LVU4
  31 0006 81FF      		sbrs r24,1
  32 0008 00C0      		rjmp .L2
  27:led.c         ****         PORTB &= ~(1 << 4);
  33               		.loc 1 27 9 is_stmt 1 view .LVU5
  34               		.loc 1 27 15 is_stmt 0 view .LVU6
  35 000a 2C98      		cbi 0x5,4
  36               	.L3:
  28:led.c         ****     } else {
  29:led.c         ****         PORTB |= (1 << 4);
  30:led.c         ****     }
  31:led.c         **** 
  32:led.c         ****     if (usb_led & (1<<USB_LED_SCROLL_LOCK)) {
  37               		.loc 1 32 5 is_stmt 1 view .LVU7
  38               		.loc 1 32 8 is_stmt 0 view .LVU8
  39 000c 82FF      		sbrs r24,2
  40 000e 00C0      		rjmp .L4
  33:led.c         ****         PORTB &= ~(1 << 5);
  41               		.loc 1 33 9 is_stmt 1 view .LVU9
  42               		.loc 1 33 15 is_stmt 0 view .LVU10
  43 0010 2D98      		cbi 0x5,5
  44               	.L5:
  34:led.c         ****     } else {
  35:led.c         ****         PORTB |= (1 << 5);
  36:led.c         ****     }
  37:led.c         **** 
  38:led.c         ****     if (usb_led & (1<<USB_LED_NUM_LOCK)) {
  45               		.loc 1 38 5 is_stmt 1 view .LVU11
  46               		.loc 1 38 8 is_stmt 0 view .LVU12
  47 0012 80FF      		sbrs r24,0
  48 0014 00C0      		rjmp .L6
  39:led.c         ****         PORTB &= ~(1 << 6);
  49               		.loc 1 39 9 is_stmt 1 view .LVU13
  50               		.loc 1 39 15 is_stmt 0 view .LVU14
  51 0016 2E98      		cbi 0x5,6
  52 0018 0895      		ret
  53               	.L2:
  29:led.c         ****     }
  54               		.loc 1 29 9 is_stmt 1 view .LVU15
  29:led.c         ****     }
  55               		.loc 1 29 15 is_stmt 0 view .LVU16
  56 001a 2C9A      		sbi 0x5,4
  57 001c 00C0      		rjmp .L3
  58               	.L4:
  35:led.c         ****     }
  59               		.loc 1 35 9 is_stmt 1 view .LVU17
  35:led.c         ****     }
  60               		.loc 1 35 15 is_stmt 0 view .LVU18
  61 001e 2D9A      		sbi 0x5,5
  62 0020 00C0      		rjmp .L5
  63               	.L6:
  40:led.c         ****     } else {
  41:led.c         ****         PORTB |= (1 << 6);
  64               		.loc 1 41 9 is_stmt 1 view .LVU19
  65               		.loc 1 41 15 is_stmt 0 view .LVU20
  66 0022 2E9A      		sbi 0x5,6
  67               	/* epilogue start */
  42:led.c         ****     }
  43:led.c         **** }
  68               		.loc 1 43 1 view .LVU21
  69 0024 0895      		ret
  70               		.cfi_endproc
  71               	.LFE0:
  73               		.text
  74               	.Letext0:
  75               		.file 2 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 led.c
     /tmp/ccNuBI8L.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccNuBI8L.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccNuBI8L.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccNuBI8L.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccNuBI8L.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccNuBI8L.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccNuBI8L.s:14     .text.led_set:0000000000000000 led_set

NO UNDEFINED SYMBOLS
