   1               		.file	"keymap.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.action_for_key,"ax",@progbits
  12               	.global	action_for_key
  14               	action_for_key:
  15               	.LVL0:
  16               	.LFB10:
  17               		.file 1 "./tmk_keyboard/tmk_core/common/keymap.c"
   1:./tmk_keyboard/tmk_core/common/keymap.c **** /*
   2:./tmk_keyboard/tmk_core/common/keymap.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_keyboard/tmk_core/common/keymap.c **** 
   4:./tmk_keyboard/tmk_core/common/keymap.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_keyboard/tmk_core/common/keymap.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_keyboard/tmk_core/common/keymap.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_keyboard/tmk_core/common/keymap.c **** (at your option) any later version.
   8:./tmk_keyboard/tmk_core/common/keymap.c **** 
   9:./tmk_keyboard/tmk_core/common/keymap.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_keyboard/tmk_core/common/keymap.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_keyboard/tmk_core/common/keymap.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_keyboard/tmk_core/common/keymap.c **** GNU General Public License for more details.
  13:./tmk_keyboard/tmk_core/common/keymap.c **** 
  14:./tmk_keyboard/tmk_core/common/keymap.c **** You should have received a copy of the GNU General Public License
  15:./tmk_keyboard/tmk_core/common/keymap.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_keyboard/tmk_core/common/keymap.c **** */
  17:./tmk_keyboard/tmk_core/common/keymap.c **** #include "keymap.h"
  18:./tmk_keyboard/tmk_core/common/keymap.c **** #include "report.h"
  19:./tmk_keyboard/tmk_core/common/keymap.c **** #include "keycode.h"
  20:./tmk_keyboard/tmk_core/common/keymap.c **** #include "action_layer.h"
  21:./tmk_keyboard/tmk_core/common/keymap.c **** #include "action.h"
  22:./tmk_keyboard/tmk_core/common/keymap.c **** #include "action_macro.h"
  23:./tmk_keyboard/tmk_core/common/keymap.c **** #include "wait.h"
  24:./tmk_keyboard/tmk_core/common/keymap.c **** #include "debug.h"
  25:./tmk_keyboard/tmk_core/common/keymap.c **** #include "bootloader.h"
  26:./tmk_keyboard/tmk_core/common/keymap.c **** 
  27:./tmk_keyboard/tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  28:./tmk_keyboard/tmk_core/common/keymap.c **** extern keymap_config_t keymap_config;
  29:./tmk_keyboard/tmk_core/common/keymap.c **** #endif
  30:./tmk_keyboard/tmk_core/common/keymap.c **** 
  31:./tmk_keyboard/tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode);
  32:./tmk_keyboard/tmk_core/common/keymap.c **** 
  33:./tmk_keyboard/tmk_core/common/keymap.c **** 
  34:./tmk_keyboard/tmk_core/common/keymap.c **** /* converts key to action */
  35:./tmk_keyboard/tmk_core/common/keymap.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  36:./tmk_keyboard/tmk_core/common/keymap.c **** {
  18               		.loc 1 36 1 view -0
  19               		.cfi_startproc
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  37:./tmk_keyboard/tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
  24               		.loc 1 37 5 view .LVU1
  25               		.loc 1 37 23 is_stmt 0 view .LVU2
  26 0000 0E94 0000 		call keymap_key_to_keycode
  27               	.LVL1:
  38:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
  28               		.loc 1 38 5 is_stmt 1 view .LVU3
  29 0004 803E      		cpi r24,lo8(-32)
  30 0006 00F4      		brsh .L2
  31 0008 803C      		cpi r24,lo8(-64)
  32 000a 00F0      		brlo .+2
  33 000c 00C0      		rjmp .L3
  34 000e 8133      		cpi r24,lo8(49)
  35 0010 01F4      		brne .+2
  36 0012 00C0      		rjmp .L4
  37 0014 00F4      		brsh .L5
  38 0016 8932      		cpi r24,lo8(41)
  39 0018 01F4      		brne .+2
  40 001a 00C0      		rjmp .L6
  41 001c 8A32      		cpi r24,lo8(42)
  42 001e 01F4      		brne .+2
  43 0020 00C0      		rjmp .L7
  44               	.L8:
  45               	.LVL2:
  46               	.LBB104:
  47               	.LBB105:
  39:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
  40:./tmk_keyboard/tmk_core/common/keymap.c ****             return keymap_fn_to_action(keycode);
  41:./tmk_keyboard/tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  42:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_CAPSLOCK:
  43:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_LOCKING_CAPS:
  44:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock || keymap_config.capslock_to_control) {
  45:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
  46:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  47:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
  48:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_LCTL:
  49:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock) {
  50:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
  51:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  52:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_LCTL);
  53:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_LALT:
  54:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  55:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  56:./tmk_keyboard/tmk_core/common/keymap.c ****                     return keycode_to_action(ACTION_NO);
  57:./tmk_keyboard/tmk_core/common/keymap.c ****                 }
  58:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LGUI);
  59:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  60:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_LALT);
  61:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_LGUI:
  62:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  63:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
  64:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  65:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  66:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(ACTION_NO);
  67:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  68:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_LGUI);
  69:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_RALT:
  70:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  71:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  72:./tmk_keyboard/tmk_core/common/keymap.c ****                     return keycode_to_action(ACTION_NO);
  73:./tmk_keyboard/tmk_core/common/keymap.c ****                 }
  74:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RGUI);
  75:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  76:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_RALT);
  77:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_RGUI:
  78:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  79:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
  80:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  81:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  82:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(ACTION_NO);
  83:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  84:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_RGUI);
  85:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_GRAVE:
  86:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  87:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
  88:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  89:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_GRAVE);
  90:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_ESC:
  91:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  92:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
  93:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  94:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_ESC);
  95:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_BSLASH:
  96:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
  97:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
  98:./tmk_keyboard/tmk_core/common/keymap.c ****             }
  99:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSLASH);
 100:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_BSPACE:
 101:./tmk_keyboard/tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 102:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 103:./tmk_keyboard/tmk_core/common/keymap.c ****             }
 104:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSPACE);
 105:./tmk_keyboard/tmk_core/common/keymap.c **** #endif
 106:./tmk_keyboard/tmk_core/common/keymap.c ****         default:
 107:./tmk_keyboard/tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
 108:./tmk_keyboard/tmk_core/common/keymap.c ****     }
 109:./tmk_keyboard/tmk_core/common/keymap.c **** }
 110:./tmk_keyboard/tmk_core/common/keymap.c **** 
 111:./tmk_keyboard/tmk_core/common/keymap.c **** 
 112:./tmk_keyboard/tmk_core/common/keymap.c **** /* Macro */
 113:./tmk_keyboard/tmk_core/common/keymap.c **** __attribute__ ((weak))
 114:./tmk_keyboard/tmk_core/common/keymap.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 115:./tmk_keyboard/tmk_core/common/keymap.c **** {
 116:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)record;
 117:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)id;
 118:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)opt;
 119:./tmk_keyboard/tmk_core/common/keymap.c ****     return MACRO_NONE;
 120:./tmk_keyboard/tmk_core/common/keymap.c **** }
 121:./tmk_keyboard/tmk_core/common/keymap.c **** 
 122:./tmk_keyboard/tmk_core/common/keymap.c **** /* Function */
 123:./tmk_keyboard/tmk_core/common/keymap.c **** __attribute__ ((weak))
 124:./tmk_keyboard/tmk_core/common/keymap.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 125:./tmk_keyboard/tmk_core/common/keymap.c **** {
 126:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)record;
 127:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)id;
 128:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)opt;
 129:./tmk_keyboard/tmk_core/common/keymap.c **** }
 130:./tmk_keyboard/tmk_core/common/keymap.c **** 
 131:./tmk_keyboard/tmk_core/common/keymap.c **** 
 132:./tmk_keyboard/tmk_core/common/keymap.c **** 
 133:./tmk_keyboard/tmk_core/common/keymap.c **** /* translates keycode to action */
 134:./tmk_keyboard/tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode)
 135:./tmk_keyboard/tmk_core/common/keymap.c **** {
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     action_t action = {};
 137:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
  48               		.loc 1 137 5 is_stmt 0 view .LVU4
  49 0022 8430      		cpi r24,lo8(4)
  50 0024 00F4      		brsh .L81
  51 0026 21E0      		ldi r18,lo8(1)
  52 0028 8130      		cpi r24,lo8(1)
  53 002a 01F0      		breq .L34
  54 002c 20E0      		ldi r18,0
  55               	.L34:
 138:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 139:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_LCTRL ... KC_RGUI:
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             action.code = ACTION_KEY(keycode);
 141:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 142:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 144:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 145:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_AUDIO_MUTE ... KC_WWW_FAVORITES:
 146:./tmk_keyboard/tmk_core/common/keymap.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 147:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 148:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
 149:./tmk_keyboard/tmk_core/common/keymap.c ****             action.code = ACTION_MOUSEKEY(keycode);
 150:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 151:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_TRNS:
 152:./tmk_keyboard/tmk_core/common/keymap.c ****             action.code = ACTION_TRANSPARENT;
  56               		.loc 1 152 25 view .LVU5
  57 002e 822F      		mov r24,r18
  58               	.LVL3:
  59               		.loc 1 152 25 view .LVU6
  60 0030 00C0      		rjmp .L81
  61               	.LVL4:
  62               	.L5:
  63               		.loc 1 152 25 view .LVU7
  64               	.LBE105:
  65               	.LBE104:
  38:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
  66               		.loc 1 38 5 view .LVU8
  67 0032 8933      		cpi r24,lo8(57)
  68 0034 01F0      		breq .L9
  69 0036 8238      		cpi r24,lo8(-126)
  70 0038 01F0      		breq .L9
  71 003a 8533      		cpi r24,lo8(53)
  72 003c 01F4      		brne .+2
  73 003e 00C0      		rjmp .L10
 107:./tmk_keyboard/tmk_core/common/keymap.c ****     }
  74               		.loc 1 107 13 is_stmt 1 view .LVU9
  75               	.LVL5:
  76               	.LBB113:
  77               	.LBI104:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
  78               		.loc 1 134 17 view .LVU10
  79               	.LBB108:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
  80               		.loc 1 136 5 view .LVU11
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
  81               		.loc 1 137 5 view .LVU12
  82 0040 8D3B      		cpi r24,lo8(-67)
  83 0042 00F4      		brsh .+2
  84 0044 00C0      		rjmp .L77
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
  85               		.loc 1 137 5 is_stmt 0 view .LVU13
  86 0046 8F3B      		cpi r24,lo8(-65)
  87 0048 01F4      		brne .L83
 153:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 154:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_BOOTLOADER:
 155:./tmk_keyboard/tmk_core/common/keymap.c ****             clear_keyboard();
  88               		.loc 1 155 13 is_stmt 1 view .LVU14
  89 004a 0E94 0000 		call clear_keyboard
  90               	.LVL6:
 156:./tmk_keyboard/tmk_core/common/keymap.c ****             wait_ms(50);
  91               		.loc 1 156 13 view .LVU15
  92               	.LBB106:
  93               	.LBI106:
  94               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
  95               		.loc 2 166 1 view .LVU16
  96               	.LBB107:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
  97               		.loc 2 168 2 view .LVU17
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
  98               		.loc 2 172 2 view .LVU18
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  99               		.loc 2 173 2 view .LVU19
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 100               		.loc 2 174 2 view .LVU20
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 101               		.loc 2 184 3 view .LVU21
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 102               		.loc 2 187 2 view .LVU22
 103 004e 2FEF      		ldi r18,lo8(159999)
 104 0050 80E7      		ldi r24,hi8(159999)
 105 0052 92E0      		ldi r25,hlo8(159999)
 106 0054 2150      	1:	subi r18,1
 107 0056 8040      		sbci r24,0
 108 0058 9040      		sbci r25,0
 109 005a 01F4      		brne 1b
 110 005c 00C0      		rjmp .
 111 005e 0000      		nop
 112               	.LVL7:
 113               		.loc 2 187 2 is_stmt 0 view .LVU23
 114               	.LBE107:
 115               	.LBE106:
 157:./tmk_keyboard/tmk_core/common/keymap.c ****             bootloader_jump(); // not return
 116               		.loc 1 157 13 is_stmt 1 view .LVU24
 117 0060 0E94 0000 		call bootloader_jump
 118               	.LVL8:
 119 0064 00C0      		rjmp .L83
 120               	.LVL9:
 121               	.L2:
 122               		.loc 1 157 13 is_stmt 0 view .LVU25
 123               	.LBE108:
 124               	.LBE113:
  38:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 125               		.loc 1 38 5 view .LVU26
 126 0066 833E      		cpi r24,lo8(-29)
 127 0068 01F0      		breq .L12
 128 006a 00F4      		brsh .L13
 129 006c 803E      		cpi r24,lo8(-32)
 130 006e 01F0      		breq .L14
 131 0070 823E      		cpi r24,lo8(-30)
 132 0072 01F0      		breq .L15
 133               	.LVL10:
 134               	.L81:
 135               	.LBB114:
 136               	.LBB109:
 152:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 137               		.loc 1 152 25 view .LVU27
 138 0074 90E0      		ldi r25,0
 139 0076 0895      		ret
 140               	.LVL11:
 141               	.L13:
 152:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 142               		.loc 1 152 25 view .LVU28
 143               	.LBE109:
 144               	.LBE114:
  38:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 145               		.loc 1 38 5 view .LVU29
 146 0078 863E      		cpi r24,lo8(-26)
 147 007a 01F0      		breq .L17
 148 007c 873E      		cpi r24,lo8(-25)
 149 007e 01F0      		breq .L18
 107:./tmk_keyboard/tmk_core/common/keymap.c ****     }
 150               		.loc 1 107 13 is_stmt 1 view .LVU30
 151               	.LVL12:
 152               	.LBB115:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 153               		.loc 1 134 17 view .LVU31
 154               	.LBB110:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 155               		.loc 1 136 5 view .LVU32
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 156               		.loc 1 137 5 view .LVU33
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 157               		.loc 1 137 5 is_stmt 0 view .LVU34
 158 0080 00F0      		brlo .L81
 159 0082 803F      		cpi r24,lo8(-16)
 160 0084 00F0      		brlo .L83
 149:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 161               		.loc 1 149 13 is_stmt 1 view .LVU35
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 162               		.loc 1 137 5 is_stmt 0 view .LVU36
 163 0086 90E0      		ldi r25,0
 149:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 164               		.loc 1 149 27 view .LVU37
 165 0088 9065      		ori r25,80
 166               	.LVL13:
 150:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_TRNS:
 167               		.loc 1 150 13 is_stmt 1 view .LVU38
 168 008a 0895      		ret
 169               	.LVL14:
 170               	.L3:
 150:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_TRNS:
 171               		.loc 1 150 13 is_stmt 0 view .LVU39
 172               	.LBE110:
 173               	.LBE115:
  40:./tmk_keyboard/tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
 174               		.loc 1 40 13 is_stmt 1 view .LVU40
  40:./tmk_keyboard/tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
 175               		.loc 1 40 20 is_stmt 0 view .LVU41
 176 008c 0C94 0000 		jmp keymap_fn_to_action
 177               	.LVL15:
 178               	.L9:
  44:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
 179               		.loc 1 44 13 is_stmt 1 view .LVU42
  44:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
 180               		.loc 1 44 53 is_stmt 0 view .LVU43
 181 0090 9091 0000 		lds r25,keymap_config
 182 0094 9370      		andi r25,lo8(3)
  44:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
 183               		.loc 1 44 16 view .LVU44
 184 0096 01F0      		breq .L81
 185               	.LVL16:
 186               	.L22:
  45:./tmk_keyboard/tmk_core/common/keymap.c ****             }
 187               		.loc 1 45 17 is_stmt 1 view .LVU45
 188               	.LBB116:
 189               	.LBI116:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 190               		.loc 1 134 17 view .LVU46
 191               	.LBB117:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 192               		.loc 1 136 5 view .LVU47
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 193               		.loc 1 137 5 view .LVU48
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 194               		.loc 1 140 13 view .LVU49
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 195               		.loc 1 141 13 view .LVU50
 158:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 159:./tmk_keyboard/tmk_core/common/keymap.c ****         default:
 160:./tmk_keyboard/tmk_core/common/keymap.c ****             action.code = ACTION_NO;
 161:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 162:./tmk_keyboard/tmk_core/common/keymap.c ****     }
 163:./tmk_keyboard/tmk_core/common/keymap.c ****     return action;
 196               		.loc 1 163 5 view .LVU51
 197               		.loc 1 163 5 is_stmt 0 view .LVU52
 198 0098 80EE      		ldi r24,lo8(-32)
 199 009a 90E0      		ldi r25,0
 200               		.loc 1 163 12 view .LVU53
 201 009c 0895      		ret
 202               	.LVL17:
 203               	.L14:
 204               		.loc 1 163 12 view .LVU54
 205               	.LBE117:
 206               	.LBE116:
  49:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
 207               		.loc 1 49 13 is_stmt 1 view .LVU55
  49:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
 208               		.loc 1 49 17 is_stmt 0 view .LVU56
 209 009e 8091 0000 		lds r24,keymap_config
 210               	.LVL18:
  49:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
 211               		.loc 1 49 16 view .LVU57
 212 00a2 80FF      		sbrs r24,0
 213 00a4 00C0      		rjmp .L22
  50:./tmk_keyboard/tmk_core/common/keymap.c ****             }
 214               		.loc 1 50 17 is_stmt 1 view .LVU58
 215               	.LVL19:
 216               	.LBB118:
 217               	.LBI118:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 218               		.loc 1 134 17 view .LVU59
 219               	.LBB119:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 220               		.loc 1 136 5 view .LVU60
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 221               		.loc 1 137 5 view .LVU61
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 222               		.loc 1 140 13 view .LVU62
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 223               		.loc 1 141 13 view .LVU63
 224               		.loc 1 163 5 view .LVU64
 225               		.loc 1 163 5 is_stmt 0 view .LVU65
 226 00a6 89E3      		ldi r24,lo8(57)
 227 00a8 90E0      		ldi r25,0
 228               		.loc 1 163 12 view .LVU66
 229 00aa 0895      		ret
 230               	.LVL20:
 231               	.L15:
 232               		.loc 1 163 12 view .LVU67
 233               	.LBE119:
 234               	.LBE118:
  54:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 235               		.loc 1 54 13 is_stmt 1 view .LVU68
  54:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 236               		.loc 1 54 17 is_stmt 0 view .LVU69
 237 00ac 8091 0000 		lds r24,keymap_config
 238               	.LVL21:
  54:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 239               		.loc 1 54 16 view .LVU70
 240 00b0 82FF      		sbrs r24,2
 241 00b2 00C0      		rjmp .L23
 242               	.L79:
  55:./tmk_keyboard/tmk_core/common/keymap.c ****                     return keycode_to_action(ACTION_NO);
 243               		.loc 1 55 17 is_stmt 1 view .LVU71
  55:./tmk_keyboard/tmk_core/common/keymap.c ****                     return keycode_to_action(ACTION_NO);
 244               		.loc 1 55 20 is_stmt 0 view .LVU72
 245 00b4 84FF      		sbrs r24,4
 246 00b6 00C0      		rjmp .L24
 247               	.L83:
 248               	.LBB120:
 249               	.LBB111:
 158:./tmk_keyboard/tmk_core/common/keymap.c ****         default:
 250               		.loc 1 158 13 is_stmt 1 view .LVU73
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 251               		.loc 1 136 14 is_stmt 0 view .LVU74
 252 00b8 90E0      		ldi r25,0
 253 00ba 80E0      		ldi r24,0
 158:./tmk_keyboard/tmk_core/common/keymap.c ****         default:
 254               		.loc 1 158 13 view .LVU75
 255 00bc 0895      		ret
 256               	.L24:
 257               	.LBE111:
 258               	.LBE120:
  58:./tmk_keyboard/tmk_core/common/keymap.c ****             }
 259               		.loc 1 58 17 is_stmt 1 view .LVU76
 260               	.LVL22:
 261               	.LBB121:
 262               	.LBI121:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 263               		.loc 1 134 17 view .LVU77
 264               	.LBB122:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 265               		.loc 1 136 5 view .LVU78
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 266               		.loc 1 137 5 view .LVU79
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 267               		.loc 1 140 13 view .LVU80
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 268               		.loc 1 141 13 view .LVU81
 269               		.loc 1 163 5 view .LVU82
 270               		.loc 1 163 5 is_stmt 0 view .LVU83
 271 00be 83EE      		ldi r24,lo8(-29)
 272 00c0 90E0      		ldi r25,0
 273               		.loc 1 163 12 view .LVU84
 274 00c2 0895      		ret
 275               	.LVL23:
 276               	.L12:
 277               		.loc 1 163 12 view .LVU85
 278               	.LBE122:
 279               	.LBE121:
  62:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
 280               		.loc 1 62 13 is_stmt 1 view .LVU86
  62:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
 281               		.loc 1 62 17 is_stmt 0 view .LVU87
 282 00c4 8091 0000 		lds r24,keymap_config
 283               	.LVL24:
  62:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
 284               		.loc 1 62 16 view .LVU88
 285 00c8 82FF      		sbrs r24,2
 286 00ca 00C0      		rjmp .L79
 287               	.L23:
  60:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_LGUI:
 288               		.loc 1 60 13 is_stmt 1 view .LVU89
 289               	.LVL25:
 290               	.LBB123:
 291               	.LBI123:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 292               		.loc 1 134 17 view .LVU90
 293               	.LBB124:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 294               		.loc 1 136 5 view .LVU91
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 295               		.loc 1 137 5 view .LVU92
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 296               		.loc 1 140 13 view .LVU93
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 297               		.loc 1 141 13 view .LVU94
 298               		.loc 1 163 5 view .LVU95
 299               		.loc 1 163 5 is_stmt 0 view .LVU96
 300 00cc 82EE      		ldi r24,lo8(-30)
 301 00ce 90E0      		ldi r25,0
 302               		.loc 1 163 12 view .LVU97
 303 00d0 0895      		ret
 304               	.LVL26:
 305               	.L17:
 306               		.loc 1 163 12 view .LVU98
 307               	.LBE124:
 308               	.LBE123:
  70:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 309               		.loc 1 70 13 is_stmt 1 view .LVU99
  70:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 310               		.loc 1 70 17 is_stmt 0 view .LVU100
 311 00d2 8091 0000 		lds r24,keymap_config
 312               	.LVL27:
  70:./tmk_keyboard/tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 313               		.loc 1 70 16 view .LVU101
 314 00d6 83FF      		sbrs r24,3
 315 00d8 00C0      		rjmp .L26
 316               	.L80:
  81:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(ACTION_NO);
 317               		.loc 1 81 13 is_stmt 1 view .LVU102
  81:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(ACTION_NO);
 318               		.loc 1 81 16 is_stmt 0 view .LVU103
 319 00da 84FD      		sbrc r24,4
 320 00dc 00C0      		rjmp .L83
  74:./tmk_keyboard/tmk_core/common/keymap.c ****             }
 321               		.loc 1 74 17 is_stmt 1 view .LVU104
 322               	.LVL28:
 323               	.LBB125:
 324               	.LBI125:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 325               		.loc 1 134 17 view .LVU105
 326               	.LBB126:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 327               		.loc 1 136 5 view .LVU106
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 328               		.loc 1 137 5 view .LVU107
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 329               		.loc 1 140 13 view .LVU108
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 330               		.loc 1 141 13 view .LVU109
 331               		.loc 1 163 5 view .LVU110
 332               		.loc 1 163 5 is_stmt 0 view .LVU111
 333 00de 87EE      		ldi r24,lo8(-25)
 334 00e0 90E0      		ldi r25,0
 335               		.loc 1 163 12 view .LVU112
 336 00e2 0895      		ret
 337               	.LVL29:
 338               	.L18:
 339               		.loc 1 163 12 view .LVU113
 340               	.LBE126:
 341               	.LBE125:
  78:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
 342               		.loc 1 78 13 is_stmt 1 view .LVU114
  78:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
 343               		.loc 1 78 17 is_stmt 0 view .LVU115
 344 00e4 8091 0000 		lds r24,keymap_config
 345               	.LVL30:
  78:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
 346               		.loc 1 78 16 view .LVU116
 347 00e8 83FF      		sbrs r24,3
 348 00ea 00C0      		rjmp .L80
 349               	.L26:
  76:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_RGUI:
 350               		.loc 1 76 13 is_stmt 1 view .LVU117
 351               	.LVL31:
 352               	.LBB127:
 353               	.LBI127:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 354               		.loc 1 134 17 view .LVU118
 355               	.LBB128:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 356               		.loc 1 136 5 view .LVU119
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 357               		.loc 1 137 5 view .LVU120
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 358               		.loc 1 140 13 view .LVU121
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 359               		.loc 1 141 13 view .LVU122
 360               		.loc 1 163 5 view .LVU123
 361               		.loc 1 163 5 is_stmt 0 view .LVU124
 362 00ec 86EE      		ldi r24,lo8(-26)
 363 00ee 90E0      		ldi r25,0
 364               		.loc 1 163 12 view .LVU125
 365 00f0 0895      		ret
 366               	.LVL32:
 367               	.L10:
 368               		.loc 1 163 12 view .LVU126
 369               	.LBE128:
 370               	.LBE127:
  86:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
 371               		.loc 1 86 13 is_stmt 1 view .LVU127
  86:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
 372               		.loc 1 86 17 is_stmt 0 view .LVU128
 373 00f2 8091 0000 		lds r24,keymap_config
 374               	.LVL33:
  86:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
 375               		.loc 1 86 16 view .LVU129
 376 00f6 85FF      		sbrs r24,5
 377 00f8 00C0      		rjmp .L28
 378               	.L29:
  87:./tmk_keyboard/tmk_core/common/keymap.c ****             }
 379               		.loc 1 87 17 is_stmt 1 view .LVU130
 380               	.LVL34:
 381               	.LBB129:
 382               	.LBI129:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 383               		.loc 1 134 17 view .LVU131
 384               	.LBB130:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 385               		.loc 1 136 5 view .LVU132
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 386               		.loc 1 137 5 view .LVU133
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 387               		.loc 1 140 13 view .LVU134
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 388               		.loc 1 141 13 view .LVU135
 389               		.loc 1 163 5 view .LVU136
 390               		.loc 1 163 5 is_stmt 0 view .LVU137
 391 00fa 89E2      		ldi r24,lo8(41)
 392 00fc 90E0      		ldi r25,0
 393               		.loc 1 163 12 view .LVU138
 394 00fe 0895      		ret
 395               	.LVL35:
 396               	.L6:
 397               		.loc 1 163 12 view .LVU139
 398               	.LBE130:
 399               	.LBE129:
  91:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
 400               		.loc 1 91 13 is_stmt 1 view .LVU140
  91:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
 401               		.loc 1 91 17 is_stmt 0 view .LVU141
 402 0100 8091 0000 		lds r24,keymap_config
 403               	.LVL36:
  91:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
 404               		.loc 1 91 16 view .LVU142
 405 0104 85FF      		sbrs r24,5
 406 0106 00C0      		rjmp .L29
 407               	.L28:
  89:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_ESC:
 408               		.loc 1 89 13 is_stmt 1 view .LVU143
 409               	.LVL37:
 410               	.LBB131:
 411               	.LBI131:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 412               		.loc 1 134 17 view .LVU144
 413               	.LBB132:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 414               		.loc 1 136 5 view .LVU145
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 415               		.loc 1 137 5 view .LVU146
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 416               		.loc 1 140 13 view .LVU147
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 417               		.loc 1 141 13 view .LVU148
 418               		.loc 1 163 5 view .LVU149
 419               		.loc 1 163 5 is_stmt 0 view .LVU150
 420 0108 85E3      		ldi r24,lo8(53)
 421 010a 90E0      		ldi r25,0
 422               		.loc 1 163 12 view .LVU151
 423 010c 0895      		ret
 424               	.LVL38:
 425               	.L4:
 426               		.loc 1 163 12 view .LVU152
 427               	.LBE132:
 428               	.LBE131:
  96:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
 429               		.loc 1 96 13 is_stmt 1 view .LVU153
  96:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
 430               		.loc 1 96 17 is_stmt 0 view .LVU154
 431 010e 8091 0000 		lds r24,keymap_config
 432               	.LVL39:
  96:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
 433               		.loc 1 96 16 view .LVU155
 434 0112 86FF      		sbrs r24,6
 435 0114 00C0      		rjmp .L30
 436               	.L31:
  97:./tmk_keyboard/tmk_core/common/keymap.c ****             }
 437               		.loc 1 97 17 is_stmt 1 view .LVU156
 438               	.LVL40:
 439               	.LBB133:
 440               	.LBI133:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 441               		.loc 1 134 17 view .LVU157
 442               	.LBB134:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 443               		.loc 1 136 5 view .LVU158
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 444               		.loc 1 137 5 view .LVU159
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 445               		.loc 1 140 13 view .LVU160
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 446               		.loc 1 141 13 view .LVU161
 447               		.loc 1 163 5 view .LVU162
 448               		.loc 1 163 5 is_stmt 0 view .LVU163
 449 0116 8AE2      		ldi r24,lo8(42)
 450 0118 90E0      		ldi r25,0
 451               		.loc 1 163 12 view .LVU164
 452 011a 0895      		ret
 453               	.LVL41:
 454               	.L7:
 455               		.loc 1 163 12 view .LVU165
 456               	.LBE134:
 457               	.LBE133:
 101:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 458               		.loc 1 101 13 is_stmt 1 view .LVU166
 101:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 459               		.loc 1 101 17 is_stmt 0 view .LVU167
 460 011c 8091 0000 		lds r24,keymap_config
 461               	.LVL42:
 101:./tmk_keyboard/tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 462               		.loc 1 101 16 view .LVU168
 463 0120 86FF      		sbrs r24,6
 464 0122 00C0      		rjmp .L31
 465               	.L30:
  99:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_BSPACE:
 466               		.loc 1 99 13 is_stmt 1 view .LVU169
 467               	.LVL43:
 468               	.LBB135:
 469               	.LBI135:
 134:./tmk_keyboard/tmk_core/common/keymap.c **** {
 470               		.loc 1 134 17 view .LVU170
 471               	.LBB136:
 136:./tmk_keyboard/tmk_core/common/keymap.c ****     switch (keycode) {
 472               		.loc 1 136 5 view .LVU171
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 473               		.loc 1 137 5 view .LVU172
 140:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 474               		.loc 1 140 13 view .LVU173
 141:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 475               		.loc 1 141 13 view .LVU174
 476               		.loc 1 163 5 view .LVU175
 477               		.loc 1 163 5 is_stmt 0 view .LVU176
 478 0124 81E3      		ldi r24,lo8(49)
 479 0126 90E0      		ldi r25,0
 480               		.loc 1 163 12 view .LVU177
 481 0128 0895      		ret
 482               	.LVL44:
 483               	.L77:
 484               		.loc 1 163 12 view .LVU178
 485               	.LBE136:
 486               	.LBE135:
 487               	.LBB137:
 488               	.LBB112:
 137:./tmk_keyboard/tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 489               		.loc 1 137 5 view .LVU179
 490 012a 883A      		cpi r24,lo8(-88)
 491 012c 00F4      		brsh .L32
 492 012e 853A      		cpi r24,lo8(-91)
 493 0130 00F4      		brsh .+2
 494 0132 00C0      		rjmp .L8
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 495               		.loc 1 143 13 is_stmt 1 view .LVU180
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 496               		.loc 1 143 27 is_stmt 0 view .LVU181
 497 0134 853A      		cpi r24,lo8(-91)
 498 0136 01F4      		brne .L36
 499 0138 81E8      		ldi r24,lo8(-127)
 500 013a 90E4      		ldi r25,lo8(64)
 501               	.LVL45:
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 502               		.loc 1 143 27 view .LVU182
 503 013c 0895      		ret
 504               	.LVL46:
 505               	.L36:
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 506               		.loc 1 143 27 view .LVU183
 507 013e 863A      		cpi r24,lo8(-90)
 508 0140 01F0      		breq .L43
 509 0142 83E8      		ldi r24,lo8(-125)
 510 0144 90E4      		ldi r25,lo8(64)
 511               	.LVL47:
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 512               		.loc 1 143 27 view .LVU184
 513 0146 0895      		ret
 514               	.LVL48:
 515               	.L32:
 146:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 516               		.loc 1 146 13 is_stmt 1 view .LVU185
 146:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 517               		.loc 1 146 27 is_stmt 0 view .LVU186
 518 0148 883A      		cpi r24,lo8(-88)
 519 014a 01F0      		breq .L44
 520 014c E7E5      		ldi r30,lo8(87)
 521 014e E80F      		add r30,r24
 522 0150 8C3B      		cpi r24,lo8(-68)
 523 0152 01F0      		breq .L45
 524 0154 F0E0      		ldi r31,0
 525 0156 EE0F      		lsl r30
 526 0158 FF1F      		rol r31
 527               	.LVL49:
 146:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 528               		.loc 1 146 27 view .LVU187
 529 015a E050      		subi r30,lo8(-(CSWTCH.27))
 530 015c F040      		sbci r31,hi8(-(CSWTCH.27))
 531 015e 8081      		ld r24,Z
 532 0160 9181      		ldd r25,Z+1
 533 0162 0895      		ret
 534               	.LVL50:
 535               	.L43:
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 536               		.loc 1 143 27 view .LVU188
 537 0164 82E8      		ldi r24,lo8(-126)
 538 0166 90E4      		ldi r25,lo8(64)
 539               	.LVL51:
 143:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 540               		.loc 1 143 27 view .LVU189
 541 0168 0895      		ret
 542               	.LVL52:
 543               	.L44:
 146:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 544               		.loc 1 146 27 view .LVU190
 545 016a 82EE      		ldi r24,lo8(-30)
 546 016c 94E4      		ldi r25,lo8(68)
 547               	.LVL53:
 146:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 548               		.loc 1 146 27 view .LVU191
 549 016e 0895      		ret
 550               	.LVL54:
 551               	.L45:
 146:./tmk_keyboard/tmk_core/common/keymap.c ****             break;
 552               		.loc 1 146 27 view .LVU192
 553 0170 8AE2      		ldi r24,lo8(42)
 554 0172 96E4      		ldi r25,lo8(70)
 555               	.LVL55:
 556               		.loc 1 163 5 is_stmt 1 view .LVU193
 557               	/* epilogue start */
 558               		.loc 1 163 5 is_stmt 0 view .LVU194
 559               	.LBE112:
 560               	.LBE137:
 109:./tmk_keyboard/tmk_core/common/keymap.c **** 
 561               		.loc 1 109 1 view .LVU195
 562 0174 0895      		ret
 563               		.cfi_endproc
 564               	.LFE10:
 566               		.section	.text.action_get_macro,"ax",@progbits
 567               		.weak	action_get_macro
 569               	action_get_macro:
 570               	.LVL56:
 571               	.LFB11:
 115:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)record;
 572               		.loc 1 115 1 is_stmt 1 view -0
 573               		.cfi_startproc
 574               	/* prologue: function */
 575               	/* frame size = 0 */
 576               	/* stack size = 0 */
 577               	.L__stack_usage = 0
 116:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)id;
 578               		.loc 1 116 5 view .LVU197
 117:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)opt;
 579               		.loc 1 117 5 view .LVU198
 118:./tmk_keyboard/tmk_core/common/keymap.c ****     return MACRO_NONE;
 580               		.loc 1 118 5 view .LVU199
 119:./tmk_keyboard/tmk_core/common/keymap.c **** }
 581               		.loc 1 119 5 view .LVU200
 120:./tmk_keyboard/tmk_core/common/keymap.c **** 
 582               		.loc 1 120 1 is_stmt 0 view .LVU201
 583 0000 90E0      		ldi r25,0
 584 0002 80E0      		ldi r24,0
 585               	.LVL57:
 586               	/* epilogue start */
 120:./tmk_keyboard/tmk_core/common/keymap.c **** 
 587               		.loc 1 120 1 view .LVU202
 588 0004 0895      		ret
 589               		.cfi_endproc
 590               	.LFE11:
 592               		.section	.text.action_function,"ax",@progbits
 593               		.weak	action_function
 595               	action_function:
 596               	.LVL58:
 597               	.LFB12:
 125:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)record;
 598               		.loc 1 125 1 is_stmt 1 view -0
 599               		.cfi_startproc
 600               	/* prologue: function */
 601               	/* frame size = 0 */
 602               	/* stack size = 0 */
 603               	.L__stack_usage = 0
 126:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)id;
 604               		.loc 1 126 5 view .LVU204
 127:./tmk_keyboard/tmk_core/common/keymap.c ****     (void)opt;
 605               		.loc 1 127 5 view .LVU205
 128:./tmk_keyboard/tmk_core/common/keymap.c **** }
 606               		.loc 1 128 5 view .LVU206
 607               	/* epilogue start */
 129:./tmk_keyboard/tmk_core/common/keymap.c **** 
 608               		.loc 1 129 1 is_stmt 0 view .LVU207
 609 0000 0895      		ret
 610               		.cfi_endproc
 611               	.LFE12:
 613               		.section	.rodata.CSWTCH.27,"a"
 616               	CSWTCH.27:
 617 0000 E944      		.word	17641
 618 0002 EA44      		.word	17642
 619 0004 B544      		.word	17589
 620 0006 B644      		.word	17590
 621 0008 B344      		.word	17587
 622 000a B444      		.word	17588
 623 000c B744      		.word	17591
 624 000e CD44      		.word	17613
 625 0010 CC44      		.word	17612
 626 0012 8345      		.word	17795
 627 0014 8A45      		.word	17802
 628 0016 9245      		.word	17810
 629 0018 9445      		.word	17812
 630 001a 2146      		.word	17953
 631 001c 2346      		.word	17955
 632 001e 2446      		.word	17956
 633 0020 2546      		.word	17957
 634 0022 2646      		.word	17958
 635 0024 2746      		.word	17959
 636               		.text
 637               	.Letext0:
 638               		.file 3 "/usr/avr/include/stdint.h"
 639               		.file 4 "./tmk_keyboard/tmk_core/common/keyboard.h"
 640               		.file 5 "./tmk_keyboard/tmk_core/common/keycode.h"
 641               		.file 6 "./tmk_keyboard/tmk_core/common/action_code.h"
 642               		.file 7 "./tmk_keyboard/tmk_core/common/action_macro.h"
 643               		.file 8 "./tmk_keyboard/tmk_core/common/action.h"
 644               		.file 9 "./tmk_keyboard/tmk_core/common/keymap.h"
 645               		.file 10 "./tmk_keyboard/tmk_core/common/bootloader.h"
 646               		.file 11 "/usr/avr/include/math.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
     /tmp/ccsyUtII.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccsyUtII.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccsyUtII.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccsyUtII.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccsyUtII.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccsyUtII.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccsyUtII.s:14     .text.action_for_key:0000000000000000 action_for_key
     /tmp/ccsyUtII.s:616    .rodata.CSWTCH.27:0000000000000000 CSWTCH.27
     /tmp/ccsyUtII.s:569    .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccsyUtII.s:595    .text.action_function:0000000000000000 action_function

UNDEFINED SYMBOLS
keymap_key_to_keycode
clear_keyboard
bootloader_jump
keymap_fn_to_action
keymap_config
__do_copy_data
