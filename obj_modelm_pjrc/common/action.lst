   1               		.file	"action.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.action_exec,"ax",@progbits
  12               	.global	action_exec
  14               	action_exec:
  15               	.LFB4:
  16               		.file 1 "./tmk_keyboard/tmk_core/common/action.c"
   1:./tmk_keyboard/tmk_core/common/action.c **** /*
   2:./tmk_keyboard/tmk_core/common/action.c **** Copyright 2012,2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_keyboard/tmk_core/common/action.c **** 
   4:./tmk_keyboard/tmk_core/common/action.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_keyboard/tmk_core/common/action.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_keyboard/tmk_core/common/action.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_keyboard/tmk_core/common/action.c **** (at your option) any later version.
   8:./tmk_keyboard/tmk_core/common/action.c **** 
   9:./tmk_keyboard/tmk_core/common/action.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_keyboard/tmk_core/common/action.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_keyboard/tmk_core/common/action.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_keyboard/tmk_core/common/action.c **** GNU General Public License for more details.
  13:./tmk_keyboard/tmk_core/common/action.c **** 
  14:./tmk_keyboard/tmk_core/common/action.c **** You should have received a copy of the GNU General Public License
  15:./tmk_keyboard/tmk_core/common/action.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_keyboard/tmk_core/common/action.c **** */
  17:./tmk_keyboard/tmk_core/common/action.c **** #include "host.h"
  18:./tmk_keyboard/tmk_core/common/action.c **** #include "keycode.h"
  19:./tmk_keyboard/tmk_core/common/action.c **** #include "keyboard.h"
  20:./tmk_keyboard/tmk_core/common/action.c **** #include "mousekey.h"
  21:./tmk_keyboard/tmk_core/common/action.c **** #include "command.h"
  22:./tmk_keyboard/tmk_core/common/action.c **** #include "led.h"
  23:./tmk_keyboard/tmk_core/common/action.c **** #include "backlight.h"
  24:./tmk_keyboard/tmk_core/common/action.c **** #include "action_layer.h"
  25:./tmk_keyboard/tmk_core/common/action.c **** #include "action_tapping.h"
  26:./tmk_keyboard/tmk_core/common/action.c **** #include "action_macro.h"
  27:./tmk_keyboard/tmk_core/common/action.c **** #include "action_util.h"
  28:./tmk_keyboard/tmk_core/common/action.c **** #include "action.h"
  29:./tmk_keyboard/tmk_core/common/action.c **** #include "hook.h"
  30:./tmk_keyboard/tmk_core/common/action.c **** 
  31:./tmk_keyboard/tmk_core/common/action.c **** #ifdef DEBUG_ACTION
  32:./tmk_keyboard/tmk_core/common/action.c **** #include "debug.h"
  33:./tmk_keyboard/tmk_core/common/action.c **** #else
  34:./tmk_keyboard/tmk_core/common/action.c **** #include "nodebug.h"
  35:./tmk_keyboard/tmk_core/common/action.c **** #endif
  36:./tmk_keyboard/tmk_core/common/action.c **** 
  37:./tmk_keyboard/tmk_core/common/action.c **** 
  38:./tmk_keyboard/tmk_core/common/action.c **** void action_exec(keyevent_t event)
  39:./tmk_keyboard/tmk_core/common/action.c **** {
  17               		.loc 1 39 1 view -0
  18               		.cfi_startproc
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27 0004 CDB7      		in r28,__SP_L__
  28 0006 DEB7      		in r29,__SP_H__
  29               	.LCFI2:
  30               		.cfi_def_cfa_register 28
  31 0008 2B97      		sbiw r28,11
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 15
  34 000a 0FB6      		in __tmp_reg__,__SREG__
  35 000c F894      		cli
  36 000e DEBF      		out __SP_H__,r29
  37 0010 0FBE      		out __SREG__,__tmp_reg__
  38 0012 CDBF      		out __SP_L__,r28
  39               	/* prologue: function */
  40               	/* frame size = 11 */
  41               	/* stack size = 13 */
  42               	.L__stack_usage = 13
  43 0014 4F83      		std Y+7,r20
  44 0016 5887      		std Y+8,r21
  45 0018 6987      		std Y+9,r22
  46 001a 7A87      		std Y+10,r23
  47 001c 8B87      		std Y+11,r24
  48               	.LVL0:
  40:./tmk_keyboard/tmk_core/common/action.c ****     if (!IS_NOEVENT(event)) {
  49               		.loc 1 40 5 view .LVU1
  50               	.LBB10:
  51               	.LBI10:
  52               		.file 2 "./tmk_keyboard/tmk_core/common/keyboard.h"
   1:./tmk_keyboard/tmk_core/common/keyboard.h **** /*
   2:./tmk_keyboard/tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_keyboard/tmk_core/common/keyboard.h **** 
   4:./tmk_keyboard/tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:./tmk_keyboard/tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:./tmk_keyboard/tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_keyboard/tmk_core/common/keyboard.h **** (at your option) any later version.
   8:./tmk_keyboard/tmk_core/common/keyboard.h **** 
   9:./tmk_keyboard/tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:./tmk_keyboard/tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_keyboard/tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_keyboard/tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  14:./tmk_keyboard/tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:./tmk_keyboard/tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_keyboard/tmk_core/common/keyboard.h **** */
  17:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  18:./tmk_keyboard/tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:./tmk_keyboard/tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  21:./tmk_keyboard/tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:./tmk_keyboard/tmk_core/common/keyboard.h **** #include <stdint.h>
  23:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  24:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  25:./tmk_keyboard/tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:./tmk_keyboard/tmk_core/common/keyboard.h **** extern "C" {
  27:./tmk_keyboard/tmk_core/common/keyboard.h **** #endif
  28:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  29:./tmk_keyboard/tmk_core/common/keyboard.h **** /* key matrix position */
  30:./tmk_keyboard/tmk_core/common/keyboard.h **** typedef struct {
  31:./tmk_keyboard/tmk_core/common/keyboard.h ****     uint8_t col;
  32:./tmk_keyboard/tmk_core/common/keyboard.h ****     uint8_t row;
  33:./tmk_keyboard/tmk_core/common/keyboard.h **** } keypos_t;
  34:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  35:./tmk_keyboard/tmk_core/common/keyboard.h **** /* key event */
  36:./tmk_keyboard/tmk_core/common/keyboard.h **** typedef struct {
  37:./tmk_keyboard/tmk_core/common/keyboard.h ****     keypos_t key;
  38:./tmk_keyboard/tmk_core/common/keyboard.h ****     bool     pressed;
  39:./tmk_keyboard/tmk_core/common/keyboard.h ****     uint16_t time;
  40:./tmk_keyboard/tmk_core/common/keyboard.h **** } keyevent_t;
  41:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  42:./tmk_keyboard/tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:./tmk_keyboard/tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:./tmk_keyboard/tmk_core/common/keyboard.h **** 
  45:./tmk_keyboard/tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:./tmk_keyboard/tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:./tmk_keyboard/tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:./tmk_keyboard/tmk_core/common/keyboard.h ****  */
  49:./tmk_keyboard/tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  53               		.loc 2 49 20 view .LVU2
  54               	.LBB11:
  55               		.loc 2 49 51 view .LVU3
  56               		.loc 2 49 74 is_stmt 0 view .LVU4
  57 001e 8A85      		ldd r24,Y+10
  58 0020 9B85      		ldd r25,Y+11
  59               	.LVL1:
  60               		.loc 2 49 74 view .LVU5
  61 0022 892B      		or r24,r25
  62 0024 01F0      		breq .L2
  63 0026 842F      		mov r24,r20
  64               	.LVL2:
  65               		.loc 2 49 74 view .LVU6
  66 0028 8523      		and r24,r21
  67 002a 8F3F      		cpi r24,lo8(-1)
  68 002c 01F4      		brne .L3
  69               	.LVL3:
  70               	.L2:
  71               		.loc 2 49 74 view .LVU7
  72               	.LBE11:
  73               	.LBE10:
  41:./tmk_keyboard/tmk_core/common/action.c ****         dprint("\n---- action_exec: start -----\n");
  42:./tmk_keyboard/tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
  43:./tmk_keyboard/tmk_core/common/action.c ****         hook_matrix_change(event);
  44:./tmk_keyboard/tmk_core/common/action.c ****     }
  45:./tmk_keyboard/tmk_core/common/action.c **** 
  46:./tmk_keyboard/tmk_core/common/action.c ****     keyrecord_t record = { .event = event };
  74               		.loc 1 46 5 is_stmt 1 view .LVU8
  75               		.loc 1 46 17 is_stmt 0 view .LVU9
  76 002e 1E82      		std Y+6,__zero_reg__
  77 0030 85E0      		ldi r24,lo8(5)
  78 0032 FE01      		movw r30,r28
  79 0034 3796      		adiw r30,7
  80               	.LVL4:
  81               		.loc 1 46 17 view .LVU10
  82 0036 DE01      		movw r26,r28
  83 0038 1196      		adiw r26,1
  84               		0:
  85 003a 0190      		ld r0,Z+
  86 003c 0D92      		st X+,r0
  87 003e 8A95      		dec r24
  88 0040 01F4      		brne 0b
  89               	.LVL5:
  47:./tmk_keyboard/tmk_core/common/action.c **** 
  48:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  49:./tmk_keyboard/tmk_core/common/action.c ****     action_tapping_process(record);
  90               		.loc 1 49 5 is_stmt 1 view .LVU11
  91 0042 4981      		ldd r20,Y+1
  92 0044 5A81      		ldd r21,Y+2
  93 0046 6B81      		ldd r22,Y+3
  94 0048 7C81      		ldd r23,Y+4
  95 004a 8D81      		ldd r24,Y+5
  96 004c 9E81      		ldd r25,Y+6
  97               	/* epilogue start */
  50:./tmk_keyboard/tmk_core/common/action.c **** #else
  51:./tmk_keyboard/tmk_core/common/action.c ****     process_action(&record);
  52:./tmk_keyboard/tmk_core/common/action.c ****     if (!IS_NOEVENT(record.event)) {
  53:./tmk_keyboard/tmk_core/common/action.c ****         dprint("processed: "); debug_record(record); dprintln();
  54:./tmk_keyboard/tmk_core/common/action.c ****     }
  55:./tmk_keyboard/tmk_core/common/action.c **** #endif
  56:./tmk_keyboard/tmk_core/common/action.c **** }
  98               		.loc 1 56 1 is_stmt 0 view .LVU12
  99 004e 2B96      		adiw r28,11
 100 0050 0FB6      		in __tmp_reg__,__SREG__
 101 0052 F894      		cli
 102 0054 DEBF      		out __SP_H__,r29
 103 0056 0FBE      		out __SREG__,__tmp_reg__
 104 0058 CDBF      		out __SP_L__,r28
 105 005a DF91      		pop r29
 106 005c CF91      		pop r28
  49:./tmk_keyboard/tmk_core/common/action.c **** #else
 107               		.loc 1 49 5 view .LVU13
 108 005e 0C94 0000 		jmp action_tapping_process
 109               	.LVL6:
 110               	.L3:
  41:./tmk_keyboard/tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
 111               		.loc 1 41 9 is_stmt 1 view .LVU14
  42:./tmk_keyboard/tmk_core/common/action.c ****         hook_matrix_change(event);
 112               		.loc 1 42 9 view .LVU15
  42:./tmk_keyboard/tmk_core/common/action.c ****         hook_matrix_change(event);
 113               		.loc 1 42 28 view .LVU16
  42:./tmk_keyboard/tmk_core/common/action.c ****         hook_matrix_change(event);
 114               		.loc 1 42 48 view .LVU17
  43:./tmk_keyboard/tmk_core/common/action.c ****     }
 115               		.loc 1 43 9 view .LVU18
 116 0062 6985      		ldd r22,Y+9
 117 0064 7A85      		ldd r23,Y+10
 118 0066 8B85      		ldd r24,Y+11
 119 0068 0E94 0000 		call hook_matrix_change
 120               	.LVL7:
  43:./tmk_keyboard/tmk_core/common/action.c ****     }
 121               		.loc 1 43 9 is_stmt 0 view .LVU19
 122 006c 00C0      		rjmp .L2
 123               		.cfi_endproc
 124               	.LFE4:
 126               		.section	.text.register_code,"ax",@progbits
 127               	.global	register_code
 129               	register_code:
 130               	.LVL8:
 131               	.LFB6:
  57:./tmk_keyboard/tmk_core/common/action.c **** 
  58:./tmk_keyboard/tmk_core/common/action.c **** void process_action(keyrecord_t *record)
  59:./tmk_keyboard/tmk_core/common/action.c **** {
  60:./tmk_keyboard/tmk_core/common/action.c ****     keyevent_t event = record->event;
  61:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  62:./tmk_keyboard/tmk_core/common/action.c ****     uint8_t tap_count = record->tap.count;
  63:./tmk_keyboard/tmk_core/common/action.c **** #endif
  64:./tmk_keyboard/tmk_core/common/action.c **** 
  65:./tmk_keyboard/tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return; }
  66:./tmk_keyboard/tmk_core/common/action.c **** 
  67:./tmk_keyboard/tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event.key);
  68:./tmk_keyboard/tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
  69:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
  70:./tmk_keyboard/tmk_core/common/action.c ****     dprint(" layer_state: "); layer_debug();
  71:./tmk_keyboard/tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
  72:./tmk_keyboard/tmk_core/common/action.c **** #endif
  73:./tmk_keyboard/tmk_core/common/action.c ****     dprintln();
  74:./tmk_keyboard/tmk_core/common/action.c **** 
  75:./tmk_keyboard/tmk_core/common/action.c ****     switch (action.kind.id) {
  76:./tmk_keyboard/tmk_core/common/action.c ****         /* Key and Mods */
  77:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LMODS:
  78:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_RMODS:
  79:./tmk_keyboard/tmk_core/common/action.c ****             {
  80:./tmk_keyboard/tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS) ?  action.key.mods :
  81:./tmk_keyboard/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
  82:./tmk_keyboard/tmk_core/common/action.c ****                 if (event.pressed) {
  83:./tmk_keyboard/tmk_core/common/action.c ****                     if (mods) {
  84:./tmk_keyboard/tmk_core/common/action.c ****                         add_weak_mods(mods);
  85:./tmk_keyboard/tmk_core/common/action.c ****                         send_keyboard_report();
  86:./tmk_keyboard/tmk_core/common/action.c ****                     }
  87:./tmk_keyboard/tmk_core/common/action.c ****                     register_code(action.key.code);
  88:./tmk_keyboard/tmk_core/common/action.c ****                 } else {
  89:./tmk_keyboard/tmk_core/common/action.c ****                     unregister_code(action.key.code);
  90:./tmk_keyboard/tmk_core/common/action.c ****                     if (mods) {
  91:./tmk_keyboard/tmk_core/common/action.c ****                         del_weak_mods(mods);
  92:./tmk_keyboard/tmk_core/common/action.c ****                         send_keyboard_report();
  93:./tmk_keyboard/tmk_core/common/action.c ****                     }
  94:./tmk_keyboard/tmk_core/common/action.c ****                 }
  95:./tmk_keyboard/tmk_core/common/action.c ****             }
  96:./tmk_keyboard/tmk_core/common/action.c ****             break;
  97:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  98:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LMODS_TAP:
  99:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 100:./tmk_keyboard/tmk_core/common/action.c ****             {
 101:./tmk_keyboard/tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS_TAP) ?  action.key.mods :
 102:./tmk_keyboard/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 103:./tmk_keyboard/tmk_core/common/action.c ****                 switch (action.layer_tap.code) {
 104:./tmk_keyboard/tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 105:./tmk_keyboard/tmk_core/common/action.c ****                     case MODS_ONESHOT:
 106:./tmk_keyboard/tmk_core/common/action.c ****                         // Oneshot modifier
 107:./tmk_keyboard/tmk_core/common/action.c ****                         if (event.pressed) {
 108:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count == 0) {
 109:./tmk_keyboard/tmk_core/common/action.c ****                                 register_mods(mods);
 110:./tmk_keyboard/tmk_core/common/action.c ****                             }
 111:./tmk_keyboard/tmk_core/common/action.c ****                             else if (tap_count == 1) {
 112:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 113:./tmk_keyboard/tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 114:./tmk_keyboard/tmk_core/common/action.c ****                             }
 115:./tmk_keyboard/tmk_core/common/action.c ****                             else {
 116:./tmk_keyboard/tmk_core/common/action.c ****                                 register_mods(mods);
 117:./tmk_keyboard/tmk_core/common/action.c ****                             }
 118:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 119:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count == 0) {
 120:./tmk_keyboard/tmk_core/common/action.c ****                                 clear_oneshot_mods();
 121:./tmk_keyboard/tmk_core/common/action.c ****                                 unregister_mods(mods);
 122:./tmk_keyboard/tmk_core/common/action.c ****                             }
 123:./tmk_keyboard/tmk_core/common/action.c ****                             else if (tap_count == 1) {
 124:./tmk_keyboard/tmk_core/common/action.c ****                                 // Retain Oneshot mods
 125:./tmk_keyboard/tmk_core/common/action.c ****                             }
 126:./tmk_keyboard/tmk_core/common/action.c ****                             else {
 127:./tmk_keyboard/tmk_core/common/action.c ****                                 clear_oneshot_mods();
 128:./tmk_keyboard/tmk_core/common/action.c ****                                 unregister_mods(mods);
 129:./tmk_keyboard/tmk_core/common/action.c ****                             }
 130:./tmk_keyboard/tmk_core/common/action.c ****                         }
 131:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 132:./tmk_keyboard/tmk_core/common/action.c ****     #endif
 133:./tmk_keyboard/tmk_core/common/action.c ****                     case MODS_TAP_TOGGLE:
 134:./tmk_keyboard/tmk_core/common/action.c ****                         if (event.pressed) {
 135:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 136:./tmk_keyboard/tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 137:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 138:./tmk_keyboard/tmk_core/common/action.c ****                                     unregister_mods(mods);
 139:./tmk_keyboard/tmk_core/common/action.c ****                                 } else {
 140:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods on\n");
 141:./tmk_keyboard/tmk_core/common/action.c ****                                     register_mods(mods);
 142:./tmk_keyboard/tmk_core/common/action.c ****                                 }
 143:./tmk_keyboard/tmk_core/common/action.c ****                             }
 144:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 145:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count < TAPPING_TOGGLE) {
 146:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 147:./tmk_keyboard/tmk_core/common/action.c ****                                 unregister_mods(mods);
 148:./tmk_keyboard/tmk_core/common/action.c ****                             }
 149:./tmk_keyboard/tmk_core/common/action.c ****                         }
 150:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 151:./tmk_keyboard/tmk_core/common/action.c ****                     default:
 152:./tmk_keyboard/tmk_core/common/action.c ****                         if (event.pressed) {
 153:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count > 0) {
 154:./tmk_keyboard/tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 155:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 156:./tmk_keyboard/tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 157:./tmk_keyboard/tmk_core/common/action.c ****                                     record->tap.count = 0;
 158:./tmk_keyboard/tmk_core/common/action.c ****                                     register_mods(mods);
 159:./tmk_keyboard/tmk_core/common/action.c ****                                 } else {
 160:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: register_code\n");
 161:./tmk_keyboard/tmk_core/common/action.c ****                                     register_code(action.key.code);
 162:./tmk_keyboard/tmk_core/common/action.c ****                                 }
 163:./tmk_keyboard/tmk_core/common/action.c ****                             } else {
 164:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 165:./tmk_keyboard/tmk_core/common/action.c ****                                 register_mods(mods);
 166:./tmk_keyboard/tmk_core/common/action.c ****                             }
 167:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 168:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count > 0) {
 169:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 170:./tmk_keyboard/tmk_core/common/action.c ****                                 unregister_code(action.key.code);
 171:./tmk_keyboard/tmk_core/common/action.c ****                             } else {
 172:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 173:./tmk_keyboard/tmk_core/common/action.c ****                                 unregister_mods(mods);
 174:./tmk_keyboard/tmk_core/common/action.c ****                             }
 175:./tmk_keyboard/tmk_core/common/action.c ****                         }
 176:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 177:./tmk_keyboard/tmk_core/common/action.c ****                 }
 178:./tmk_keyboard/tmk_core/common/action.c ****             }
 179:./tmk_keyboard/tmk_core/common/action.c ****             break;
 180:./tmk_keyboard/tmk_core/common/action.c **** #endif
 181:./tmk_keyboard/tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 182:./tmk_keyboard/tmk_core/common/action.c ****         /* other HID usage */
 183:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_USAGE:
 184:./tmk_keyboard/tmk_core/common/action.c ****             switch (action.usage.page) {
 185:./tmk_keyboard/tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 186:./tmk_keyboard/tmk_core/common/action.c ****                     if (event.pressed) {
 187:./tmk_keyboard/tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 188:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 189:./tmk_keyboard/tmk_core/common/action.c ****                         host_system_send(0);
 190:./tmk_keyboard/tmk_core/common/action.c ****                     }
 191:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 192:./tmk_keyboard/tmk_core/common/action.c ****                 case PAGE_CONSUMER:
 193:./tmk_keyboard/tmk_core/common/action.c ****                     if (event.pressed) {
 194:./tmk_keyboard/tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 195:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 196:./tmk_keyboard/tmk_core/common/action.c ****                         host_consumer_send(0);
 197:./tmk_keyboard/tmk_core/common/action.c ****                     }
 198:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 199:./tmk_keyboard/tmk_core/common/action.c ****             }
 200:./tmk_keyboard/tmk_core/common/action.c ****             break;
 201:./tmk_keyboard/tmk_core/common/action.c **** #endif
 202:./tmk_keyboard/tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 203:./tmk_keyboard/tmk_core/common/action.c ****         /* Mouse key */
 204:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_MOUSEKEY:
 205:./tmk_keyboard/tmk_core/common/action.c ****             if (event.pressed) {
 206:./tmk_keyboard/tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 207:./tmk_keyboard/tmk_core/common/action.c ****                 mousekey_send();
 208:./tmk_keyboard/tmk_core/common/action.c ****             } else {
 209:./tmk_keyboard/tmk_core/common/action.c ****                 mousekey_off(action.key.code);
 210:./tmk_keyboard/tmk_core/common/action.c ****                 mousekey_send();
 211:./tmk_keyboard/tmk_core/common/action.c ****             }
 212:./tmk_keyboard/tmk_core/common/action.c ****             break;
 213:./tmk_keyboard/tmk_core/common/action.c **** #endif
 214:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 215:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER:
 216:./tmk_keyboard/tmk_core/common/action.c ****             if (action.layer_bitop.on == 0) {
 217:./tmk_keyboard/tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 218:./tmk_keyboard/tmk_core/common/action.c ****                 if (!event.pressed) {
 219:./tmk_keyboard/tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 220:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 221:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 222:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 223:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 224:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 225:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_XOR: default_layer_xor(bits | mask); break;
 226:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 227:./tmk_keyboard/tmk_core/common/action.c ****                     }
 228:./tmk_keyboard/tmk_core/common/action.c ****                 }
 229:./tmk_keyboard/tmk_core/common/action.c ****             } else {
 230:./tmk_keyboard/tmk_core/common/action.c ****                 /* Layer Bitwise Operation */
 231:./tmk_keyboard/tmk_core/common/action.c ****                 if (event.pressed ? (action.layer_bitop.on & ON_PRESS) :
 232:./tmk_keyboard/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 233:./tmk_keyboard/tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 234:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 235:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 236:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 237:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 238:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 239:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_XOR: layer_xor(bits | mask); break;
 240:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 241:./tmk_keyboard/tmk_core/common/action.c ****                     }
 242:./tmk_keyboard/tmk_core/common/action.c ****                 }
 243:./tmk_keyboard/tmk_core/common/action.c ****             }
 244:./tmk_keyboard/tmk_core/common/action.c ****             break;
 245:./tmk_keyboard/tmk_core/common/action.c ****     #ifndef NO_ACTION_TAPPING
 246:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 247:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 248:./tmk_keyboard/tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 249:./tmk_keyboard/tmk_core/common/action.c ****                 case 0xe0 ... 0xef:
 250:./tmk_keyboard/tmk_core/common/action.c ****                     /* layer On/Off with modifiers(left only) */
 251:./tmk_keyboard/tmk_core/common/action.c ****                     if (event.pressed) {
 252:./tmk_keyboard/tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 253:./tmk_keyboard/tmk_core/common/action.c ****                         register_mods(action.layer_tap.code & 0x0f);
 254:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 255:./tmk_keyboard/tmk_core/common/action.c ****                         layer_off(action.layer_tap.val);
 256:./tmk_keyboard/tmk_core/common/action.c ****                         unregister_mods(action.layer_tap.code & 0x0f);
 257:./tmk_keyboard/tmk_core/common/action.c ****                     }
 258:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 259:./tmk_keyboard/tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 260:./tmk_keyboard/tmk_core/common/action.c ****                     /* tap toggle */
 261:./tmk_keyboard/tmk_core/common/action.c ****                     if (event.pressed) {
 262:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 263:./tmk_keyboard/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 264:./tmk_keyboard/tmk_core/common/action.c ****                         }
 265:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 266:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count <= TAPPING_TOGGLE) {
 267:./tmk_keyboard/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 268:./tmk_keyboard/tmk_core/common/action.c ****                         }
 269:./tmk_keyboard/tmk_core/common/action.c ****                     }
 270:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 271:./tmk_keyboard/tmk_core/common/action.c ****                 case OP_ON_OFF:
 272:./tmk_keyboard/tmk_core/common/action.c ****                     event.pressed ? layer_on(action.layer_tap.val) :
 273:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 274:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 275:./tmk_keyboard/tmk_core/common/action.c ****                 case OP_OFF_ON:
 276:./tmk_keyboard/tmk_core/common/action.c ****                     event.pressed ? layer_off(action.layer_tap.val) :
 277:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 278:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 279:./tmk_keyboard/tmk_core/common/action.c ****                 case OP_SET_CLEAR:
 280:./tmk_keyboard/tmk_core/common/action.c ****                     event.pressed ? layer_move(action.layer_tap.val) :
 281:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_clear();
 282:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 283:./tmk_keyboard/tmk_core/common/action.c ****                 default:
 284:./tmk_keyboard/tmk_core/common/action.c ****                     /* tap key */
 285:./tmk_keyboard/tmk_core/common/action.c ****                     if (event.pressed) {
 286:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count > 0) {
 287:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 288:./tmk_keyboard/tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 289:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 290:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: On on press\n");
 291:./tmk_keyboard/tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 292:./tmk_keyboard/tmk_core/common/action.c ****                         }
 293:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 294:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count > 0) {
 295:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 296:./tmk_keyboard/tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 297:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 298:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: Off on release\n");
 299:./tmk_keyboard/tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 300:./tmk_keyboard/tmk_core/common/action.c ****                         }
 301:./tmk_keyboard/tmk_core/common/action.c ****                     }
 302:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 303:./tmk_keyboard/tmk_core/common/action.c ****             }
 304:./tmk_keyboard/tmk_core/common/action.c ****             break;
 305:./tmk_keyboard/tmk_core/common/action.c ****     #endif
 306:./tmk_keyboard/tmk_core/common/action.c **** #endif
 307:./tmk_keyboard/tmk_core/common/action.c ****         /* Extentions */
 308:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_MACRO
 309:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_MACRO:
 310:./tmk_keyboard/tmk_core/common/action.c ****             action_macro_play(action_get_macro(record, action.func.id, action.func.opt));
 311:./tmk_keyboard/tmk_core/common/action.c ****             break;
 312:./tmk_keyboard/tmk_core/common/action.c **** #endif
 313:./tmk_keyboard/tmk_core/common/action.c **** #ifdef BACKLIGHT_ENABLE
 314:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_BACKLIGHT:
 315:./tmk_keyboard/tmk_core/common/action.c ****             if (!event.pressed) {
 316:./tmk_keyboard/tmk_core/common/action.c ****                 switch (action.backlight.opt) {
 317:./tmk_keyboard/tmk_core/common/action.c ****                     case BACKLIGHT_INCREASE:
 318:./tmk_keyboard/tmk_core/common/action.c ****                         backlight_increase();
 319:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 320:./tmk_keyboard/tmk_core/common/action.c ****                     case BACKLIGHT_DECREASE:
 321:./tmk_keyboard/tmk_core/common/action.c ****                         backlight_decrease();
 322:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 323:./tmk_keyboard/tmk_core/common/action.c ****                     case BACKLIGHT_TOGGLE:
 324:./tmk_keyboard/tmk_core/common/action.c ****                         backlight_toggle();
 325:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 326:./tmk_keyboard/tmk_core/common/action.c ****                     case BACKLIGHT_STEP:
 327:./tmk_keyboard/tmk_core/common/action.c ****                         backlight_step();
 328:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 329:./tmk_keyboard/tmk_core/common/action.c ****                     case BACKLIGHT_LEVEL:
 330:./tmk_keyboard/tmk_core/common/action.c ****                         backlight_level(action.backlight.level);
 331:./tmk_keyboard/tmk_core/common/action.c ****                         break;
 332:./tmk_keyboard/tmk_core/common/action.c ****                 }
 333:./tmk_keyboard/tmk_core/common/action.c ****             }
 334:./tmk_keyboard/tmk_core/common/action.c ****             break;
 335:./tmk_keyboard/tmk_core/common/action.c **** #endif
 336:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_COMMAND:
 337:./tmk_keyboard/tmk_core/common/action.c ****             break;
 338:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_FUNCTION
 339:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_FUNCTION:
 340:./tmk_keyboard/tmk_core/common/action.c ****             action_function(record, action.func.id, action.func.opt);
 341:./tmk_keyboard/tmk_core/common/action.c ****             break;
 342:./tmk_keyboard/tmk_core/common/action.c **** #endif
 343:./tmk_keyboard/tmk_core/common/action.c ****         default:
 344:./tmk_keyboard/tmk_core/common/action.c ****             break;
 345:./tmk_keyboard/tmk_core/common/action.c ****     }
 346:./tmk_keyboard/tmk_core/common/action.c **** }
 347:./tmk_keyboard/tmk_core/common/action.c **** 
 348:./tmk_keyboard/tmk_core/common/action.c **** 
 349:./tmk_keyboard/tmk_core/common/action.c **** 
 350:./tmk_keyboard/tmk_core/common/action.c **** 
 351:./tmk_keyboard/tmk_core/common/action.c **** /*
 352:./tmk_keyboard/tmk_core/common/action.c ****  * Utilities for actions.
 353:./tmk_keyboard/tmk_core/common/action.c ****  */
 354:./tmk_keyboard/tmk_core/common/action.c **** void register_code(uint8_t code)
 355:./tmk_keyboard/tmk_core/common/action.c **** {
 132               		.loc 1 355 1 is_stmt 1 view -0
 133               		.cfi_startproc
 134               		.loc 1 355 1 is_stmt 0 view .LVU21
 135 0000 CF93      		push r28
 136               	.LCFI4:
 137               		.cfi_def_cfa_offset 3
 138               		.cfi_offset 28, -2
 139               	/* prologue: function */
 140               	/* frame size = 0 */
 141               	/* stack size = 1 */
 142               	.L__stack_usage = 1
 143 0002 C82F      		mov r28,r24
 356:./tmk_keyboard/tmk_core/common/action.c ****     if (code == KC_NO) {
 144               		.loc 1 356 5 is_stmt 1 view .LVU22
 145               		.loc 1 356 8 is_stmt 0 view .LVU23
 146 0004 8823      		tst r24
 147 0006 01F4      		brne .+2
 148 0008 00C0      		rjmp .L7
 357:./tmk_keyboard/tmk_core/common/action.c ****         return;
 358:./tmk_keyboard/tmk_core/common/action.c ****     }
 359:./tmk_keyboard/tmk_core/common/action.c **** 
 360:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 361:./tmk_keyboard/tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 362:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 363:./tmk_keyboard/tmk_core/common/action.c ****         // Resync: ignore if caps lock already is on
 364:./tmk_keyboard/tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK)) return;
 365:./tmk_keyboard/tmk_core/common/action.c **** #endif
 366:./tmk_keyboard/tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 367:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 368:./tmk_keyboard/tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 369:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 370:./tmk_keyboard/tmk_core/common/action.c ****     }
 371:./tmk_keyboard/tmk_core/common/action.c **** 
 372:./tmk_keyboard/tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 373:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 374:./tmk_keyboard/tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_NUM_LOCK)) return;
 375:./tmk_keyboard/tmk_core/common/action.c **** #endif
 376:./tmk_keyboard/tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 377:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 378:./tmk_keyboard/tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 379:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 380:./tmk_keyboard/tmk_core/common/action.c ****     }
 381:./tmk_keyboard/tmk_core/common/action.c **** 
 382:./tmk_keyboard/tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 383:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 384:./tmk_keyboard/tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK)) return;
 385:./tmk_keyboard/tmk_core/common/action.c **** #endif
 386:./tmk_keyboard/tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 387:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 388:./tmk_keyboard/tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 389:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 390:./tmk_keyboard/tmk_core/common/action.c ****     }
 391:./tmk_keyboard/tmk_core/common/action.c **** #endif
 392:./tmk_keyboard/tmk_core/common/action.c **** 
 393:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_KEY(code) {
 149               		.loc 1 393 10 is_stmt 1 view .LVU24
 150               		.loc 1 393 13 is_stmt 0 view .LVU25
 151 000a 8CEF      		ldi r24,lo8(-4)
 152               	.LVL9:
 153               		.loc 1 393 13 view .LVU26
 154 000c 8C0F      		add r24,r28
 155 000e 813A      		cpi r24,lo8(-95)
 156 0010 00F4      		brsh .L10
 394:./tmk_keyboard/tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 395:./tmk_keyboard/tmk_core/common/action.c ****         if (command_proc(code)) return;
 157               		.loc 1 395 9 is_stmt 1 view .LVU27
 158               		.loc 1 395 13 is_stmt 0 view .LVU28
 159 0012 8C2F      		mov r24,r28
 160 0014 0E94 0000 		call command_proc
 161               	.LVL10:
 162               		.loc 1 395 12 view .LVU29
 163 0018 8111      		cpse r24,__zero_reg__
 164 001a 00C0      		rjmp .L7
 396:./tmk_keyboard/tmk_core/common/action.c **** 
 397:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_ONESHOT
 398:./tmk_keyboard/tmk_core/common/action.c **** /* TODO: remove
 399:./tmk_keyboard/tmk_core/common/action.c ****         if (oneshot_state.mods && !oneshot_state.disabled) {
 400:./tmk_keyboard/tmk_core/common/action.c ****             uint8_t tmp_mods = get_mods();
 401:./tmk_keyboard/tmk_core/common/action.c ****             add_mods(oneshot_state.mods);
 402:./tmk_keyboard/tmk_core/common/action.c **** 
 403:./tmk_keyboard/tmk_core/common/action.c ****             add_key(code);
 404:./tmk_keyboard/tmk_core/common/action.c ****             send_keyboard_report();
 405:./tmk_keyboard/tmk_core/common/action.c **** 
 406:./tmk_keyboard/tmk_core/common/action.c ****             set_mods(tmp_mods);
 407:./tmk_keyboard/tmk_core/common/action.c ****             send_keyboard_report();
 408:./tmk_keyboard/tmk_core/common/action.c ****             oneshot_cancel();
 409:./tmk_keyboard/tmk_core/common/action.c ****         } else 
 410:./tmk_keyboard/tmk_core/common/action.c **** */
 411:./tmk_keyboard/tmk_core/common/action.c **** #endif
 412:./tmk_keyboard/tmk_core/common/action.c ****         {
 413:./tmk_keyboard/tmk_core/common/action.c ****             add_key(code);
 165               		.loc 1 413 13 is_stmt 1 view .LVU30
 166 001c 8C2F      		mov r24,r28
 167 001e 0E94 0000 		call add_key
 168               	.LVL11:
 414:./tmk_keyboard/tmk_core/common/action.c ****             send_keyboard_report();
 169               		.loc 1 414 13 view .LVU31
 170               	.L19:
 415:./tmk_keyboard/tmk_core/common/action.c ****         }
 416:./tmk_keyboard/tmk_core/common/action.c ****     }
 417:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_MOD(code) {
 418:./tmk_keyboard/tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 419:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 171               		.loc 1 419 9 view .LVU32
 172               	/* epilogue start */
 420:./tmk_keyboard/tmk_core/common/action.c ****     }
 421:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 422:./tmk_keyboard/tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 423:./tmk_keyboard/tmk_core/common/action.c ****     }
 424:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 425:./tmk_keyboard/tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 426:./tmk_keyboard/tmk_core/common/action.c ****     }
 427:./tmk_keyboard/tmk_core/common/action.c **** }
 173               		.loc 1 427 1 is_stmt 0 view .LVU33
 174 0022 CF91      		pop r28
 419:./tmk_keyboard/tmk_core/common/action.c ****     }
 175               		.loc 1 419 9 view .LVU34
 176 0024 0C94 0000 		jmp send_keyboard_report
 177               	.LVL12:
 178               	.L10:
 417:./tmk_keyboard/tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 179               		.loc 1 417 10 is_stmt 1 view .LVU35
 417:./tmk_keyboard/tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 180               		.loc 1 417 13 is_stmt 0 view .LVU36
 181 0028 80E2      		ldi r24,lo8(32)
 182 002a 8C0F      		add r24,r28
 183 002c 8830      		cpi r24,lo8(8)
 184 002e 00F4      		brsh .L12
 418:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 185               		.loc 1 418 9 is_stmt 1 view .LVU37
 418:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 186               		.loc 1 418 18 is_stmt 0 view .LVU38
 187 0030 C770      		andi r28,lo8(7)
 188               	.LVL13:
 418:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 189               		.loc 1 418 9 view .LVU39
 190 0032 81E0      		ldi r24,lo8(1)
 191 0034 00C0      		rjmp 2f
 192               		1:
 193 0036 880F      		lsl r24
 194               		2:
 195 0038 CA95      		dec r28
 196 003a 02F4      		brpl 1b
 197 003c 0E94 0000 		call add_mods
 198               	.LVL14:
 199 0040 00C0      		rjmp .L19
 200               	.LVL15:
 201               	.L12:
 421:./tmk_keyboard/tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 202               		.loc 1 421 10 is_stmt 1 view .LVU40
 421:./tmk_keyboard/tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 203               		.loc 1 421 13 is_stmt 0 view .LVU41
 204 0042 8BE5      		ldi r24,lo8(91)
 205 0044 8C0F      		add r24,r28
 206 0046 8330      		cpi r24,lo8(3)
 207 0048 00F4      		brsh .L13
 422:./tmk_keyboard/tmk_core/common/action.c ****     }
 208               		.loc 1 422 9 is_stmt 1 view .LVU42
 209 004a 81E8      		ldi r24,lo8(-127)
 210 004c 90E0      		ldi r25,0
 211 004e C53A      		cpi r28,lo8(-91)
 212 0050 01F0      		breq .L14
 422:./tmk_keyboard/tmk_core/common/action.c ****     }
 213               		.loc 1 422 26 is_stmt 0 discriminator 1 view .LVU43
 214 0052 83E8      		ldi r24,lo8(-125)
 215 0054 90E0      		ldi r25,0
 216 0056 C63A      		cpi r28,lo8(-90)
 217 0058 01F4      		brne .L14
 422:./tmk_keyboard/tmk_core/common/action.c ****     }
 218               		.loc 1 422 26 view .LVU44
 219 005a 82E8      		ldi r24,lo8(-126)
 220 005c 90E0      		ldi r25,0
 221               	.L14:
 222               	/* epilogue start */
 223               		.loc 1 427 1 discriminator 12 view .LVU45
 224 005e CF91      		pop r28
 225               	.LVL16:
 422:./tmk_keyboard/tmk_core/common/action.c ****     }
 226               		.loc 1 422 9 discriminator 12 view .LVU46
 227 0060 0C94 0000 		jmp host_system_send
 228               	.LVL17:
 229               	.L13:
 424:./tmk_keyboard/tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 230               		.loc 1 424 10 is_stmt 1 view .LVU47
 424:./tmk_keyboard/tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 231               		.loc 1 424 13 is_stmt 0 view .LVU48
 232 0064 C85A      		subi r28,lo8(-(88))
 233               	.LVL18:
 424:./tmk_keyboard/tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 234               		.loc 1 424 13 view .LVU49
 235 0066 C531      		cpi r28,lo8(21)
 236 0068 00F4      		brsh .L7
 425:./tmk_keyboard/tmk_core/common/action.c ****     }
 237               		.loc 1 425 9 is_stmt 1 view .LVU50
 424:./tmk_keyboard/tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 238               		.loc 1 424 13 is_stmt 0 view .LVU51
 239 006a 8AE2      		ldi r24,lo8(42)
 240 006c 92E0      		ldi r25,lo8(2)
 241 006e C431      		cpi r28,lo8(20)
 242 0070 01F0      		breq .L15
 243 0072 EC2F      		mov r30,r28
 244 0074 F0E0      		ldi r31,0
 245 0076 EE0F      		lsl r30
 246 0078 FF1F      		rol r31
 247 007a E050      		subi r30,lo8(-(CSWTCH.32))
 248 007c F040      		sbci r31,hi8(-(CSWTCH.32))
 249 007e 8081      		ld r24,Z
 250 0080 9181      		ldd r25,Z+1
 251               	.L15:
 252               	/* epilogue start */
 253               		.loc 1 427 1 discriminator 84 view .LVU52
 254 0082 CF91      		pop r28
 255               	.LVL19:
 425:./tmk_keyboard/tmk_core/common/action.c ****     }
 256               		.loc 1 425 9 discriminator 84 view .LVU53
 257 0084 0C94 0000 		jmp host_consumer_send
 258               	.LVL20:
 259               	.L7:
 260               	/* epilogue start */
 261               		.loc 1 427 1 view .LVU54
 262 0088 CF91      		pop r28
 263 008a 0895      		ret
 264               		.cfi_endproc
 265               	.LFE6:
 267               		.section	.text.unregister_code,"ax",@progbits
 268               	.global	unregister_code
 270               	unregister_code:
 271               	.LVL21:
 272               	.LFB7:
 428:./tmk_keyboard/tmk_core/common/action.c **** 
 429:./tmk_keyboard/tmk_core/common/action.c **** void unregister_code(uint8_t code)
 430:./tmk_keyboard/tmk_core/common/action.c **** {
 273               		.loc 1 430 1 is_stmt 1 view -0
 274               		.cfi_startproc
 275               	/* prologue: function */
 276               	/* frame size = 0 */
 277               	/* stack size = 0 */
 278               	.L__stack_usage = 0
 431:./tmk_keyboard/tmk_core/common/action.c ****     if (code == KC_NO) {
 279               		.loc 1 431 5 view .LVU56
 280               		.loc 1 431 8 is_stmt 0 view .LVU57
 281 0000 8823      		tst r24
 282 0002 01F0      		breq .L20
 432:./tmk_keyboard/tmk_core/common/action.c ****         return;
 433:./tmk_keyboard/tmk_core/common/action.c ****     }
 434:./tmk_keyboard/tmk_core/common/action.c **** 
 435:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 436:./tmk_keyboard/tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 437:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 438:./tmk_keyboard/tmk_core/common/action.c ****         // Resync: ignore if caps lock already is off
 439:./tmk_keyboard/tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK))) return;
 440:./tmk_keyboard/tmk_core/common/action.c **** #endif
 441:./tmk_keyboard/tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 442:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 443:./tmk_keyboard/tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 444:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 445:./tmk_keyboard/tmk_core/common/action.c ****     }
 446:./tmk_keyboard/tmk_core/common/action.c **** 
 447:./tmk_keyboard/tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 448:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 449:./tmk_keyboard/tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_NUM_LOCK))) return;
 450:./tmk_keyboard/tmk_core/common/action.c **** #endif
 451:./tmk_keyboard/tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 452:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 453:./tmk_keyboard/tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 454:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 455:./tmk_keyboard/tmk_core/common/action.c ****     }
 456:./tmk_keyboard/tmk_core/common/action.c **** 
 457:./tmk_keyboard/tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 458:./tmk_keyboard/tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 459:./tmk_keyboard/tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK))) return;
 460:./tmk_keyboard/tmk_core/common/action.c **** #endif
 461:./tmk_keyboard/tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 462:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 463:./tmk_keyboard/tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 464:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 465:./tmk_keyboard/tmk_core/common/action.c ****     }
 466:./tmk_keyboard/tmk_core/common/action.c **** #endif
 467:./tmk_keyboard/tmk_core/common/action.c **** 
 468:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_KEY(code) {
 283               		.loc 1 468 10 is_stmt 1 view .LVU58
 284               		.loc 1 468 13 is_stmt 0 view .LVU59
 285 0004 9CEF      		ldi r25,lo8(-4)
 286 0006 980F      		add r25,r24
 287 0008 913A      		cpi r25,lo8(-95)
 288 000a 00F4      		brsh .L22
 469:./tmk_keyboard/tmk_core/common/action.c ****         del_key(code);
 289               		.loc 1 469 9 is_stmt 1 view .LVU60
 290 000c 0E94 0000 		call del_key
 291               	.LVL22:
 470:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 292               		.loc 1 470 9 view .LVU61
 293               	.L28:
 471:./tmk_keyboard/tmk_core/common/action.c ****     }
 472:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_MOD(code) {
 473:./tmk_keyboard/tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 474:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 294               		.loc 1 474 9 view .LVU62
 295 0010 0C94 0000 		jmp send_keyboard_report
 296               	.LVL23:
 297               	.L22:
 472:./tmk_keyboard/tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 298               		.loc 1 472 10 view .LVU63
 472:./tmk_keyboard/tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 299               		.loc 1 472 13 is_stmt 0 view .LVU64
 300 0014 90E2      		ldi r25,lo8(32)
 301 0016 980F      		add r25,r24
 302 0018 9830      		cpi r25,lo8(8)
 303 001a 00F4      		brsh .L23
 473:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 304               		.loc 1 473 9 is_stmt 1 view .LVU65
 473:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 305               		.loc 1 473 18 is_stmt 0 view .LVU66
 306 001c 8770      		andi r24,lo8(7)
 307               	.LVL24:
 473:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 308               		.loc 1 473 9 view .LVU67
 309 001e 91E0      		ldi r25,lo8(1)
 310 0020 00C0      		rjmp 2f
 311               		1:
 312 0022 990F      		lsl r25
 313               		2:
 314 0024 8A95      		dec r24
 315 0026 02F4      		brpl 1b
 316 0028 892F      		mov r24,r25
 317 002a 0E94 0000 		call del_mods
 318               	.LVL25:
 319 002e 00C0      		rjmp .L28
 320               	.LVL26:
 321               	.L23:
 475:./tmk_keyboard/tmk_core/common/action.c ****     }
 476:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 322               		.loc 1 476 10 is_stmt 1 view .LVU68
 323               		.loc 1 476 13 is_stmt 0 view .LVU69
 324 0030 9BE5      		ldi r25,lo8(91)
 325 0032 980F      		add r25,r24
 326 0034 9330      		cpi r25,lo8(3)
 327 0036 00F4      		brsh .L24
 477:./tmk_keyboard/tmk_core/common/action.c ****         host_system_send(0);
 328               		.loc 1 477 9 is_stmt 1 view .LVU70
 329 0038 90E0      		ldi r25,0
 330 003a 80E0      		ldi r24,0
 331               	.LVL27:
 332               		.loc 1 477 9 is_stmt 0 view .LVU71
 333 003c 0C94 0000 		jmp host_system_send
 334               	.LVL28:
 335               	.L24:
 478:./tmk_keyboard/tmk_core/common/action.c ****     }
 479:./tmk_keyboard/tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 336               		.loc 1 479 10 is_stmt 1 view .LVU72
 337               		.loc 1 479 13 is_stmt 0 view .LVU73
 338 0040 885A      		subi r24,lo8(-(88))
 339               	.LVL29:
 340               		.loc 1 479 13 view .LVU74
 341 0042 8531      		cpi r24,lo8(21)
 342 0044 00F4      		brsh .L20
 480:./tmk_keyboard/tmk_core/common/action.c ****         host_consumer_send(0);
 343               		.loc 1 480 9 is_stmt 1 view .LVU75
 344 0046 90E0      		ldi r25,0
 345 0048 80E0      		ldi r24,0
 346               	.LVL30:
 347               		.loc 1 480 9 is_stmt 0 view .LVU76
 348 004a 0C94 0000 		jmp host_consumer_send
 349               	.LVL31:
 350               	.L20:
 351               	/* epilogue start */
 481:./tmk_keyboard/tmk_core/common/action.c ****     }
 482:./tmk_keyboard/tmk_core/common/action.c **** }
 352               		.loc 1 482 1 view .LVU77
 353 004e 0895      		ret
 354               		.cfi_endproc
 355               	.LFE7:
 357               		.section	.text.register_mods,"ax",@progbits
 358               	.global	register_mods
 360               	register_mods:
 361               	.LVL32:
 362               	.LFB8:
 483:./tmk_keyboard/tmk_core/common/action.c **** 
 484:./tmk_keyboard/tmk_core/common/action.c **** void register_mods(uint8_t mods)
 485:./tmk_keyboard/tmk_core/common/action.c **** {
 363               		.loc 1 485 1 is_stmt 1 view -0
 364               		.cfi_startproc
 365               	/* prologue: function */
 366               	/* frame size = 0 */
 367               	/* stack size = 0 */
 368               	.L__stack_usage = 0
 486:./tmk_keyboard/tmk_core/common/action.c ****     if (mods) {
 369               		.loc 1 486 5 view .LVU79
 370               		.loc 1 486 8 is_stmt 0 view .LVU80
 371 0000 8823      		tst r24
 372 0002 01F0      		breq .L29
 487:./tmk_keyboard/tmk_core/common/action.c ****         add_mods(mods);
 373               		.loc 1 487 9 is_stmt 1 view .LVU81
 374 0004 0E94 0000 		call add_mods
 375               	.LVL33:
 488:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 376               		.loc 1 488 9 view .LVU82
 377 0008 0C94 0000 		jmp send_keyboard_report
 378               	.LVL34:
 379               	.L29:
 380               	/* epilogue start */
 489:./tmk_keyboard/tmk_core/common/action.c ****     }
 490:./tmk_keyboard/tmk_core/common/action.c **** }
 381               		.loc 1 490 1 is_stmt 0 view .LVU83
 382 000c 0895      		ret
 383               		.cfi_endproc
 384               	.LFE8:
 386               		.section	.text.unregister_mods,"ax",@progbits
 387               	.global	unregister_mods
 389               	unregister_mods:
 390               	.LVL35:
 391               	.LFB9:
 491:./tmk_keyboard/tmk_core/common/action.c **** 
 492:./tmk_keyboard/tmk_core/common/action.c **** void unregister_mods(uint8_t mods)
 493:./tmk_keyboard/tmk_core/common/action.c **** {
 392               		.loc 1 493 1 is_stmt 1 view -0
 393               		.cfi_startproc
 394               	/* prologue: function */
 395               	/* frame size = 0 */
 396               	/* stack size = 0 */
 397               	.L__stack_usage = 0
 494:./tmk_keyboard/tmk_core/common/action.c ****     if (mods) {
 398               		.loc 1 494 5 view .LVU85
 399               		.loc 1 494 8 is_stmt 0 view .LVU86
 400 0000 8823      		tst r24
 401 0002 01F0      		breq .L31
 495:./tmk_keyboard/tmk_core/common/action.c ****         del_mods(mods);
 402               		.loc 1 495 9 is_stmt 1 view .LVU87
 403 0004 0E94 0000 		call del_mods
 404               	.LVL36:
 496:./tmk_keyboard/tmk_core/common/action.c ****         send_keyboard_report();
 405               		.loc 1 496 9 view .LVU88
 406 0008 0C94 0000 		jmp send_keyboard_report
 407               	.LVL37:
 408               	.L31:
 409               	/* epilogue start */
 497:./tmk_keyboard/tmk_core/common/action.c ****     }
 498:./tmk_keyboard/tmk_core/common/action.c **** }
 410               		.loc 1 498 1 is_stmt 0 view .LVU89
 411 000c 0895      		ret
 412               		.cfi_endproc
 413               	.LFE9:
 415               		.section	.text.process_action,"ax",@progbits
 416               	.global	process_action
 418               	process_action:
 419               	.LVL38:
 420               	.LFB5:
  59:./tmk_keyboard/tmk_core/common/action.c ****     keyevent_t event = record->event;
 421               		.loc 1 59 1 is_stmt 1 view -0
 422               		.cfi_startproc
  59:./tmk_keyboard/tmk_core/common/action.c ****     keyevent_t event = record->event;
 423               		.loc 1 59 1 is_stmt 0 view .LVU91
 424 0000 AF92      		push r10
 425               	.LCFI5:
 426               		.cfi_def_cfa_offset 3
 427               		.cfi_offset 10, -2
 428 0002 BF92      		push r11
 429               	.LCFI6:
 430               		.cfi_def_cfa_offset 4
 431               		.cfi_offset 11, -3
 432 0004 CF92      		push r12
 433               	.LCFI7:
 434               		.cfi_def_cfa_offset 5
 435               		.cfi_offset 12, -4
 436 0006 DF92      		push r13
 437               	.LCFI8:
 438               		.cfi_def_cfa_offset 6
 439               		.cfi_offset 13, -5
 440 0008 EF92      		push r14
 441               	.LCFI9:
 442               		.cfi_def_cfa_offset 7
 443               		.cfi_offset 14, -6
 444 000a FF92      		push r15
 445               	.LCFI10:
 446               		.cfi_def_cfa_offset 8
 447               		.cfi_offset 15, -7
 448 000c 0F93      		push r16
 449               	.LCFI11:
 450               		.cfi_def_cfa_offset 9
 451               		.cfi_offset 16, -8
 452 000e 1F93      		push r17
 453               	.LCFI12:
 454               		.cfi_def_cfa_offset 10
 455               		.cfi_offset 17, -9
 456 0010 CF93      		push r28
 457               	.LCFI13:
 458               		.cfi_def_cfa_offset 11
 459               		.cfi_offset 28, -10
 460 0012 DF93      		push r29
 461               	.LCFI14:
 462               		.cfi_def_cfa_offset 12
 463               		.cfi_offset 29, -11
 464 0014 CDB7      		in r28,__SP_L__
 465 0016 DEB7      		in r29,__SP_H__
 466               	.LCFI15:
 467               		.cfi_def_cfa_register 28
 468 0018 2997      		sbiw r28,9
 469               	.LCFI16:
 470               		.cfi_def_cfa_offset 21
 471 001a 0FB6      		in __tmp_reg__,__SREG__
 472 001c F894      		cli
 473 001e DEBF      		out __SP_H__,r29
 474 0020 0FBE      		out __SREG__,__tmp_reg__
 475 0022 CDBF      		out __SP_L__,r28
 476               	/* prologue: function */
 477               	/* frame size = 9 */
 478               	/* stack size = 19 */
 479               	.L__stack_usage = 19
 480 0024 5C01      		movw r10,r24
  60:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 481               		.loc 1 60 5 is_stmt 1 view .LVU92
  60:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 482               		.loc 1 60 16 is_stmt 0 view .LVU93
 483 0026 85E0      		ldi r24,lo8(5)
 484               	.LVL39:
  60:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 485               		.loc 1 60 16 view .LVU94
 486 0028 F501      		movw r30,r10
 487 002a DE01      		movw r26,r28
 488 002c 1196      		adiw r26,1
 489               		0:
 490 002e 0190      		ld r0,Z+
 491 0030 0D92      		st X+,r0
 492 0032 8A95      		dec r24
 493 0034 01F4      		brne 0b
 494               	.LVL40:
  62:./tmk_keyboard/tmk_core/common/action.c **** #endif
 495               		.loc 1 62 5 is_stmt 1 view .LVU95
  65:./tmk_keyboard/tmk_core/common/action.c **** 
 496               		.loc 1 65 5 view .LVU96
 497               	.LBB12:
 498               	.LBI12:
 499               		.loc 2 49 20 view .LVU97
 500               	.LBB13:
 501               		.loc 2 49 51 view .LVU98
 502               		.loc 2 49 74 is_stmt 0 view .LVU99
 503 0036 F501      		movw r30,r10
 504 0038 8381      		ldd r24,Z+3
 505 003a 9481      		ldd r25,Z+4
 506 003c 892B      		or r24,r25
 507 003e 01F0      		breq .L97
 508 0040 8081      		ld r24,Z
 509 0042 9181      		ldd r25,Z+1
 510 0044 8923      		and r24,r25
 511 0046 8F3F      		cpi r24,lo8(-1)
 512 0048 01F0      		breq .+2
 513 004a 00C0      		rjmp .L119
 514               	.LVL41:
 515               	.L97:
 516               	/* epilogue start */
 517               		.loc 2 49 74 view .LVU100
 518               	.LBE13:
 519               	.LBE12:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 520               		.loc 1 346 1 view .LVU101
 521 004c 2996      		adiw r28,9
 522 004e 0FB6      		in __tmp_reg__,__SREG__
 523 0050 F894      		cli
 524 0052 DEBF      		out __SP_H__,r29
 525 0054 0FBE      		out __SREG__,__tmp_reg__
 526 0056 CDBF      		out __SP_L__,r28
 527 0058 DF91      		pop r29
 528 005a CF91      		pop r28
 529 005c 1F91      		pop r17
 530               	.LVL42:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 531               		.loc 1 346 1 view .LVU102
 532 005e 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 533               		.loc 1 346 1 view .LVU103
 534 0060 FF90      		pop r15
 535 0062 EF90      		pop r14
 536 0064 DF90      		pop r13
 537 0066 CF90      		pop r12
 538 0068 BF90      		pop r11
 539 006a AF90      		pop r10
 540               	.LVL43:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 541               		.loc 1 346 1 view .LVU104
 542 006c 0895      		ret
 543               	.LVL44:
 544               	.L36:
 545               	.LBB14:
  80:./tmk_keyboard/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 546               		.loc 1 80 17 is_stmt 1 view .LVU105
  80:./tmk_keyboard/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 547               		.loc 1 80 75 is_stmt 0 view .LVU106
 548 006e F12F      		mov r31,r17
 549 0070 FF70      		andi r31,lo8(15)
 550 0072 FF2E      		mov r15,r31
  80:./tmk_keyboard/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 551               		.loc 1 80 48 view .LVU107
 552 0074 107F      		andi r17,lo8(-16)
  80:./tmk_keyboard/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 553               		.loc 1 80 25 view .LVU108
 554 0076 01F0      		breq .L37
  80:./tmk_keyboard/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 555               		.loc 1 80 25 discriminator 2 view .LVU109
 556 0078 F294      		swap r15
 557 007a 20EF      		ldi r18,lo8(-16)
 558 007c F222      		and r15,r18
 559               	.L37:
 560               	.LVL45:
  82:./tmk_keyboard/tmk_core/common/action.c ****                     if (mods) {
 561               		.loc 1 82 17 is_stmt 1 discriminator 4 view .LVU110
  82:./tmk_keyboard/tmk_core/common/action.c ****                     if (mods) {
 562               		.loc 1 82 20 is_stmt 0 discriminator 4 view .LVU111
 563 007e EE20      		tst r14
 564 0080 01F0      		breq .L38
  83:./tmk_keyboard/tmk_core/common/action.c ****                         add_weak_mods(mods);
 565               		.loc 1 83 21 is_stmt 1 view .LVU112
  83:./tmk_keyboard/tmk_core/common/action.c ****                         add_weak_mods(mods);
 566               		.loc 1 83 24 is_stmt 0 view .LVU113
 567 0082 FF20      		tst r15
 568 0084 01F0      		breq .L125
  84:./tmk_keyboard/tmk_core/common/action.c ****                         send_keyboard_report();
 569               		.loc 1 84 25 is_stmt 1 view .LVU114
 570 0086 8F2D      		mov r24,r15
 571 0088 0E94 0000 		call add_weak_mods
 572               	.LVL46:
  85:./tmk_keyboard/tmk_core/common/action.c ****                     }
 573               		.loc 1 85 25 view .LVU115
 574 008c 0E94 0000 		call send_keyboard_report
 575               	.LVL47:
  87:./tmk_keyboard/tmk_core/common/action.c ****                 } else {
 576               		.loc 1 87 21 view .LVU116
 577               	.L125:
  87:./tmk_keyboard/tmk_core/common/action.c ****                 } else {
 578               		.loc 1 87 21 is_stmt 0 view .LVU117
 579               	.LBE14:
 287:./tmk_keyboard/tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 580               		.loc 1 287 29 is_stmt 1 view .LVU118
 288:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 581               		.loc 1 288 29 view .LVU119
 582 0090 802F      		mov r24,r16
 583               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 584               		.loc 1 346 1 is_stmt 0 view .LVU120
 585 0092 2996      		adiw r28,9
 586 0094 0FB6      		in __tmp_reg__,__SREG__
 587 0096 F894      		cli
 588 0098 DEBF      		out __SP_H__,r29
 589 009a 0FBE      		out __SREG__,__tmp_reg__
 590 009c CDBF      		out __SP_L__,r28
 591 009e DF91      		pop r29
 592 00a0 CF91      		pop r28
 593 00a2 1F91      		pop r17
 594               	.LVL48:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 595               		.loc 1 346 1 view .LVU121
 596 00a4 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 597               		.loc 1 346 1 view .LVU122
 598 00a6 FF90      		pop r15
 599 00a8 EF90      		pop r14
 600 00aa DF90      		pop r13
 601 00ac CF90      		pop r12
 602 00ae BF90      		pop r11
 603 00b0 AF90      		pop r10
 604               	.LVL49:
 288:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 605               		.loc 1 288 29 view .LVU123
 606 00b2 0C94 0000 		jmp register_code
 607               	.LVL50:
 608               	.L38:
 609               	.LBB15:
  89:./tmk_keyboard/tmk_core/common/action.c ****                     if (mods) {
 610               		.loc 1 89 21 is_stmt 1 view .LVU124
  89:./tmk_keyboard/tmk_core/common/action.c ****                     if (mods) {
 611               		.loc 1 89 21 is_stmt 0 view .LVU125
 612 00b6 802F      		mov r24,r16
 613 00b8 0E94 0000 		call unregister_code
 614               	.LVL51:
  90:./tmk_keyboard/tmk_core/common/action.c ****                         del_weak_mods(mods);
 615               		.loc 1 90 21 is_stmt 1 view .LVU126
  90:./tmk_keyboard/tmk_core/common/action.c ****                         del_weak_mods(mods);
 616               		.loc 1 90 24 is_stmt 0 view .LVU127
 617 00bc FF20      		tst r15
 618 00be 01F0      		breq .L97
  91:./tmk_keyboard/tmk_core/common/action.c ****                         send_keyboard_report();
 619               		.loc 1 91 25 is_stmt 1 view .LVU128
 620 00c0 8F2D      		mov r24,r15
 621 00c2 0E94 0000 		call del_weak_mods
 622               	.LVL52:
  92:./tmk_keyboard/tmk_core/common/action.c ****                     }
 623               		.loc 1 92 25 view .LVU129
 624               	/* epilogue start */
 625               	.LBE15:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 626               		.loc 1 346 1 is_stmt 0 view .LVU130
 627 00c6 2996      		adiw r28,9
 628 00c8 0FB6      		in __tmp_reg__,__SREG__
 629 00ca F894      		cli
 630 00cc DEBF      		out __SP_H__,r29
 631 00ce 0FBE      		out __SREG__,__tmp_reg__
 632 00d0 CDBF      		out __SP_L__,r28
 633 00d2 DF91      		pop r29
 634 00d4 CF91      		pop r28
 635 00d6 1F91      		pop r17
 636 00d8 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 637               		.loc 1 346 1 view .LVU131
 638 00da FF90      		pop r15
 639               	.LVL53:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 640               		.loc 1 346 1 view .LVU132
 641 00dc EF90      		pop r14
 642 00de DF90      		pop r13
 643 00e0 CF90      		pop r12
 644 00e2 BF90      		pop r11
 645 00e4 AF90      		pop r10
 646               	.LVL54:
 647               	.LBB16:
  92:./tmk_keyboard/tmk_core/common/action.c ****                     }
 648               		.loc 1 92 25 view .LVU133
 649 00e6 0C94 0000 		jmp send_keyboard_report
 650               	.LVL55:
 651               	.L42:
  92:./tmk_keyboard/tmk_core/common/action.c ****                     }
 652               		.loc 1 92 25 view .LVU134
 653               	.LBE16:
 654               	.LBB17:
 101:./tmk_keyboard/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 655               		.loc 1 101 17 is_stmt 1 view .LVU135
 656               	.LBE17:
 657               	.LBB18:
  80:./tmk_keyboard/tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 658               		.loc 1 80 75 is_stmt 0 view .LVU136
 659 00ea 212F      		mov r18,r17
 660 00ec 2F70      		andi r18,lo8(15)
 661 00ee D22E      		mov r13,r18
 662               	.LBE18:
 663               	.LBB19:
 101:./tmk_keyboard/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 664               		.loc 1 101 48 view .LVU137
 665 00f0 107F      		andi r17,lo8(-16)
 101:./tmk_keyboard/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 666               		.loc 1 101 25 view .LVU138
 667 00f2 1032      		cpi r17,lo8(32)
 668 00f4 01F0      		breq .L43
 101:./tmk_keyboard/tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 669               		.loc 1 101 25 discriminator 2 view .LVU139
 670 00f6 D294      		swap r13
 671 00f8 90EF      		ldi r25,lo8(-16)
 672 00fa D922      		and r13,r25
 673               	.L43:
 674               	.LVL56:
 103:./tmk_keyboard/tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 675               		.loc 1 103 17 is_stmt 1 discriminator 4 view .LVU140
 103:./tmk_keyboard/tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 676               		.loc 1 103 17 is_stmt 0 discriminator 4 view .LVU141
 677 00fc 0023      		tst r16
 678 00fe 01F0      		breq .L44
 679 0100 0130      		cpi r16,lo8(1)
 680 0102 01F4      		brne .+2
 681 0104 00C0      		rjmp .L45
 152:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count > 0) {
 682               		.loc 1 152 25 is_stmt 1 view .LVU142
 152:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count > 0) {
 683               		.loc 1 152 28 is_stmt 0 view .LVU143
 684 0106 EE20      		tst r14
 685 0108 01F4      		brne .+2
 686 010a 00C0      		rjmp .L54
 153:./tmk_keyboard/tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 687               		.loc 1 153 29 is_stmt 1 view .LVU144
 153:./tmk_keyboard/tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 688               		.loc 1 153 32 is_stmt 0 view .LVU145
 689 010c FF20      		tst r15
 690 010e 01F0      		breq .L53
 154:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 691               		.loc 1 154 33 is_stmt 1 view .LVU146
 154:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 692               		.loc 1 154 37 is_stmt 0 view .LVU147
 693 0110 F501      		movw r30,r10
 694 0112 8581      		ldd r24,Z+5
 154:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 695               		.loc 1 154 36 view .LVU148
 696 0114 80FF      		sbrs r24,0
 697 0116 00C0      		rjmp .L125
 155:./tmk_keyboard/tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 698               		.loc 1 155 37 is_stmt 1 view .LVU149
 157:./tmk_keyboard/tmk_core/common/action.c ****                                     register_mods(mods);
 699               		.loc 1 157 37 view .LVU150
 157:./tmk_keyboard/tmk_core/common/action.c ****                                     register_mods(mods);
 700               		.loc 1 157 55 is_stmt 0 view .LVU151
 701 0118 8F70      		andi r24,lo8(15)
 702 011a 8583      		std Z+5,r24
 158:./tmk_keyboard/tmk_core/common/action.c ****                                 } else {
 703               		.loc 1 158 37 is_stmt 1 view .LVU152
 704 011c 00C0      		rjmp .L53
 705               	.L44:
 107:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count == 0) {
 706               		.loc 1 107 25 view .LVU153
 107:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count == 0) {
 707               		.loc 1 107 28 is_stmt 0 view .LVU154
 708 011e EE20      		tst r14
 709 0120 01F0      		breq .L47
 108:./tmk_keyboard/tmk_core/common/action.c ****                                 register_mods(mods);
 710               		.loc 1 108 29 is_stmt 1 view .LVU155
 108:./tmk_keyboard/tmk_core/common/action.c ****                                 register_mods(mods);
 711               		.loc 1 108 32 is_stmt 0 view .LVU156
 712 0122 F110      		cpse r15,__zero_reg__
 713 0124 00C0      		rjmp .L48
 714               	.L53:
 140:./tmk_keyboard/tmk_core/common/action.c ****                                     register_mods(mods);
 715               		.loc 1 140 37 is_stmt 1 view .LVU157
 141:./tmk_keyboard/tmk_core/common/action.c ****                                 }
 716               		.loc 1 141 37 view .LVU158
 717 0126 8D2D      		mov r24,r13
 718               	.LVL57:
 719               	.L121:
 720               	/* epilogue start */
 141:./tmk_keyboard/tmk_core/common/action.c ****                                 }
 721               		.loc 1 141 37 is_stmt 0 view .LVU159
 722               	.LBE19:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 723               		.loc 1 346 1 view .LVU160
 724 0128 2996      		adiw r28,9
 725 012a 0FB6      		in __tmp_reg__,__SREG__
 726 012c F894      		cli
 727 012e DEBF      		out __SP_H__,r29
 728 0130 0FBE      		out __SREG__,__tmp_reg__
 729 0132 CDBF      		out __SP_L__,r28
 730 0134 DF91      		pop r29
 731 0136 CF91      		pop r28
 732 0138 1F91      		pop r17
 733               	.LVL58:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 734               		.loc 1 346 1 view .LVU161
 735 013a 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 736               		.loc 1 346 1 view .LVU162
 737 013c FF90      		pop r15
 738 013e EF90      		pop r14
 739 0140 DF90      		pop r13
 740 0142 CF90      		pop r12
 741 0144 BF90      		pop r11
 742 0146 AF90      		pop r10
 743               	.LVL59:
 744               	.LBB20:
 141:./tmk_keyboard/tmk_core/common/action.c ****                                 }
 745               		.loc 1 141 37 view .LVU163
 746 0148 0C94 0000 		jmp register_mods
 747               	.LVL60:
 748               	.L48:
 111:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 749               		.loc 1 111 34 is_stmt 1 view .LVU164
 111:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 750               		.loc 1 111 37 is_stmt 0 view .LVU165
 751 014c 31E0      		ldi r19,lo8(1)
 113:./tmk_keyboard/tmk_core/common/action.c ****                             }
 752               		.loc 1 113 33 view .LVU166
 753 014e 8D2D      		mov r24,r13
 111:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 754               		.loc 1 111 37 view .LVU167
 755 0150 F312      		cpse r15,r19
 756 0152 00C0      		rjmp .L121
 112:./tmk_keyboard/tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 757               		.loc 1 112 33 is_stmt 1 view .LVU168
 113:./tmk_keyboard/tmk_core/common/action.c ****                             }
 758               		.loc 1 113 33 view .LVU169
 759               	/* epilogue start */
 760               	.LBE20:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 761               		.loc 1 346 1 is_stmt 0 view .LVU170
 762 0154 2996      		adiw r28,9
 763 0156 0FB6      		in __tmp_reg__,__SREG__
 764 0158 F894      		cli
 765 015a DEBF      		out __SP_H__,r29
 766 015c 0FBE      		out __SREG__,__tmp_reg__
 767 015e CDBF      		out __SP_L__,r28
 768 0160 DF91      		pop r29
 769 0162 CF91      		pop r28
 770 0164 1F91      		pop r17
 771 0166 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 772               		.loc 1 346 1 view .LVU171
 773 0168 FF90      		pop r15
 774 016a EF90      		pop r14
 775 016c DF90      		pop r13
 776               	.LVL61:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 777               		.loc 1 346 1 view .LVU172
 778 016e CF90      		pop r12
 779 0170 BF90      		pop r11
 780 0172 AF90      		pop r10
 781               	.LVL62:
 782               	.LBB21:
 113:./tmk_keyboard/tmk_core/common/action.c ****                             }
 783               		.loc 1 113 33 view .LVU173
 784 0174 0C94 0000 		jmp set_oneshot_mods
 785               	.LVL63:
 786               	.L47:
 119:./tmk_keyboard/tmk_core/common/action.c ****                                 clear_oneshot_mods();
 787               		.loc 1 119 29 is_stmt 1 view .LVU174
 119:./tmk_keyboard/tmk_core/common/action.c ****                                 clear_oneshot_mods();
 788               		.loc 1 119 32 is_stmt 0 view .LVU175
 789 0178 F110      		cpse r15,__zero_reg__
 790 017a 00C0      		rjmp .L50
 791               	.L122:
 127:./tmk_keyboard/tmk_core/common/action.c ****                                 unregister_mods(mods);
 792               		.loc 1 127 33 is_stmt 1 view .LVU176
 793 017c 0E94 0000 		call clear_oneshot_mods
 794               	.LVL64:
 128:./tmk_keyboard/tmk_core/common/action.c ****                             }
 795               		.loc 1 128 33 view .LVU177
 796               	.L57:
 172:./tmk_keyboard/tmk_core/common/action.c ****                                 unregister_mods(mods);
 797               		.loc 1 172 33 view .LVU178
 173:./tmk_keyboard/tmk_core/common/action.c ****                             }
 798               		.loc 1 173 33 view .LVU179
 799 0180 8D2D      		mov r24,r13
 800               	.LVL65:
 801               	.L129:
 802               	/* epilogue start */
 173:./tmk_keyboard/tmk_core/common/action.c ****                             }
 803               		.loc 1 173 33 is_stmt 0 view .LVU180
 804               	.LBE21:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 805               		.loc 1 346 1 view .LVU181
 806 0182 2996      		adiw r28,9
 807 0184 0FB6      		in __tmp_reg__,__SREG__
 808 0186 F894      		cli
 809 0188 DEBF      		out __SP_H__,r29
 810 018a 0FBE      		out __SREG__,__tmp_reg__
 811 018c CDBF      		out __SP_L__,r28
 812 018e DF91      		pop r29
 813 0190 CF91      		pop r28
 814 0192 1F91      		pop r17
 815               	.LVL66:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 816               		.loc 1 346 1 view .LVU182
 817 0194 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 818               		.loc 1 346 1 view .LVU183
 819 0196 FF90      		pop r15
 820 0198 EF90      		pop r14
 821 019a DF90      		pop r13
 822 019c CF90      		pop r12
 823 019e BF90      		pop r11
 824 01a0 AF90      		pop r10
 825               	.LVL67:
 256:./tmk_keyboard/tmk_core/common/action.c ****                     }
 826               		.loc 1 256 25 view .LVU184
 827 01a2 0C94 0000 		jmp unregister_mods
 828               	.LVL68:
 829               	.L50:
 830               	.LBB22:
 123:./tmk_keyboard/tmk_core/common/action.c ****                                 // Retain Oneshot mods
 831               		.loc 1 123 34 is_stmt 1 view .LVU185
 123:./tmk_keyboard/tmk_core/common/action.c ****                                 // Retain Oneshot mods
 832               		.loc 1 123 37 is_stmt 0 view .LVU186
 833 01a6 41E0      		ldi r20,lo8(1)
 834 01a8 F416      		cp r15,r20
 835 01aa 01F4      		brne .+2
 836 01ac 00C0      		rjmp .L97
 837 01ae 00C0      		rjmp .L122
 838               	.L45:
 134:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 839               		.loc 1 134 25 is_stmt 1 view .LVU187
 134:./tmk_keyboard/tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 840               		.loc 1 134 28 is_stmt 0 view .LVU188
 841 01b0 EE20      		tst r14
 842 01b2 01F0      		breq .L52
 135:./tmk_keyboard/tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 843               		.loc 1 135 29 is_stmt 1 view .LVU189
 135:./tmk_keyboard/tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 844               		.loc 1 135 32 is_stmt 0 view .LVU190
 845 01b4 55E0      		ldi r21,lo8(5)
 846 01b6 5F15      		cp r21,r15
 847 01b8 00F4      		brsh .+2
 848 01ba 00C0      		rjmp .L97
 136:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 849               		.loc 1 136 33 is_stmt 1 view .LVU191
 136:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 850               		.loc 1 136 44 is_stmt 0 view .LVU192
 851 01bc 0E94 0000 		call get_mods
 852               	.LVL69:
 136:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 853               		.loc 1 136 37 view .LVU193
 854 01c0 8D21      		and r24,r13
 136:./tmk_keyboard/tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 855               		.loc 1 136 36 view .LVU194
 856 01c2 01F4      		brne .+2
 857 01c4 00C0      		rjmp .L53
 858 01c6 00C0      		rjmp .L57
 859               	.L52:
 145:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 860               		.loc 1 145 29 is_stmt 1 view .LVU195
 145:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 861               		.loc 1 145 32 is_stmt 0 view .LVU196
 862 01c8 84E0      		ldi r24,lo8(4)
 863 01ca 8F15      		cp r24,r15
 864 01cc 00F4      		brsh .+2
 865 01ce 00C0      		rjmp .L97
 866 01d0 00C0      		rjmp .L57
 867               	.L54:
 168:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 868               		.loc 1 168 29 is_stmt 1 view .LVU197
 168:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 869               		.loc 1 168 32 is_stmt 0 view .LVU198
 870 01d2 FF20      		tst r15
 871 01d4 01F0      		breq .L57
 872               	.LVL70:
 873               	.L128:
 168:./tmk_keyboard/tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 874               		.loc 1 168 32 view .LVU199
 875               	.LBE22:
 295:./tmk_keyboard/tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 876               		.loc 1 295 29 is_stmt 1 view .LVU200
 296:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 877               		.loc 1 296 29 view .LVU201
 878 01d6 802F      		mov r24,r16
 879               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 880               		.loc 1 346 1 is_stmt 0 view .LVU202
 881 01d8 2996      		adiw r28,9
 882 01da 0FB6      		in __tmp_reg__,__SREG__
 883 01dc F894      		cli
 884 01de DEBF      		out __SP_H__,r29
 885 01e0 0FBE      		out __SREG__,__tmp_reg__
 886 01e2 CDBF      		out __SP_L__,r28
 887 01e4 DF91      		pop r29
 888 01e6 CF91      		pop r28
 889 01e8 1F91      		pop r17
 890               	.LVL71:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 891               		.loc 1 346 1 view .LVU203
 892 01ea 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 893               		.loc 1 346 1 view .LVU204
 894 01ec FF90      		pop r15
 895 01ee EF90      		pop r14
 896 01f0 DF90      		pop r13
 897 01f2 CF90      		pop r12
 898 01f4 BF90      		pop r11
 899 01f6 AF90      		pop r10
 900               	.LVL72:
 296:./tmk_keyboard/tmk_core/common/action.c ****                         } else {
 901               		.loc 1 296 29 view .LVU205
 902 01f8 0C94 0000 		jmp unregister_code
 903               	.LVL73:
 904               	.L58:
 184:./tmk_keyboard/tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 905               		.loc 1 184 13 is_stmt 1 view .LVU206
 184:./tmk_keyboard/tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 906               		.loc 1 184 33 is_stmt 0 view .LVU207
 907 01fc 812F      		mov r24,r17
 908 01fe 8695      		lsr r24
 909 0200 8695      		lsr r24
 910 0202 8370      		andi r24,lo8(3)
 911 0204 01F0      		breq .L59
 912 0206 8130      		cpi r24,lo8(1)
 913 0208 01F0      		breq .+2
 914 020a 00C0      		rjmp .L97
 193:./tmk_keyboard/tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 915               		.loc 1 193 21 is_stmt 1 view .LVU208
 194:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 916               		.loc 1 194 25 is_stmt 0 view .LVU209
 917 020c C801      		movw r24,r16
 918 020e 9370      		andi r25,lo8(3)
 193:./tmk_keyboard/tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 919               		.loc 1 193 24 view .LVU210
 920 0210 E110      		cpse r14,__zero_reg__
 921 0212 00C0      		rjmp .L132
 196:./tmk_keyboard/tmk_core/common/action.c ****                     }
 922               		.loc 1 196 25 is_stmt 1 view .LVU211
 923 0214 90E0      		ldi r25,0
 924 0216 80E0      		ldi r24,0
 925               	.L132:
 926               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 927               		.loc 1 346 1 is_stmt 0 view .LVU212
 928 0218 2996      		adiw r28,9
 929 021a 0FB6      		in __tmp_reg__,__SREG__
 930 021c F894      		cli
 931 021e DEBF      		out __SP_H__,r29
 932 0220 0FBE      		out __SREG__,__tmp_reg__
 933 0222 CDBF      		out __SP_L__,r28
 934 0224 DF91      		pop r29
 935 0226 CF91      		pop r28
 936 0228 1F91      		pop r17
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 937               		.loc 1 346 1 view .LVU213
 938 022a 0F91      		pop r16
 939 022c FF90      		pop r15
 940 022e EF90      		pop r14
 941 0230 DF90      		pop r13
 942 0232 CF90      		pop r12
 943 0234 BF90      		pop r11
 944 0236 AF90      		pop r10
 945               	.LVL74:
 196:./tmk_keyboard/tmk_core/common/action.c ****                     }
 946               		.loc 1 196 25 view .LVU214
 947 0238 0C94 0000 		jmp host_consumer_send
 948               	.LVL75:
 949               	.L59:
 186:./tmk_keyboard/tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 950               		.loc 1 186 21 is_stmt 1 view .LVU215
 187:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 951               		.loc 1 187 25 is_stmt 0 view .LVU216
 952 023c C801      		movw r24,r16
 953 023e 9370      		andi r25,lo8(3)
 186:./tmk_keyboard/tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 954               		.loc 1 186 24 view .LVU217
 955 0240 E110      		cpse r14,__zero_reg__
 956 0242 00C0      		rjmp .L130
 189:./tmk_keyboard/tmk_core/common/action.c ****                     }
 957               		.loc 1 189 25 is_stmt 1 view .LVU218
 958 0244 90E0      		ldi r25,0
 959 0246 80E0      		ldi r24,0
 960               	.L130:
 961               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 962               		.loc 1 346 1 is_stmt 0 view .LVU219
 963 0248 2996      		adiw r28,9
 964 024a 0FB6      		in __tmp_reg__,__SREG__
 965 024c F894      		cli
 966 024e DEBF      		out __SP_H__,r29
 967 0250 0FBE      		out __SREG__,__tmp_reg__
 968 0252 CDBF      		out __SP_L__,r28
 969 0254 DF91      		pop r29
 970 0256 CF91      		pop r28
 971 0258 1F91      		pop r17
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 972               		.loc 1 346 1 view .LVU220
 973 025a 0F91      		pop r16
 974 025c FF90      		pop r15
 975 025e EF90      		pop r14
 976 0260 DF90      		pop r13
 977 0262 CF90      		pop r12
 978 0264 BF90      		pop r11
 979 0266 AF90      		pop r10
 980               	.LVL76:
 189:./tmk_keyboard/tmk_core/common/action.c ****                     }
 981               		.loc 1 189 25 view .LVU221
 982 0268 0C94 0000 		jmp host_system_send
 983               	.LVL77:
 984               	.L63:
 216:./tmk_keyboard/tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 985               		.loc 1 216 13 is_stmt 1 view .LVU222
 216:./tmk_keyboard/tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 986               		.loc 1 216 39 is_stmt 0 view .LVU223
 987 026c 812F      		mov r24,r17
 988 026e 8370      		andi r24,lo8(3)
 216:./tmk_keyboard/tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 989               		.loc 1 216 16 view .LVU224
 990 0270 01F0      		breq .+2
 991 0272 00C0      		rjmp .L64
 218:./tmk_keyboard/tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 992               		.loc 1 218 17 is_stmt 1 view .LVU225
 218:./tmk_keyboard/tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 993               		.loc 1 218 20 is_stmt 0 view .LVU226
 994 0274 E110      		cpse r14,__zero_reg__
 995 0276 00C0      		rjmp .L97
 996               	.LBB23:
 219:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 997               		.loc 1 219 21 is_stmt 1 view .LVU227
 998               	.LVL78:
 220:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 999               		.loc 1 220 21 view .LVU228
 219:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1000               		.loc 1 219 55 is_stmt 0 view .LVU229
 1001 0278 202F      		mov r18,r16
 1002 027a 2295      		swap r18
 1003 027c 2695      		lsr r18
 1004 027e 2770      		andi r18,lo8(7)
 219:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1005               		.loc 1 219 29 view .LVU230
 1006 0280 220F      		lsl r18
 1007 0282 220F      		lsl r18
 220:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1008               		.loc 1 220 66 view .LVU231
 1009 0284 802F      		mov r24,r16
 1010 0286 8F70      		andi r24,lo8(15)
 220:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1011               		.loc 1 220 38 view .LVU232
 1012 0288 90E0      		ldi r25,0
 1013 028a B0E0      		ldi r27,0
 1014 028c A0E0      		ldi r26,0
 220:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1015               		.loc 1 220 30 view .LVU233
 1016 028e 6C01      		movw r12,r24
 1017 0290 7D01      		movw r14,r26
 1018 0292 022E      		mov r0,r18
 1019 0294 00C0      		rjmp 2f
 1020               		1:
 1021 0296 CC0C      		lsl r12
 1022 0298 DD1C      		rol r13
 1023 029a EE1C      		rol r14
 1024 029c FF1C      		rol r15
 1025               		2:
 1026 029e 0A94      		dec r0
 1027 02a0 02F4      		brpl 1b
 1028               	.LVL79:
 221:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1029               		.loc 1 221 21 is_stmt 1 view .LVU234
 221:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1030               		.loc 1 221 91 is_stmt 0 view .LVU235
 1031 02a2 60E0      		ldi r22,0
 1032 02a4 70E0      		ldi r23,0
 1033 02a6 CB01      		movw r24,r22
 1034 02a8 04FF      		sbrs r16,4
 1035 02aa 00C0      		rjmp .L65
 221:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1036               		.loc 1 221 82 discriminator 1 view .LVU236
 1037 02ac 6FE0      		ldi r22,lo8(15)
 1038 02ae 70E0      		ldi r23,0
 1039 02b0 80E0      		ldi r24,0
 1040 02b2 90E0      		ldi r25,0
 1041 02b4 00C0      		rjmp 2f
 1042               		1:
 1043 02b6 660F      		lsl r22
 1044 02b8 771F      		rol r23
 1045 02ba 881F      		rol r24
 1046 02bc 991F      		rol r25
 1047               		2:
 1048 02be 2A95      		dec r18
 1049 02c0 02F4      		brpl 1b
 221:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1050               		.loc 1 221 91 discriminator 1 view .LVU237
 1051 02c2 6095      		com r22
 1052 02c4 7095      		com r23
 1053 02c6 8095      		com r24
 1054 02c8 9095      		com r25
 1055               	.L65:
 1056               	.LVL80:
 222:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1057               		.loc 1 222 21 is_stmt 1 discriminator 4 view .LVU238
 222:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1058               		.loc 1 222 47 is_stmt 0 discriminator 4 view .LVU239
 1059 02ca 1695      		lsr r17
 1060 02cc 1695      		lsr r17
 1061               	.LVL81:
 222:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1062               		.loc 1 222 47 discriminator 4 view .LVU240
 1063 02ce 1370      		andi r17,lo8(3)
 1064 02d0 1230      		cpi r17,lo8(2)
 1065 02d2 01F0      		breq .L66
 1066 02d4 1330      		cpi r17,lo8(3)
 1067 02d6 01F4      		brne .+2
 1068 02d8 00C0      		rjmp .L67
 1069 02da 9B01      		movw r18,r22
 1070 02dc AC01      		movw r20,r24
 1071 02de 2C29      		or r18,r12
 1072 02e0 3D29      		or r19,r13
 1073 02e2 4E29      		or r20,r14
 1074 02e4 5F29      		or r21,r15
 1075 02e6 2E83      		std Y+6,r18
 1076 02e8 3F83      		std Y+7,r19
 1077 02ea 4887      		std Y+8,r20
 1078 02ec 5987      		std Y+9,r21
 1079 02ee 1130      		cpi r17,lo8(1)
 1080 02f0 01F0      		breq .L68
 223:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1081               		.loc 1 223 42 is_stmt 1 view .LVU241
 1082 02f2 CA01      		movw r24,r20
 1083 02f4 B901      		movw r22,r18
 1084               	.LVL82:
 1085               	/* epilogue start */
 223:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1086               		.loc 1 223 42 is_stmt 0 view .LVU242
 1087               	.LBE23:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1088               		.loc 1 346 1 view .LVU243
 1089 02f6 2996      		adiw r28,9
 1090 02f8 0FB6      		in __tmp_reg__,__SREG__
 1091 02fa F894      		cli
 1092 02fc DEBF      		out __SP_H__,r29
 1093 02fe 0FBE      		out __SREG__,__tmp_reg__
 1094 0300 CDBF      		out __SP_L__,r28
 1095 0302 DF91      		pop r29
 1096 0304 CF91      		pop r28
 1097 0306 1F91      		pop r17
 1098 0308 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1099               		.loc 1 346 1 view .LVU244
 1100 030a FF90      		pop r15
 1101 030c EF90      		pop r14
 1102 030e DF90      		pop r13
 1103 0310 CF90      		pop r12
 1104               	.LVL83:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1105               		.loc 1 346 1 view .LVU245
 1106 0312 BF90      		pop r11
 1107 0314 AF90      		pop r10
 1108               	.LVL84:
 1109               	.LBB24:
 223:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1110               		.loc 1 223 42 view .LVU246
 1111 0316 0C94 0000 		jmp default_layer_and
 1112               	.LVL85:
 1113               	.L68:
 224:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_XOR: default_layer_xor(bits | mask); break;
 1114               		.loc 1 224 42 is_stmt 1 view .LVU247
 1115 031a 6E81      		ldd r22,Y+6
 1116 031c 7F81      		ldd r23,Y+7
 1117 031e 8885      		ldd r24,Y+8
 1118 0320 9985      		ldd r25,Y+9
 1119               	.LVL86:
 1120               	.L133:
 1121               	/* epilogue start */
 224:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_XOR: default_layer_xor(bits | mask); break;
 1122               		.loc 1 224 42 is_stmt 0 view .LVU248
 1123               	.LBE24:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1124               		.loc 1 346 1 view .LVU249
 1125 0322 2996      		adiw r28,9
 1126 0324 0FB6      		in __tmp_reg__,__SREG__
 1127 0326 F894      		cli
 1128 0328 DEBF      		out __SP_H__,r29
 1129 032a 0FBE      		out __SREG__,__tmp_reg__
 1130 032c CDBF      		out __SP_L__,r28
 1131 032e DF91      		pop r29
 1132 0330 CF91      		pop r28
 1133 0332 1F91      		pop r17
 1134 0334 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1135               		.loc 1 346 1 view .LVU250
 1136 0336 FF90      		pop r15
 1137 0338 EF90      		pop r14
 1138 033a DF90      		pop r13
 1139 033c CF90      		pop r12
 1140               	.LVL87:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1141               		.loc 1 346 1 view .LVU251
 1142 033e BF90      		pop r11
 1143 0340 AF90      		pop r10
 1144               	.LVL88:
 1145               	.LBB25:
 226:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1146               		.loc 1 226 67 view .LVU252
 1147 0342 0C94 0000 		jmp default_layer_or
 1148               	.LVL89:
 1149               	.L66:
 225:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1150               		.loc 1 225 42 is_stmt 1 view .LVU253
 1151 0346 9B01      		movw r18,r22
 1152 0348 AC01      		movw r20,r24
 1153 034a 2C29      		or r18,r12
 1154 034c 3D29      		or r19,r13
 1155 034e 4E29      		or r20,r14
 1156 0350 5F29      		or r21,r15
 1157 0352 2E83      		std Y+6,r18
 1158 0354 3F83      		std Y+7,r19
 1159 0356 4887      		std Y+8,r20
 1160 0358 5987      		std Y+9,r21
 1161 035a CA01      		movw r24,r20
 1162 035c B901      		movw r22,r18
 1163               	.LVL90:
 1164               	/* epilogue start */
 225:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1165               		.loc 1 225 42 is_stmt 0 view .LVU254
 1166               	.LBE25:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1167               		.loc 1 346 1 view .LVU255
 1168 035e 2996      		adiw r28,9
 1169 0360 0FB6      		in __tmp_reg__,__SREG__
 1170 0362 F894      		cli
 1171 0364 DEBF      		out __SP_H__,r29
 1172 0366 0FBE      		out __SREG__,__tmp_reg__
 1173 0368 CDBF      		out __SP_L__,r28
 1174 036a DF91      		pop r29
 1175 036c CF91      		pop r28
 1176 036e 1F91      		pop r17
 1177 0370 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1178               		.loc 1 346 1 view .LVU256
 1179 0372 FF90      		pop r15
 1180 0374 EF90      		pop r14
 1181 0376 DF90      		pop r13
 1182 0378 CF90      		pop r12
 1183               	.LVL91:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1184               		.loc 1 346 1 view .LVU257
 1185 037a BF90      		pop r11
 1186 037c AF90      		pop r10
 1187               	.LVL92:
 1188               	.LBB26:
 225:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1189               		.loc 1 225 42 view .LVU258
 1190 037e 0C94 0000 		jmp default_layer_xor
 1191               	.LVL93:
 1192               	.L67:
 226:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1193               		.loc 1 226 42 is_stmt 1 view .LVU259
 1194 0382 0E94 0000 		call default_layer_and
 1195               	.LVL94:
 226:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1196               		.loc 1 226 67 view .LVU260
 1197 0386 C701      		movw r24,r14
 1198 0388 B601      		movw r22,r12
 1199 038a 00C0      		rjmp .L133
 1200               	.LVL95:
 1201               	.L64:
 226:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1202               		.loc 1 226 67 is_stmt 0 view .LVU261
 1203               	.LBE26:
 231:./tmk_keyboard/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1204               		.loc 1 231 17 is_stmt 1 view .LVU262
 231:./tmk_keyboard/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1205               		.loc 1 231 21 is_stmt 0 view .LVU263
 1206 038c EE20      		tst r14
 1207 038e 01F4      		brne .+2
 1208 0390 00C0      		rjmp .L69
 231:./tmk_keyboard/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1209               		.loc 1 231 20 discriminator 1 view .LVU264
 1210 0392 10FF      		sbrs r17,0
 1211 0394 00C0      		rjmp .L97
 1212               	.L70:
 1213               	.LBB27:
 233:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1214               		.loc 1 233 21 is_stmt 1 view .LVU265
 1215               	.LVL96:
 234:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1216               		.loc 1 234 21 view .LVU266
 233:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1217               		.loc 1 233 55 is_stmt 0 view .LVU267
 1218 0396 202F      		mov r18,r16
 1219 0398 2295      		swap r18
 1220 039a 2695      		lsr r18
 1221 039c 2770      		andi r18,lo8(7)
 233:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1222               		.loc 1 233 29 view .LVU268
 1223 039e 220F      		lsl r18
 1224 03a0 220F      		lsl r18
 234:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1225               		.loc 1 234 66 view .LVU269
 1226 03a2 802F      		mov r24,r16
 1227 03a4 8F70      		andi r24,lo8(15)
 234:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1228               		.loc 1 234 38 view .LVU270
 1229 03a6 90E0      		ldi r25,0
 1230 03a8 B0E0      		ldi r27,0
 1231 03aa A0E0      		ldi r26,0
 234:./tmk_keyboard/tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1232               		.loc 1 234 30 view .LVU271
 1233 03ac 6C01      		movw r12,r24
 1234 03ae 7D01      		movw r14,r26
 1235 03b0 022E      		mov r0,r18
 1236 03b2 00C0      		rjmp 2f
 1237               		1:
 1238 03b4 CC0C      		lsl r12
 1239 03b6 DD1C      		rol r13
 1240 03b8 EE1C      		rol r14
 1241 03ba FF1C      		rol r15
 1242               		2:
 1243 03bc 0A94      		dec r0
 1244 03be 02F4      		brpl 1b
 1245               	.LVL97:
 235:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1246               		.loc 1 235 21 is_stmt 1 view .LVU272
 235:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1247               		.loc 1 235 91 is_stmt 0 view .LVU273
 1248 03c0 60E0      		ldi r22,0
 1249 03c2 70E0      		ldi r23,0
 1250 03c4 CB01      		movw r24,r22
 1251 03c6 04FF      		sbrs r16,4
 1252 03c8 00C0      		rjmp .L71
 235:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1253               		.loc 1 235 82 discriminator 1 view .LVU274
 1254 03ca 6FE0      		ldi r22,lo8(15)
 1255 03cc 70E0      		ldi r23,0
 1256 03ce 80E0      		ldi r24,0
 1257 03d0 90E0      		ldi r25,0
 1258 03d2 00C0      		rjmp 2f
 1259               		1:
 1260 03d4 660F      		lsl r22
 1261 03d6 771F      		rol r23
 1262 03d8 881F      		rol r24
 1263 03da 991F      		rol r25
 1264               		2:
 1265 03dc 2A95      		dec r18
 1266 03de 02F4      		brpl 1b
 235:./tmk_keyboard/tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1267               		.loc 1 235 91 discriminator 1 view .LVU275
 1268 03e0 6095      		com r22
 1269 03e2 7095      		com r23
 1270 03e4 8095      		com r24
 1271 03e6 9095      		com r25
 1272               	.L71:
 1273               	.LVL98:
 236:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1274               		.loc 1 236 21 is_stmt 1 discriminator 4 view .LVU276
 236:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1275               		.loc 1 236 47 is_stmt 0 discriminator 4 view .LVU277
 1276 03e8 1695      		lsr r17
 1277 03ea 1695      		lsr r17
 1278               	.LVL99:
 236:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1279               		.loc 1 236 47 discriminator 4 view .LVU278
 1280 03ec 1370      		andi r17,lo8(3)
 1281 03ee 1230      		cpi r17,lo8(2)
 1282 03f0 01F0      		breq .L72
 1283 03f2 1330      		cpi r17,lo8(3)
 1284 03f4 01F4      		brne .+2
 1285 03f6 00C0      		rjmp .L73
 1286 03f8 9B01      		movw r18,r22
 1287 03fa AC01      		movw r20,r24
 1288 03fc 2C29      		or r18,r12
 1289 03fe 3D29      		or r19,r13
 1290 0400 4E29      		or r20,r14
 1291 0402 5F29      		or r21,r15
 1292 0404 2E83      		std Y+6,r18
 1293 0406 3F83      		std Y+7,r19
 1294 0408 4887      		std Y+8,r20
 1295 040a 5987      		std Y+9,r21
 1296 040c 1130      		cpi r17,lo8(1)
 1297 040e 01F0      		breq .L74
 237:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1298               		.loc 1 237 42 is_stmt 1 view .LVU279
 1299 0410 CA01      		movw r24,r20
 1300 0412 B901      		movw r22,r18
 1301               	.LVL100:
 1302               	/* epilogue start */
 237:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1303               		.loc 1 237 42 is_stmt 0 view .LVU280
 1304               	.LBE27:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1305               		.loc 1 346 1 view .LVU281
 1306 0414 2996      		adiw r28,9
 1307 0416 0FB6      		in __tmp_reg__,__SREG__
 1308 0418 F894      		cli
 1309 041a DEBF      		out __SP_H__,r29
 1310 041c 0FBE      		out __SREG__,__tmp_reg__
 1311 041e CDBF      		out __SP_L__,r28
 1312 0420 DF91      		pop r29
 1313 0422 CF91      		pop r28
 1314 0424 1F91      		pop r17
 1315 0426 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1316               		.loc 1 346 1 view .LVU282
 1317 0428 FF90      		pop r15
 1318 042a EF90      		pop r14
 1319 042c DF90      		pop r13
 1320 042e CF90      		pop r12
 1321               	.LVL101:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1322               		.loc 1 346 1 view .LVU283
 1323 0430 BF90      		pop r11
 1324 0432 AF90      		pop r10
 1325               	.LVL102:
 1326               	.LBB28:
 237:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1327               		.loc 1 237 42 view .LVU284
 1328 0434 0C94 0000 		jmp layer_and
 1329               	.LVL103:
 1330               	.L69:
 237:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1331               		.loc 1 237 42 view .LVU285
 1332               	.LBE28:
 231:./tmk_keyboard/tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1333               		.loc 1 231 20 discriminator 2 view .LVU286
 1334 0438 11FF      		sbrs r17,1
 1335 043a 00C0      		rjmp .L97
 1336 043c 00C0      		rjmp .L70
 1337               	.LVL104:
 1338               	.L74:
 1339               	.LBB29:
 238:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_XOR: layer_xor(bits | mask); break;
 1340               		.loc 1 238 42 is_stmt 1 view .LVU287
 1341 043e 6E81      		ldd r22,Y+6
 1342 0440 7F81      		ldd r23,Y+7
 1343 0442 8885      		ldd r24,Y+8
 1344 0444 9985      		ldd r25,Y+9
 1345               	.LVL105:
 1346               	.L131:
 1347               	/* epilogue start */
 238:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_XOR: layer_xor(bits | mask); break;
 1348               		.loc 1 238 42 is_stmt 0 view .LVU288
 1349               	.LBE29:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1350               		.loc 1 346 1 view .LVU289
 1351 0446 2996      		adiw r28,9
 1352 0448 0FB6      		in __tmp_reg__,__SREG__
 1353 044a F894      		cli
 1354 044c DEBF      		out __SP_H__,r29
 1355 044e 0FBE      		out __SREG__,__tmp_reg__
 1356 0450 CDBF      		out __SP_L__,r28
 1357 0452 DF91      		pop r29
 1358 0454 CF91      		pop r28
 1359 0456 1F91      		pop r17
 1360 0458 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1361               		.loc 1 346 1 view .LVU290
 1362 045a FF90      		pop r15
 1363 045c EF90      		pop r14
 1364 045e DF90      		pop r13
 1365 0460 CF90      		pop r12
 1366               	.LVL106:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1367               		.loc 1 346 1 view .LVU291
 1368 0462 BF90      		pop r11
 1369 0464 AF90      		pop r10
 1370               	.LVL107:
 1371               	.LBB30:
 240:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1372               		.loc 1 240 59 view .LVU292
 1373 0466 0C94 0000 		jmp layer_or
 1374               	.LVL108:
 1375               	.L72:
 239:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1376               		.loc 1 239 42 is_stmt 1 view .LVU293
 1377 046a 9B01      		movw r18,r22
 1378 046c AC01      		movw r20,r24
 1379 046e 2C29      		or r18,r12
 1380 0470 3D29      		or r19,r13
 1381 0472 4E29      		or r20,r14
 1382 0474 5F29      		or r21,r15
 1383 0476 2E83      		std Y+6,r18
 1384 0478 3F83      		std Y+7,r19
 1385 047a 4887      		std Y+8,r20
 1386 047c 5987      		std Y+9,r21
 1387 047e CA01      		movw r24,r20
 1388 0480 B901      		movw r22,r18
 1389               	.LVL109:
 1390               	/* epilogue start */
 239:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1391               		.loc 1 239 42 is_stmt 0 view .LVU294
 1392               	.LBE30:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1393               		.loc 1 346 1 view .LVU295
 1394 0482 2996      		adiw r28,9
 1395 0484 0FB6      		in __tmp_reg__,__SREG__
 1396 0486 F894      		cli
 1397 0488 DEBF      		out __SP_H__,r29
 1398 048a 0FBE      		out __SREG__,__tmp_reg__
 1399 048c CDBF      		out __SP_L__,r28
 1400 048e DF91      		pop r29
 1401 0490 CF91      		pop r28
 1402 0492 1F91      		pop r17
 1403 0494 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1404               		.loc 1 346 1 view .LVU296
 1405 0496 FF90      		pop r15
 1406 0498 EF90      		pop r14
 1407 049a DF90      		pop r13
 1408 049c CF90      		pop r12
 1409               	.LVL110:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1410               		.loc 1 346 1 view .LVU297
 1411 049e BF90      		pop r11
 1412 04a0 AF90      		pop r10
 1413               	.LVL111:
 1414               	.LBB31:
 239:./tmk_keyboard/tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1415               		.loc 1 239 42 view .LVU298
 1416 04a2 0C94 0000 		jmp layer_xor
 1417               	.LVL112:
 1418               	.L73:
 240:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1419               		.loc 1 240 42 is_stmt 1 view .LVU299
 1420 04a6 0E94 0000 		call layer_and
 1421               	.LVL113:
 240:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1422               		.loc 1 240 59 view .LVU300
 1423 04aa C701      		movw r24,r14
 1424 04ac B601      		movw r22,r12
 1425 04ae 00C0      		rjmp .L131
 1426               	.LVL114:
 1427               	.L75:
 240:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1428               		.loc 1 240 59 is_stmt 0 view .LVU301
 1429               	.LBE31:
 248:./tmk_keyboard/tmk_core/common/action.c ****                 case 0xe0 ... 0xef:
 1430               		.loc 1 248 13 is_stmt 1 view .LVU302
 248:./tmk_keyboard/tmk_core/common/action.c ****                 case 0xe0 ... 0xef:
 1431               		.loc 1 248 13 is_stmt 0 view .LVU303
 1432 04b0 013F      		cpi r16,lo8(-15)
 1433 04b2 01F4      		brne .+2
 1434 04b4 00C0      		rjmp .L76
 1435 04b6 00F4      		brsh .L77
 1436 04b8 003F      		cpi r16,lo8(-16)
 1437 04ba 01F0      		breq .L78
 1438 04bc 003E      		cpi r16,lo8(-32)
 1439 04be 00F0      		brlo .L80
 251:./tmk_keyboard/tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1440               		.loc 1 251 21 is_stmt 1 view .LVU304
 253:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 1441               		.loc 1 253 25 is_stmt 0 view .LVU305
 1442 04c0 0F70      		andi r16,lo8(15)
 1443               	.LVL115:
 252:./tmk_keyboard/tmk_core/common/action.c ****                         register_mods(action.layer_tap.code & 0x0f);
 1444               		.loc 1 252 50 view .LVU306
 1445 04c2 812F      		mov r24,r17
 1446 04c4 8F71      		andi r24,lo8(31)
 251:./tmk_keyboard/tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1447               		.loc 1 251 24 view .LVU307
 1448 04c6 EE20      		tst r14
 1449 04c8 01F0      		breq .L83
 252:./tmk_keyboard/tmk_core/common/action.c ****                         register_mods(action.layer_tap.code & 0x0f);
 1450               		.loc 1 252 25 is_stmt 1 view .LVU308
 1451 04ca 0E94 0000 		call layer_on
 1452               	.LVL116:
 253:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 1453               		.loc 1 253 25 view .LVU309
 1454 04ce 802F      		mov r24,r16
 1455 04d0 00C0      		rjmp .L121
 1456               	.LVL117:
 1457               	.L77:
 253:./tmk_keyboard/tmk_core/common/action.c ****                     } else {
 1458               		.loc 1 253 25 is_stmt 0 view .LVU310
 1459 04d2 023F      		cpi r16,lo8(-14)
 1460 04d4 01F4      		brne .+2
 1461 04d6 00C0      		rjmp .L81
 1462 04d8 033F      		cpi r16,lo8(-13)
 1463 04da 01F4      		brne .+2
 1464 04dc 00C0      		rjmp .L82
 1465               	.L80:
 285:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count > 0) {
 1466               		.loc 1 285 21 is_stmt 1 view .LVU311
 285:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count > 0) {
 1467               		.loc 1 285 24 is_stmt 0 view .LVU312
 1468 04de EE20      		tst r14
 1469 04e0 01F4      		brne .+2
 1470 04e2 00C0      		rjmp .L89
 286:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 1471               		.loc 1 286 25 is_stmt 1 view .LVU313
 286:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 1472               		.loc 1 286 28 is_stmt 0 view .LVU314
 1473 04e4 F110      		cpse r15,__zero_reg__
 1474 04e6 00C0      		rjmp .L125
 290:./tmk_keyboard/tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 1475               		.loc 1 290 29 is_stmt 1 view .LVU315
 291:./tmk_keyboard/tmk_core/common/action.c ****                         }
 1476               		.loc 1 291 29 view .LVU316
 1477 04e8 812F      		mov r24,r17
 1478 04ea 8F71      		andi r24,lo8(31)
 1479 04ec 00C0      		rjmp .L126
 1480               	.LVL118:
 1481               	.L83:
 255:./tmk_keyboard/tmk_core/common/action.c ****                         unregister_mods(action.layer_tap.code & 0x0f);
 1482               		.loc 1 255 25 view .LVU317
 1483 04ee 0E94 0000 		call layer_off
 1484               	.LVL119:
 256:./tmk_keyboard/tmk_core/common/action.c ****                     }
 1485               		.loc 1 256 25 view .LVU318
 1486 04f2 802F      		mov r24,r16
 1487 04f4 00C0      		rjmp .L129
 1488               	.LVL120:
 1489               	.L78:
 261:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 1490               		.loc 1 261 21 view .LVU319
 261:./tmk_keyboard/tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 1491               		.loc 1 261 24 is_stmt 0 view .LVU320
 1492 04f6 EE20      		tst r14
 1493 04f8 01F0      		breq .L84
 262:./tmk_keyboard/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1494               		.loc 1 262 25 is_stmt 1 view .LVU321
 262:./tmk_keyboard/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1495               		.loc 1 262 28 is_stmt 0 view .LVU322
 1496 04fa 34E0      		ldi r19,lo8(4)
 1497 04fc 3F15      		cp r19,r15
 1498 04fe 00F4      		brsh .+2
 1499 0500 00C0      		rjmp .L97
 1500               	.L85:
 263:./tmk_keyboard/tmk_core/common/action.c ****                         }
 1501               		.loc 1 263 29 is_stmt 1 view .LVU323
 1502 0502 812F      		mov r24,r17
 1503 0504 8F71      		andi r24,lo8(31)
 1504               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1505               		.loc 1 346 1 is_stmt 0 view .LVU324
 1506 0506 2996      		adiw r28,9
 1507 0508 0FB6      		in __tmp_reg__,__SREG__
 1508 050a F894      		cli
 1509 050c DEBF      		out __SP_H__,r29
 1510 050e 0FBE      		out __SREG__,__tmp_reg__
 1511 0510 CDBF      		out __SP_L__,r28
 1512 0512 DF91      		pop r29
 1513 0514 CF91      		pop r28
 1514 0516 1F91      		pop r17
 1515               	.LVL121:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1516               		.loc 1 346 1 view .LVU325
 1517 0518 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1518               		.loc 1 346 1 view .LVU326
 1519 051a FF90      		pop r15
 1520 051c EF90      		pop r14
 1521 051e DF90      		pop r13
 1522 0520 CF90      		pop r12
 1523 0522 BF90      		pop r11
 1524 0524 AF90      		pop r10
 1525               	.LVL122:
 263:./tmk_keyboard/tmk_core/common/action.c ****                         }
 1526               		.loc 1 263 29 view .LVU327
 1527 0526 0C94 0000 		jmp layer_invert
 1528               	.LVL123:
 1529               	.L84:
 266:./tmk_keyboard/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1530               		.loc 1 266 25 is_stmt 1 view .LVU328
 266:./tmk_keyboard/tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1531               		.loc 1 266 28 is_stmt 0 view .LVU329
 1532 052a 45E0      		ldi r20,lo8(5)
 1533 052c 4F15      		cp r20,r15
 1534 052e 00F4      		brsh .+2
 1535 0530 00C0      		rjmp .L97
 1536 0532 00C0      		rjmp .L85
 1537               	.L76:
 272:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 1538               		.loc 1 272 21 is_stmt 1 view .LVU330
 252:./tmk_keyboard/tmk_core/common/action.c ****                         register_mods(action.layer_tap.code & 0x0f);
 1539               		.loc 1 252 50 is_stmt 0 view .LVU331
 1540 0534 812F      		mov r24,r17
 1541 0536 8F71      		andi r24,lo8(31)
 272:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 1542               		.loc 1 272 68 view .LVU332
 1543 0538 EE20      		tst r14
 1544 053a 01F0      		breq .L127
 1545               	.L126:
 1546               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1547               		.loc 1 346 1 view .LVU333
 1548 053c 2996      		adiw r28,9
 1549 053e 0FB6      		in __tmp_reg__,__SREG__
 1550 0540 F894      		cli
 1551 0542 DEBF      		out __SP_H__,r29
 1552 0544 0FBE      		out __SREG__,__tmp_reg__
 1553 0546 CDBF      		out __SP_L__,r28
 1554 0548 DF91      		pop r29
 1555 054a CF91      		pop r28
 1556 054c 1F91      		pop r17
 1557               	.LVL124:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1558               		.loc 1 346 1 view .LVU334
 1559 054e 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1560               		.loc 1 346 1 view .LVU335
 1561 0550 FF90      		pop r15
 1562 0552 EF90      		pop r14
 1563 0554 DF90      		pop r13
 1564 0556 CF90      		pop r12
 1565 0558 BF90      		pop r11
 1566 055a AF90      		pop r10
 1567               	.LVL125:
 291:./tmk_keyboard/tmk_core/common/action.c ****                         }
 1568               		.loc 1 291 29 view .LVU336
 1569 055c 0C94 0000 		jmp layer_on
 1570               	.LVL126:
 1571               	.L81:
 276:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 1572               		.loc 1 276 21 is_stmt 1 view .LVU337
 252:./tmk_keyboard/tmk_core/common/action.c ****                         register_mods(action.layer_tap.code & 0x0f);
 1573               		.loc 1 252 50 is_stmt 0 view .LVU338
 1574 0560 812F      		mov r24,r17
 1575 0562 8F71      		andi r24,lo8(31)
 276:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 1576               		.loc 1 276 69 view .LVU339
 1577 0564 EE20      		tst r14
 1578 0566 01F0      		breq .L126
 1579               	.L127:
 1580               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1581               		.loc 1 346 1 view .LVU340
 1582 0568 2996      		adiw r28,9
 1583 056a 0FB6      		in __tmp_reg__,__SREG__
 1584 056c F894      		cli
 1585 056e DEBF      		out __SP_H__,r29
 1586 0570 0FBE      		out __SREG__,__tmp_reg__
 1587 0572 CDBF      		out __SP_L__,r28
 1588 0574 DF91      		pop r29
 1589 0576 CF91      		pop r28
 1590 0578 1F91      		pop r17
 1591               	.LVL127:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1592               		.loc 1 346 1 view .LVU341
 1593 057a 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1594               		.loc 1 346 1 view .LVU342
 1595 057c FF90      		pop r15
 1596 057e EF90      		pop r14
 1597 0580 DF90      		pop r13
 1598 0582 CF90      		pop r12
 1599 0584 BF90      		pop r11
 1600 0586 AF90      		pop r10
 1601               	.LVL128:
 299:./tmk_keyboard/tmk_core/common/action.c ****                         }
 1602               		.loc 1 299 29 view .LVU343
 1603 0588 0C94 0000 		jmp layer_off
 1604               	.LVL129:
 1605               	.L82:
 280:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_clear();
 1606               		.loc 1 280 21 is_stmt 1 view .LVU344
 280:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_clear();
 1607               		.loc 1 280 70 is_stmt 0 view .LVU345
 1608 058c EE20      		tst r14
 1609 058e 01F0      		breq .L88
 280:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_clear();
 1610               		.loc 1 280 37 discriminator 1 view .LVU346
 1611 0590 812F      		mov r24,r17
 1612 0592 8F71      		andi r24,lo8(31)
 1613               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1614               		.loc 1 346 1 discriminator 1 view .LVU347
 1615 0594 2996      		adiw r28,9
 1616 0596 0FB6      		in __tmp_reg__,__SREG__
 1617 0598 F894      		cli
 1618 059a DEBF      		out __SP_H__,r29
 1619 059c 0FBE      		out __SREG__,__tmp_reg__
 1620 059e CDBF      		out __SP_L__,r28
 1621 05a0 DF91      		pop r29
 1622 05a2 CF91      		pop r28
 1623 05a4 1F91      		pop r17
 1624               	.LVL130:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1625               		.loc 1 346 1 discriminator 1 view .LVU348
 1626 05a6 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1627               		.loc 1 346 1 discriminator 1 view .LVU349
 1628 05a8 FF90      		pop r15
 1629 05aa EF90      		pop r14
 1630 05ac DF90      		pop r13
 1631 05ae CF90      		pop r12
 1632 05b0 BF90      		pop r11
 1633 05b2 AF90      		pop r10
 1634               	.LVL131:
 280:./tmk_keyboard/tmk_core/common/action.c ****                                     layer_clear();
 1635               		.loc 1 280 37 discriminator 1 view .LVU350
 1636 05b4 0C94 0000 		jmp layer_move
 1637               	.LVL132:
 1638               	.L88:
 1639               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1640               		.loc 1 346 1 view .LVU351
 1641 05b8 2996      		adiw r28,9
 1642 05ba 0FB6      		in __tmp_reg__,__SREG__
 1643 05bc F894      		cli
 1644 05be DEBF      		out __SP_H__,r29
 1645 05c0 0FBE      		out __SREG__,__tmp_reg__
 1646 05c2 CDBF      		out __SP_L__,r28
 1647 05c4 DF91      		pop r29
 1648 05c6 CF91      		pop r28
 1649 05c8 1F91      		pop r17
 1650               	.LVL133:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1651               		.loc 1 346 1 view .LVU352
 1652 05ca 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1653               		.loc 1 346 1 view .LVU353
 1654 05cc FF90      		pop r15
 1655 05ce EF90      		pop r14
 1656 05d0 DF90      		pop r13
 1657 05d2 CF90      		pop r12
 1658 05d4 BF90      		pop r11
 1659 05d6 AF90      		pop r10
 1660               	.LVL134:
 281:./tmk_keyboard/tmk_core/common/action.c ****                     break;
 1661               		.loc 1 281 37 view .LVU354
 1662 05d8 0C94 0000 		jmp layer_clear
 1663               	.LVL135:
 1664               	.L89:
 294:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 1665               		.loc 1 294 25 is_stmt 1 view .LVU355
 294:./tmk_keyboard/tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 1666               		.loc 1 294 28 is_stmt 0 view .LVU356
 1667 05dc F110      		cpse r15,__zero_reg__
 1668 05de 00C0      		rjmp .L128
 298:./tmk_keyboard/tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 1669               		.loc 1 298 29 is_stmt 1 view .LVU357
 299:./tmk_keyboard/tmk_core/common/action.c ****                         }
 1670               		.loc 1 299 29 view .LVU358
 1671 05e0 812F      		mov r24,r17
 1672 05e2 8F71      		andi r24,lo8(31)
 1673 05e4 00C0      		rjmp .L127
 1674               	.LVL136:
 1675               	.L92:
 310:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1676               		.loc 1 310 13 view .LVU359
 310:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1677               		.loc 1 310 83 is_stmt 0 view .LVU360
 1678 05e6 412F      		mov r20,r17
 1679 05e8 4F70      		andi r20,lo8(15)
 1680               	.LVL137:
 310:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1681               		.loc 1 310 13 view .LVU361
 1682 05ea 602F      		mov r22,r16
 1683 05ec C501      		movw r24,r10
 1684 05ee 0E94 0000 		call action_get_macro
 1685               	.LVL138:
 1686               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1687               		.loc 1 346 1 view .LVU362
 1688 05f2 2996      		adiw r28,9
 1689 05f4 0FB6      		in __tmp_reg__,__SREG__
 1690 05f6 F894      		cli
 1691 05f8 DEBF      		out __SP_H__,r29
 1692 05fa 0FBE      		out __SREG__,__tmp_reg__
 1693 05fc CDBF      		out __SP_L__,r28
 1694 05fe DF91      		pop r29
 1695 0600 CF91      		pop r28
 1696 0602 1F91      		pop r17
 1697               	.LVL139:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1698               		.loc 1 346 1 view .LVU363
 1699 0604 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1700               		.loc 1 346 1 view .LVU364
 1701 0606 FF90      		pop r15
 1702 0608 EF90      		pop r14
 1703 060a DF90      		pop r13
 1704 060c CF90      		pop r12
 1705 060e BF90      		pop r11
 1706 0610 AF90      		pop r10
 1707               	.LVL140:
 310:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1708               		.loc 1 310 13 view .LVU365
 1709 0612 0C94 0000 		jmp action_macro_play
 1710               	.LVL141:
 1711               	.L93:
 340:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1712               		.loc 1 340 13 is_stmt 1 view .LVU366
 340:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1713               		.loc 1 340 64 is_stmt 0 view .LVU367
 1714 0616 412F      		mov r20,r17
 1715 0618 4F70      		andi r20,lo8(15)
 1716               	.LVL142:
 340:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1717               		.loc 1 340 13 view .LVU368
 1718 061a 602F      		mov r22,r16
 1719 061c C501      		movw r24,r10
 1720               	/* epilogue start */
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1721               		.loc 1 346 1 view .LVU369
 1722 061e 2996      		adiw r28,9
 1723 0620 0FB6      		in __tmp_reg__,__SREG__
 1724 0622 F894      		cli
 1725 0624 DEBF      		out __SP_H__,r29
 1726 0626 0FBE      		out __SREG__,__tmp_reg__
 1727 0628 CDBF      		out __SP_L__,r28
 1728 062a DF91      		pop r29
 1729 062c CF91      		pop r28
 1730 062e 1F91      		pop r17
 1731               	.LVL143:
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1732               		.loc 1 346 1 view .LVU370
 1733 0630 0F91      		pop r16
 346:./tmk_keyboard/tmk_core/common/action.c **** 
 1734               		.loc 1 346 1 view .LVU371
 1735 0632 FF90      		pop r15
 1736 0634 EF90      		pop r14
 1737 0636 DF90      		pop r13
 1738 0638 CF90      		pop r12
 1739 063a BF90      		pop r11
 1740 063c AF90      		pop r10
 1741               	.LVL144:
 340:./tmk_keyboard/tmk_core/common/action.c ****             break;
 1742               		.loc 1 340 13 view .LVU372
 1743 063e 0C94 0000 		jmp action_function
 1744               	.LVL145:
 1745               	.L119:
  60:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 1746               		.loc 1 60 16 view .LVU373
 1747 0642 E280      		ldd r14,Z+2
  62:./tmk_keyboard/tmk_core/common/action.c **** #endif
 1748               		.loc 1 62 36 view .LVU374
 1749 0644 F580      		ldd r15,Z+5
 1750 0646 F294      		swap r15
 1751 0648 8FE0      		ldi r24,lo8(15)
 1752 064a F822      		and r15,r24
 1753               	.LVL146:
  67:./tmk_keyboard/tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 1754               		.loc 1 67 5 is_stmt 1 view .LVU375
  67:./tmk_keyboard/tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 1755               		.loc 1 67 23 is_stmt 0 view .LVU376
 1756 064c 8981      		ldd r24,Y+1
 1757 064e 9A81      		ldd r25,Y+2
 1758 0650 0E94 0000 		call layer_switch_get_action
 1759               	.LVL147:
  67:./tmk_keyboard/tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 1760               		.loc 1 67 23 view .LVU377
 1761 0654 8C01      		movw r16,r24
  68:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 1762               		.loc 1 68 5 is_stmt 1 view .LVU378
  68:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 1763               		.loc 1 68 25 view .LVU379
  70:./tmk_keyboard/tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 1764               		.loc 1 70 5 view .LVU380
  70:./tmk_keyboard/tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 1765               		.loc 1 70 31 view .LVU381
 1766 0656 0E94 0000 		call layer_debug
 1767               	.LVL148:
  71:./tmk_keyboard/tmk_core/common/action.c **** #endif
 1768               		.loc 1 71 5 view .LVU382
  71:./tmk_keyboard/tmk_core/common/action.c **** #endif
 1769               		.loc 1 71 39 view .LVU383
 1770 065a 0E94 0000 		call default_layer_debug
 1771               	.LVL149:
  73:./tmk_keyboard/tmk_core/common/action.c **** 
 1772               		.loc 1 73 5 view .LVU384
  75:./tmk_keyboard/tmk_core/common/action.c ****         /* Key and Mods */
 1773               		.loc 1 75 5 view .LVU385
  75:./tmk_keyboard/tmk_core/common/action.c ****         /* Key and Mods */
 1774               		.loc 1 75 24 is_stmt 0 view .LVU386
 1775 065e E12F      		mov r30,r17
 1776 0660 E295      		swap r30
 1777 0662 EF70      		andi r30,lo8(15)
  75:./tmk_keyboard/tmk_core/common/action.c ****         /* Key and Mods */
 1778               		.loc 1 75 5 view .LVU387
 1779 0664 F0E0      		ldi r31,0
 1780 0666 E050      		subi r30,lo8(-(gs(.L94)))
 1781 0668 F040      		sbci r31,hi8(-(gs(.L94)))
 1782 066a 0C94 0000 		jmp __tablejump2__
 1783               		.section	.jumptables.gcc.process_action,"a",@progbits
 1784               		.p2align	1
 1785               	.L94:
 1786 0000 0000      		.word gs(.L36)
 1787 0002 0000      		.word gs(.L36)
 1788 0004 0000      		.word gs(.L42)
 1789 0006 0000      		.word gs(.L42)
 1790 0008 0000      		.word gs(.L58)
 1791 000a 0000      		.word gs(.L97)
 1792 000c 0000      		.word gs(.L97)
 1793 000e 0000      		.word gs(.L97)
 1794 0010 0000      		.word gs(.L63)
 1795 0012 0000      		.word gs(.L97)
 1796 0014 0000      		.word gs(.L75)
 1797 0016 0000      		.word gs(.L75)
 1798 0018 0000      		.word gs(.L92)
 1799 001a 0000      		.word gs(.L97)
 1800 001c 0000      		.word gs(.L97)
 1801 001e 0000      		.word gs(.L93)
 1802               		.section	.text.process_action
 1803               		.cfi_endproc
 1804               	.LFE5:
 1806               		.section	.text.clear_keyboard_but_mods,"ax",@progbits
 1807               	.global	clear_keyboard_but_mods
 1809               	clear_keyboard_but_mods:
 1810               	.LFB11:
 499:./tmk_keyboard/tmk_core/common/action.c **** 
 500:./tmk_keyboard/tmk_core/common/action.c **** void clear_keyboard(void)
 501:./tmk_keyboard/tmk_core/common/action.c **** {
 502:./tmk_keyboard/tmk_core/common/action.c ****     clear_mods();
 503:./tmk_keyboard/tmk_core/common/action.c ****     clear_keyboard_but_mods();
 504:./tmk_keyboard/tmk_core/common/action.c **** }
 505:./tmk_keyboard/tmk_core/common/action.c **** 
 506:./tmk_keyboard/tmk_core/common/action.c **** void clear_keyboard_but_mods(void)
 507:./tmk_keyboard/tmk_core/common/action.c **** {
 1811               		.loc 1 507 1 is_stmt 1 view -0
 1812               		.cfi_startproc
 1813               	/* prologue: function */
 1814               	/* frame size = 0 */
 1815               	/* stack size = 0 */
 1816               	.L__stack_usage = 0
 508:./tmk_keyboard/tmk_core/common/action.c ****     clear_weak_mods();
 1817               		.loc 1 508 5 view .LVU389
 1818 0000 0E94 0000 		call clear_weak_mods
 1819               	.LVL150:
 509:./tmk_keyboard/tmk_core/common/action.c ****     clear_keys();
 1820               		.loc 1 509 5 view .LVU390
 1821 0004 0E94 0000 		call clear_keys
 1822               	.LVL151:
 510:./tmk_keyboard/tmk_core/common/action.c ****     send_keyboard_report();
 1823               		.loc 1 510 5 view .LVU391
 1824 0008 0E94 0000 		call send_keyboard_report
 1825               	.LVL152:
 511:./tmk_keyboard/tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 512:./tmk_keyboard/tmk_core/common/action.c ****     mousekey_clear();
 513:./tmk_keyboard/tmk_core/common/action.c ****     mousekey_send();
 514:./tmk_keyboard/tmk_core/common/action.c **** #endif
 515:./tmk_keyboard/tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 516:./tmk_keyboard/tmk_core/common/action.c ****     host_system_send(0);
 1826               		.loc 1 516 5 view .LVU392
 1827 000c 90E0      		ldi r25,0
 1828 000e 80E0      		ldi r24,0
 1829 0010 0E94 0000 		call host_system_send
 1830               	.LVL153:
 517:./tmk_keyboard/tmk_core/common/action.c ****     host_consumer_send(0);
 1831               		.loc 1 517 5 view .LVU393
 1832 0014 90E0      		ldi r25,0
 1833 0016 80E0      		ldi r24,0
 1834 0018 0C94 0000 		jmp host_consumer_send
 1835               	.LVL154:
 1836               		.cfi_endproc
 1837               	.LFE11:
 1839               		.section	.text.clear_keyboard,"ax",@progbits
 1840               	.global	clear_keyboard
 1842               	clear_keyboard:
 1843               	.LFB10:
 501:./tmk_keyboard/tmk_core/common/action.c ****     clear_mods();
 1844               		.loc 1 501 1 view -0
 1845               		.cfi_startproc
 1846               	/* prologue: function */
 1847               	/* frame size = 0 */
 1848               	/* stack size = 0 */
 1849               	.L__stack_usage = 0
 502:./tmk_keyboard/tmk_core/common/action.c ****     clear_keyboard_but_mods();
 1850               		.loc 1 502 5 view .LVU395
 1851 0000 0E94 0000 		call clear_mods
 1852               	.LVL155:
 503:./tmk_keyboard/tmk_core/common/action.c **** }
 1853               		.loc 1 503 5 view .LVU396
 1854 0004 0C94 0000 		jmp clear_keyboard_but_mods
 1855               	.LVL156:
 1856               		.cfi_endproc
 1857               	.LFE10:
 1859               		.section	.text.is_tap_key,"ax",@progbits
 1860               	.global	is_tap_key
 1862               	is_tap_key:
 1863               	.LVL157:
 1864               	.LFB12:
 518:./tmk_keyboard/tmk_core/common/action.c **** #endif
 519:./tmk_keyboard/tmk_core/common/action.c **** }
 520:./tmk_keyboard/tmk_core/common/action.c **** 
 521:./tmk_keyboard/tmk_core/common/action.c **** bool is_tap_key(keypos_t key)
 522:./tmk_keyboard/tmk_core/common/action.c **** {
 1865               		.loc 1 522 1 view -0
 1866               		.cfi_startproc
 1867               	/* prologue: function */
 1868               	/* frame size = 0 */
 1869               	/* stack size = 0 */
 1870               	.L__stack_usage = 0
 523:./tmk_keyboard/tmk_core/common/action.c ****     action_t action = layer_switch_get_action(key);
 1871               		.loc 1 523 5 view .LVU398
 1872               		.loc 1 523 23 is_stmt 0 view .LVU399
 1873 0000 0E94 0000 		call layer_switch_get_action
 1874               	.LVL158:
 1875               		.loc 1 523 23 view .LVU400
 1876 0004 382F      		mov r19,r24
 1877               	.LVL159:
 524:./tmk_keyboard/tmk_core/common/action.c **** 
 525:./tmk_keyboard/tmk_core/common/action.c ****     switch (action.kind.id) {
 1878               		.loc 1 525 5 is_stmt 1 view .LVU401
 1879               		.loc 1 525 24 is_stmt 0 view .LVU402
 1880 0006 292F      		mov r18,r25
 1881 0008 2295      		swap r18
 1882 000a 2F70      		andi r18,lo8(15)
 1883               		.loc 1 525 5 view .LVU403
 1884 000c 2C30      		cpi r18,lo8(12)
 1885 000e 01F0      		breq .L137
 1886 0010 00F4      		brsh .L138
 1887 0012 2430      		cpi r18,lo8(4)
 1888 0014 00F4      		brsh .L139
 1889 0016 2230      		cpi r18,lo8(2)
 1890 0018 00F4      		brsh .L140
 1891               	.LVL160:
 1892               	.L143:
 1893               		.loc 1 525 5 view .LVU404
 1894 001a 80E0      		ldi r24,0
 1895 001c 0895      		ret
 1896               	.LVL161:
 1897               	.L139:
 1898               		.loc 1 525 5 view .LVU405
 1899 001e 2A5F      		subi r18,lo8(-(6))
 1900 0020 2F70      		andi r18,lo8(15)
 1901 0022 2230      		cpi r18,lo8(2)
 1902 0024 00F4      		brsh .L143
 1903               	.L140:
 526:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 527:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 528:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 529:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 530:./tmk_keyboard/tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 1904               		.loc 1 530 13 is_stmt 1 view .LVU406
 1905 0026 81E0      		ldi r24,lo8(1)
 1906               	.LVL162:
 1907               		.loc 1 530 13 is_stmt 0 view .LVU407
 1908 0028 303E      		cpi r19,lo8(-32)
 1909 002a 00F0      		brlo .L141
 1910 002c 303F      		cpi r19,lo8(-16)
 1911 002e 01F4      		brne .L143
 1912               	.L141:
 1913               	/* epilogue start */
 531:./tmk_keyboard/tmk_core/common/action.c ****                 case 0x00 ... 0xdf:
 532:./tmk_keyboard/tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 533:./tmk_keyboard/tmk_core/common/action.c ****                     return true;
 534:./tmk_keyboard/tmk_core/common/action.c ****             }
 535:./tmk_keyboard/tmk_core/common/action.c ****             return false;
 536:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_MACRO:
 537:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_FUNCTION:
 538:./tmk_keyboard/tmk_core/common/action.c ****             if (action.func.opt & FUNC_TAP) { return true; }
 539:./tmk_keyboard/tmk_core/common/action.c ****             return false;
 540:./tmk_keyboard/tmk_core/common/action.c ****     }
 541:./tmk_keyboard/tmk_core/common/action.c ****     return false;
 542:./tmk_keyboard/tmk_core/common/action.c **** }
 1914               		.loc 1 542 1 view .LVU408
 1915 0030 0895      		ret
 1916               	.LVL163:
 1917               	.L138:
 525:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 1918               		.loc 1 525 5 view .LVU409
 1919 0032 2F30      		cpi r18,lo8(15)
 1920 0034 01F4      		brne .L143
 1921               	.L137:
 538:./tmk_keyboard/tmk_core/common/action.c ****             return false;
 1922               		.loc 1 538 13 is_stmt 1 view .LVU410
 538:./tmk_keyboard/tmk_core/common/action.c ****             return false;
 1923               		.loc 1 538 16 is_stmt 0 view .LVU411
 1924 0036 93FB      		bst r25,3
 1925 0038 8827      		clr r24
 1926 003a 80F9      		bld r24,0
 1927 003c 0895      		ret
 1928               		.cfi_endproc
 1929               	.LFE12:
 1931               		.section	.text.debug_event,"ax",@progbits
 1932               	.global	debug_event
 1934               	debug_event:
 1935               	.LFB13:
 543:./tmk_keyboard/tmk_core/common/action.c **** 
 544:./tmk_keyboard/tmk_core/common/action.c **** 
 545:./tmk_keyboard/tmk_core/common/action.c **** /*
 546:./tmk_keyboard/tmk_core/common/action.c ****  * debug print
 547:./tmk_keyboard/tmk_core/common/action.c ****  */
 548:./tmk_keyboard/tmk_core/common/action.c **** void debug_event(keyevent_t event)
 549:./tmk_keyboard/tmk_core/common/action.c **** {
 1936               		.loc 1 549 1 is_stmt 1 view -0
 1937               		.cfi_startproc
 1938 0000 CF93      		push r28
 1939               	.LCFI17:
 1940               		.cfi_def_cfa_offset 3
 1941               		.cfi_offset 28, -2
 1942 0002 DF93      		push r29
 1943               	.LCFI18:
 1944               		.cfi_def_cfa_offset 4
 1945               		.cfi_offset 29, -3
 1946 0004 00D0      		rcall .
 1947 0006 00D0      		rcall .
 1948 0008 0F92      		push __tmp_reg__
 1949               	.LCFI19:
 1950               		.cfi_def_cfa_offset 9
 1951 000a CDB7      		in r28,__SP_L__
 1952 000c DEB7      		in r29,__SP_H__
 1953               	.LCFI20:
 1954               		.cfi_def_cfa_register 28
 1955               	/* prologue: function */
 1956               	/* frame size = 5 */
 1957               	/* stack size = 7 */
 1958               	.L__stack_usage = 7
 550:./tmk_keyboard/tmk_core/common/action.c ****     dprintf("%04X%c(%u)", (event.key.row<<8 | event.key.col), (event.pressed ? 'd' : 'u'), event.ti
 1959               		.loc 1 550 5 view .LVU413
 1960               	/* epilogue start */
 551:./tmk_keyboard/tmk_core/common/action.c **** }
 1961               		.loc 1 551 1 is_stmt 0 view .LVU414
 1962 000e 0F90      		pop __tmp_reg__
 1963 0010 0F90      		pop __tmp_reg__
 1964 0012 0F90      		pop __tmp_reg__
 1965 0014 0F90      		pop __tmp_reg__
 1966 0016 0F90      		pop __tmp_reg__
 1967 0018 DF91      		pop r29
 1968 001a CF91      		pop r28
 1969 001c 0895      		ret
 1970               		.cfi_endproc
 1971               	.LFE13:
 1973               		.section	.text.debug_record,"ax",@progbits
 1974               	.global	debug_record
 1976               	debug_record:
 1977               	.LFB14:
 552:./tmk_keyboard/tmk_core/common/action.c **** 
 553:./tmk_keyboard/tmk_core/common/action.c **** void debug_record(keyrecord_t record)
 554:./tmk_keyboard/tmk_core/common/action.c **** {
 1978               		.loc 1 554 1 is_stmt 1 view -0
 1979               		.cfi_startproc
 1980 0000 CF93      		push r28
 1981               	.LCFI21:
 1982               		.cfi_def_cfa_offset 3
 1983               		.cfi_offset 28, -2
 1984 0002 DF93      		push r29
 1985               	.LCFI22:
 1986               		.cfi_def_cfa_offset 4
 1987               		.cfi_offset 29, -3
 1988 0004 00D0      		rcall .
 1989 0006 00D0      		rcall .
 1990 0008 00D0      		rcall .
 1991               	.LCFI23:
 1992               		.cfi_def_cfa_offset 10
 1993 000a CDB7      		in r28,__SP_L__
 1994 000c DEB7      		in r29,__SP_H__
 1995               	.LCFI24:
 1996               		.cfi_def_cfa_register 28
 1997               	/* prologue: function */
 1998               	/* frame size = 6 */
 1999               	/* stack size = 8 */
 2000               	.L__stack_usage = 8
 555:./tmk_keyboard/tmk_core/common/action.c ****     debug_event(record.event);
 2001               		.loc 1 555 5 view .LVU416
 556:./tmk_keyboard/tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 557:./tmk_keyboard/tmk_core/common/action.c ****     dprintf(":%u%c", record.tap.count, (record.tap.interrupted ? '-' : ' '));
 2002               		.loc 1 557 5 view .LVU417
 2003               	/* epilogue start */
 558:./tmk_keyboard/tmk_core/common/action.c **** #endif
 559:./tmk_keyboard/tmk_core/common/action.c **** }
 2004               		.loc 1 559 1 is_stmt 0 view .LVU418
 2005 000e 2696      		adiw r28,6
 2006 0010 0FB6      		in __tmp_reg__,__SREG__
 2007 0012 F894      		cli
 2008 0014 DEBF      		out __SP_H__,r29
 2009 0016 0FBE      		out __SREG__,__tmp_reg__
 2010 0018 CDBF      		out __SP_L__,r28
 2011 001a DF91      		pop r29
 2012 001c CF91      		pop r28
 2013 001e 0895      		ret
 2014               		.cfi_endproc
 2015               	.LFE14:
 2017               		.section	.text.debug_action,"ax",@progbits
 2018               	.global	debug_action
 2020               	debug_action:
 2021               	.LVL164:
 2022               	.LFB15:
 560:./tmk_keyboard/tmk_core/common/action.c **** 
 561:./tmk_keyboard/tmk_core/common/action.c **** void debug_action(action_t action)
 562:./tmk_keyboard/tmk_core/common/action.c **** {
 2023               		.loc 1 562 1 is_stmt 1 view -0
 2024               		.cfi_startproc
 2025               	/* prologue: function */
 2026               	/* frame size = 0 */
 2027               	/* stack size = 0 */
 2028               	.L__stack_usage = 0
 563:./tmk_keyboard/tmk_core/common/action.c ****     switch (action.kind.id) {
 2029               		.loc 1 563 5 view .LVU420
 564:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LMODS:             dprint("ACT_LMODS");             break;
 565:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_RMODS:             dprint("ACT_RMODS");             break;
 566:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LMODS_TAP:         dprint("ACT_LMODS_TAP");         break;
 567:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_RMODS_TAP:         dprint("ACT_RMODS_TAP");         break;
 568:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_USAGE:             dprint("ACT_USAGE");             break;
 569:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_MOUSEKEY:          dprint("ACT_MOUSEKEY");          break;
 570:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER:             dprint("ACT_LAYER");             break;
 571:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER_TAP:         dprint("ACT_LAYER_TAP");         break;
 572:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:     dprint("ACT_LAYER_TAP_EXT");     break;
 573:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_MACRO:             dprint("ACT_MACRO");             break;
 574:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_COMMAND:           dprint("ACT_COMMAND");           break;
 575:./tmk_keyboard/tmk_core/common/action.c ****         case ACT_FUNCTION:          dprint("ACT_FUNCTION");          break;
 576:./tmk_keyboard/tmk_core/common/action.c ****         default:                    dprint("UNKNOWN");               break;
 577:./tmk_keyboard/tmk_core/common/action.c ****     }
 578:./tmk_keyboard/tmk_core/common/action.c ****     dprintf("[%X:%02X]", action.kind.param>>8, action.kind.param&0xff);
 2030               		.loc 1 578 5 view .LVU421
 2031               	/* epilogue start */
 579:./tmk_keyboard/tmk_core/common/action.c **** }
 2032               		.loc 1 579 1 is_stmt 0 view .LVU422
 2033 0000 0895      		ret
 2034               		.cfi_endproc
 2035               	.LFE15:
 2037               		.section	.rodata.CSWTCH.32,"a"
 2040               	CSWTCH.32:
 2041 0000 E200      		.word	226
 2042 0002 E900      		.word	233
 2043 0004 EA00      		.word	234
 2044 0006 B500      		.word	181
 2045 0008 B600      		.word	182
 2046 000a B300      		.word	179
 2047 000c B400      		.word	180
 2048 000e B700      		.word	183
 2049 0010 CD00      		.word	205
 2050 0012 CC00      		.word	204
 2051 0014 8301      		.word	387
 2052 0016 8A01      		.word	394
 2053 0018 9201      		.word	402
 2054 001a 9401      		.word	404
 2055 001c 2102      		.word	545
 2056 001e 2302      		.word	547
 2057 0020 2402      		.word	548
 2058 0022 2502      		.word	549
 2059 0024 2602      		.word	550
 2060 0026 2702      		.word	551
 2061               		.text
 2062               	.Letext0:
 2063               		.file 3 "/usr/avr/include/stdint.h"
 2064               		.file 4 "./tmk_keyboard/tmk_core/common/keycode.h"
 2065               		.file 5 "./tmk_keyboard/tmk_core/common/action_code.h"
 2066               		.file 6 "./tmk_keyboard/tmk_core/common/action_macro.h"
 2067               		.file 7 "./tmk_keyboard/tmk_core/common/action.h"
 2068               		.file 8 "./tmk_keyboard/tmk_core/common/action_util.h"
 2069               		.file 9 "./tmk_keyboard/tmk_core/common/command.h"
 2070               		.file 10 "./tmk_keyboard/tmk_core/common/action_layer.h"
 2071               		.file 11 "./tmk_keyboard/tmk_core/common/host.h"
 2072               		.file 12 "./tmk_keyboard/tmk_core/common/action_tapping.h"
 2073               		.file 13 "./tmk_keyboard/tmk_core/common/hook.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action.c
     /tmp/ccoDpb2l.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccoDpb2l.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccoDpb2l.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccoDpb2l.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccoDpb2l.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccoDpb2l.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccoDpb2l.s:14     .text.action_exec:0000000000000000 action_exec
     /tmp/ccoDpb2l.s:129    .text.register_code:0000000000000000 register_code
     /tmp/ccoDpb2l.s:2040   .rodata.CSWTCH.32:0000000000000000 CSWTCH.32
     /tmp/ccoDpb2l.s:270    .text.unregister_code:0000000000000000 unregister_code
     /tmp/ccoDpb2l.s:360    .text.register_mods:0000000000000000 register_mods
     /tmp/ccoDpb2l.s:389    .text.unregister_mods:0000000000000000 unregister_mods
     /tmp/ccoDpb2l.s:418    .text.process_action:0000000000000000 process_action
     /tmp/ccoDpb2l.s:1809   .text.clear_keyboard_but_mods:0000000000000000 clear_keyboard_but_mods
     /tmp/ccoDpb2l.s:1842   .text.clear_keyboard:0000000000000000 clear_keyboard
     /tmp/ccoDpb2l.s:1862   .text.is_tap_key:0000000000000000 is_tap_key
     /tmp/ccoDpb2l.s:1934   .text.debug_event:0000000000000000 debug_event
     /tmp/ccoDpb2l.s:1976   .text.debug_record:0000000000000000 debug_record
     /tmp/ccoDpb2l.s:2020   .text.debug_action:0000000000000000 debug_action

UNDEFINED SYMBOLS
action_tapping_process
hook_matrix_change
command_proc
add_key
send_keyboard_report
add_mods
host_system_send
host_consumer_send
del_key
del_mods
add_weak_mods
del_weak_mods
set_oneshot_mods
clear_oneshot_mods
get_mods
default_layer_and
default_layer_or
default_layer_xor
layer_and
layer_or
layer_xor
layer_on
layer_off
layer_invert
layer_move
layer_clear
action_get_macro
action_macro_play
action_function
layer_switch_get_action
layer_debug
default_layer_debug
__tablejump2__
clear_weak_mods
clear_keys
clear_mods
__do_copy_data
